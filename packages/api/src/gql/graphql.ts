/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** GraphQL representation of BigInt */
  BigInt: { input: any; output: any; }
  /** GraphQL representation of Bytes */
  Bytes: { input: any; output: any; }
  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */
  DateTime: { input: any; output: any; }
  /** The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSONObject: { input: any; output: any; }
};

export type AnnouncingPeriodStartedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum AnnouncingPeriodStartedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type AnnouncingPeriodStartedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type AnnouncingPeriodStartedEventWhereInput = {
  AND?: InputMaybe<Array<AnnouncingPeriodStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<AnnouncingPeriodStartedEventWhereInput>>;
  OR?: InputMaybe<Array<AnnouncingPeriodStartedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AnnouncingPeriodStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AppCreateInput = {
  authKey?: InputMaybe<Scalars['String']['input']>;
  bigIcon?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  mediumIcon?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  oneLiner?: InputMaybe<Scalars['String']['input']>;
  ownerMember: Scalars['ID']['input'];
  platforms?: InputMaybe<Array<Scalars['String']['input']>>;
  smallIcon?: InputMaybe<Scalars['String']['input']>;
  termsOfService?: InputMaybe<Scalars['String']['input']>;
  useUri?: InputMaybe<Scalars['String']['input']>;
  websiteUrl?: InputMaybe<Scalars['String']['input']>;
};

export enum AppOrderByInput {
  AuthKeyAsc = 'authKey_ASC',
  AuthKeyDesc = 'authKey_DESC',
  BigIconAsc = 'bigIcon_ASC',
  BigIconDesc = 'bigIcon_DESC',
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  MediumIconAsc = 'mediumIcon_ASC',
  MediumIconDesc = 'mediumIcon_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  OneLinerAsc = 'oneLiner_ASC',
  OneLinerDesc = 'oneLiner_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  SmallIconAsc = 'smallIcon_ASC',
  SmallIconDesc = 'smallIcon_DESC',
  TermsOfServiceAsc = 'termsOfService_ASC',
  TermsOfServiceDesc = 'termsOfService_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  UseUriAsc = 'useUri_ASC',
  UseUriDesc = 'useUri_DESC',
  WebsiteUrlAsc = 'websiteUrl_ASC',
  WebsiteUrlDesc = 'websiteUrl_DESC'
}

export type AppUpdateInput = {
  authKey?: InputMaybe<Scalars['String']['input']>;
  bigIcon?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  mediumIcon?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  oneLiner?: InputMaybe<Scalars['String']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  platforms?: InputMaybe<Array<Scalars['String']['input']>>;
  smallIcon?: InputMaybe<Scalars['String']['input']>;
  termsOfService?: InputMaybe<Scalars['String']['input']>;
  useUri?: InputMaybe<Scalars['String']['input']>;
  websiteUrl?: InputMaybe<Scalars['String']['input']>;
};

export type AppWhereInput = {
  AND?: InputMaybe<Array<AppWhereInput>>;
  NOT?: InputMaybe<Array<AppWhereInput>>;
  OR?: InputMaybe<Array<AppWhereInput>>;
  appChannels_every?: InputMaybe<ChannelWhereInput>;
  appChannels_none?: InputMaybe<ChannelWhereInput>;
  appChannels_some?: InputMaybe<ChannelWhereInput>;
  appVideos_every?: InputMaybe<VideoWhereInput>;
  appVideos_none?: InputMaybe<VideoWhereInput>;
  appVideos_some?: InputMaybe<VideoWhereInput>;
  authKey_contains?: InputMaybe<Scalars['String']['input']>;
  authKey_endsWith?: InputMaybe<Scalars['String']['input']>;
  authKey_eq?: InputMaybe<Scalars['String']['input']>;
  authKey_in?: InputMaybe<Array<Scalars['String']['input']>>;
  authKey_startsWith?: InputMaybe<Scalars['String']['input']>;
  bigIcon_contains?: InputMaybe<Scalars['String']['input']>;
  bigIcon_endsWith?: InputMaybe<Scalars['String']['input']>;
  bigIcon_eq?: InputMaybe<Scalars['String']['input']>;
  bigIcon_in?: InputMaybe<Array<Scalars['String']['input']>>;
  bigIcon_startsWith?: InputMaybe<Scalars['String']['input']>;
  category_contains?: InputMaybe<Scalars['String']['input']>;
  category_endsWith?: InputMaybe<Scalars['String']['input']>;
  category_eq?: InputMaybe<Scalars['String']['input']>;
  category_in?: InputMaybe<Array<Scalars['String']['input']>>;
  category_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  mediumIcon_contains?: InputMaybe<Scalars['String']['input']>;
  mediumIcon_endsWith?: InputMaybe<Scalars['String']['input']>;
  mediumIcon_eq?: InputMaybe<Scalars['String']['input']>;
  mediumIcon_in?: InputMaybe<Array<Scalars['String']['input']>>;
  mediumIcon_startsWith?: InputMaybe<Scalars['String']['input']>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_endsWith?: InputMaybe<Scalars['String']['input']>;
  name_eq?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_startsWith?: InputMaybe<Scalars['String']['input']>;
  oneLiner_contains?: InputMaybe<Scalars['String']['input']>;
  oneLiner_endsWith?: InputMaybe<Scalars['String']['input']>;
  oneLiner_eq?: InputMaybe<Scalars['String']['input']>;
  oneLiner_in?: InputMaybe<Array<Scalars['String']['input']>>;
  oneLiner_startsWith?: InputMaybe<Scalars['String']['input']>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  platforms_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  platforms_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  platforms_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  smallIcon_contains?: InputMaybe<Scalars['String']['input']>;
  smallIcon_endsWith?: InputMaybe<Scalars['String']['input']>;
  smallIcon_eq?: InputMaybe<Scalars['String']['input']>;
  smallIcon_in?: InputMaybe<Array<Scalars['String']['input']>>;
  smallIcon_startsWith?: InputMaybe<Scalars['String']['input']>;
  termsOfService_contains?: InputMaybe<Scalars['String']['input']>;
  termsOfService_endsWith?: InputMaybe<Scalars['String']['input']>;
  termsOfService_eq?: InputMaybe<Scalars['String']['input']>;
  termsOfService_in?: InputMaybe<Array<Scalars['String']['input']>>;
  termsOfService_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  useUri_contains?: InputMaybe<Scalars['String']['input']>;
  useUri_endsWith?: InputMaybe<Scalars['String']['input']>;
  useUri_eq?: InputMaybe<Scalars['String']['input']>;
  useUri_in?: InputMaybe<Array<Scalars['String']['input']>>;
  useUri_startsWith?: InputMaybe<Scalars['String']['input']>;
  websiteUrl_contains?: InputMaybe<Scalars['String']['input']>;
  websiteUrl_endsWith?: InputMaybe<Scalars['String']['input']>;
  websiteUrl_eq?: InputMaybe<Scalars['String']['input']>;
  websiteUrl_in?: InputMaybe<Array<Scalars['String']['input']>>;
  websiteUrl_startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type AppWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ApplicationFormQuestionAnswerCreateInput = {
  answer: Scalars['String']['input'];
  application: Scalars['ID']['input'];
  question: Scalars['ID']['input'];
};

export enum ApplicationFormQuestionAnswerOrderByInput {
  AnswerAsc = 'answer_ASC',
  AnswerDesc = 'answer_DESC',
  ApplicationAsc = 'application_ASC',
  ApplicationDesc = 'application_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  QuestionAsc = 'question_ASC',
  QuestionDesc = 'question_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ApplicationFormQuestionAnswerUpdateInput = {
  answer?: InputMaybe<Scalars['String']['input']>;
  application?: InputMaybe<Scalars['ID']['input']>;
  question?: InputMaybe<Scalars['ID']['input']>;
};

export type ApplicationFormQuestionAnswerWhereInput = {
  AND?: InputMaybe<Array<ApplicationFormQuestionAnswerWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationFormQuestionAnswerWhereInput>>;
  OR?: InputMaybe<Array<ApplicationFormQuestionAnswerWhereInput>>;
  answer_contains?: InputMaybe<Scalars['String']['input']>;
  answer_endsWith?: InputMaybe<Scalars['String']['input']>;
  answer_eq?: InputMaybe<Scalars['String']['input']>;
  answer_in?: InputMaybe<Array<Scalars['String']['input']>>;
  answer_startsWith?: InputMaybe<Scalars['String']['input']>;
  application?: InputMaybe<WorkingGroupApplicationWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  question?: InputMaybe<ApplicationFormQuestionWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ApplicationFormQuestionAnswerWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ApplicationFormQuestionCreateInput = {
  index: Scalars['Float']['input'];
  openingMetadata: Scalars['ID']['input'];
  question?: InputMaybe<Scalars['String']['input']>;
  type: ApplicationFormQuestionType;
};

export enum ApplicationFormQuestionOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IndexAsc = 'index_ASC',
  IndexDesc = 'index_DESC',
  OpeningMetadataAsc = 'openingMetadata_ASC',
  OpeningMetadataDesc = 'openingMetadata_DESC',
  QuestionAsc = 'question_ASC',
  QuestionDesc = 'question_DESC',
  TypeAsc = 'type_ASC',
  TypeDesc = 'type_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export enum ApplicationFormQuestionType {
  Text = 'TEXT',
  Textarea = 'TEXTAREA'
}

export type ApplicationFormQuestionUpdateInput = {
  index?: InputMaybe<Scalars['Float']['input']>;
  openingMetadata?: InputMaybe<Scalars['ID']['input']>;
  question?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<ApplicationFormQuestionType>;
};

export type ApplicationFormQuestionWhereInput = {
  AND?: InputMaybe<Array<ApplicationFormQuestionWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationFormQuestionWhereInput>>;
  OR?: InputMaybe<Array<ApplicationFormQuestionWhereInput>>;
  applicationformquestionanswerquestion_every?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  applicationformquestionanswerquestion_none?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  applicationformquestionanswerquestion_some?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  index_eq?: InputMaybe<Scalars['Int']['input']>;
  index_gt?: InputMaybe<Scalars['Int']['input']>;
  index_gte?: InputMaybe<Scalars['Int']['input']>;
  index_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  index_lt?: InputMaybe<Scalars['Int']['input']>;
  index_lte?: InputMaybe<Scalars['Int']['input']>;
  openingMetadata?: InputMaybe<WorkingGroupOpeningMetadataWhereInput>;
  question_contains?: InputMaybe<Scalars['String']['input']>;
  question_endsWith?: InputMaybe<Scalars['String']['input']>;
  question_eq?: InputMaybe<Scalars['String']['input']>;
  question_in?: InputMaybe<Array<Scalars['String']['input']>>;
  question_startsWith?: InputMaybe<Scalars['String']['input']>;
  type_eq?: InputMaybe<ApplicationFormQuestionType>;
  type_in?: InputMaybe<Array<ApplicationFormQuestionType>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ApplicationFormQuestionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ApplicationWithdrawnEventCreateInput = {
  application: Scalars['ID']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum ApplicationWithdrawnEventOrderByInput {
  ApplicationAsc = 'application_ASC',
  ApplicationDesc = 'application_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ApplicationWithdrawnEventUpdateInput = {
  application?: InputMaybe<Scalars['ID']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type ApplicationWithdrawnEventWhereInput = {
  AND?: InputMaybe<Array<ApplicationWithdrawnEventWhereInput>>;
  NOT?: InputMaybe<Array<ApplicationWithdrawnEventWhereInput>>;
  OR?: InputMaybe<Array<ApplicationWithdrawnEventWhereInput>>;
  application?: InputMaybe<WorkingGroupApplicationWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ApplicationWithdrawnEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AppliedOnOpeningEventCreateInput = {
  application: Scalars['ID']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  opening: Scalars['ID']['input'];
};

export enum AppliedOnOpeningEventOrderByInput {
  ApplicationAsc = 'application_ASC',
  ApplicationDesc = 'application_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OpeningAsc = 'opening_ASC',
  OpeningDesc = 'opening_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type AppliedOnOpeningEventUpdateInput = {
  application?: InputMaybe<Scalars['ID']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  opening?: InputMaybe<Scalars['ID']['input']>;
};

export type AppliedOnOpeningEventWhereInput = {
  AND?: InputMaybe<Array<AppliedOnOpeningEventWhereInput>>;
  NOT?: InputMaybe<Array<AppliedOnOpeningEventWhereInput>>;
  OR?: InputMaybe<Array<AppliedOnOpeningEventWhereInput>>;
  application?: InputMaybe<WorkingGroupApplicationWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  opening?: InputMaybe<WorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AppliedOnOpeningEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AuctionBidCanceledEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum AuctionBidCanceledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type AuctionBidCanceledEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type AuctionBidCanceledEventWhereInput = {
  AND?: InputMaybe<Array<AuctionBidCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<AuctionBidCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<AuctionBidCanceledEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type AuctionBidCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AuctionBidMadeEventCreateInput = {
  bidAmount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  previousTopBid?: InputMaybe<Scalars['ID']['input']>;
  previousTopBidder?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum AuctionBidMadeEventOrderByInput {
  BidAmountAsc = 'bidAmount_ASC',
  BidAmountDesc = 'bidAmount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PreviousTopBidAsc = 'previousTopBid_ASC',
  PreviousTopBidDesc = 'previousTopBid_DESC',
  PreviousTopBidderAsc = 'previousTopBidder_ASC',
  PreviousTopBidderDesc = 'previousTopBidder_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type AuctionBidMadeEventUpdateInput = {
  bidAmount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  previousTopBid?: InputMaybe<Scalars['ID']['input']>;
  previousTopBidder?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type AuctionBidMadeEventWhereInput = {
  AND?: InputMaybe<Array<AuctionBidMadeEventWhereInput>>;
  NOT?: InputMaybe<Array<AuctionBidMadeEventWhereInput>>;
  OR?: InputMaybe<Array<AuctionBidMadeEventWhereInput>>;
  bidAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  bidAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  bidAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  bidAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  bidAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  bidAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  previousTopBid?: InputMaybe<BidWhereInput>;
  previousTopBidder?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type AuctionBidMadeEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AuctionCanceledEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum AuctionCanceledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type AuctionCanceledEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type AuctionCanceledEventWhereInput = {
  AND?: InputMaybe<Array<AuctionCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<AuctionCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<AuctionCanceledEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type AuctionCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type AuctionCreateInput = {
  auctionType: Scalars['JSONObject']['input'];
  buyNowPrice?: InputMaybe<Scalars['String']['input']>;
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  initialOwner?: InputMaybe<Scalars['ID']['input']>;
  isCanceled: Scalars['Boolean']['input'];
  isCompleted: Scalars['Boolean']['input'];
  nft: Scalars['ID']['input'];
  startingPrice: Scalars['String']['input'];
  startsAtBlock: Scalars['Float']['input'];
  topBid?: InputMaybe<Scalars['ID']['input']>;
  winningMember?: InputMaybe<Scalars['ID']['input']>;
};

export enum AuctionOrderByInput {
  BuyNowPriceAsc = 'buyNowPrice_ASC',
  BuyNowPriceDesc = 'buyNowPrice_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EndedAtBlockAsc = 'endedAtBlock_ASC',
  EndedAtBlockDesc = 'endedAtBlock_DESC',
  InitialOwnerAsc = 'initialOwner_ASC',
  InitialOwnerDesc = 'initialOwner_DESC',
  IsCanceledAsc = 'isCanceled_ASC',
  IsCanceledDesc = 'isCanceled_DESC',
  IsCompletedAsc = 'isCompleted_ASC',
  IsCompletedDesc = 'isCompleted_DESC',
  NftAsc = 'nft_ASC',
  NftDesc = 'nft_DESC',
  StartingPriceAsc = 'startingPrice_ASC',
  StartingPriceDesc = 'startingPrice_DESC',
  StartsAtBlockAsc = 'startsAtBlock_ASC',
  StartsAtBlockDesc = 'startsAtBlock_DESC',
  TopBidAsc = 'topBid_ASC',
  TopBidDesc = 'topBid_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WinningMemberAsc = 'winningMember_ASC',
  WinningMemberDesc = 'winningMember_DESC'
}

export type AuctionUpdateInput = {
  auctionType?: InputMaybe<Scalars['JSONObject']['input']>;
  buyNowPrice?: InputMaybe<Scalars['String']['input']>;
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  initialOwner?: InputMaybe<Scalars['ID']['input']>;
  isCanceled?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  nft?: InputMaybe<Scalars['ID']['input']>;
  startingPrice?: InputMaybe<Scalars['String']['input']>;
  startsAtBlock?: InputMaybe<Scalars['Float']['input']>;
  topBid?: InputMaybe<Scalars['ID']['input']>;
  winningMember?: InputMaybe<Scalars['ID']['input']>;
};

export type AuctionWhereInput = {
  AND?: InputMaybe<Array<AuctionWhereInput>>;
  NOT?: InputMaybe<Array<AuctionWhereInput>>;
  OR?: InputMaybe<Array<AuctionWhereInput>>;
  auctionType_json?: InputMaybe<Scalars['JSONObject']['input']>;
  bids_every?: InputMaybe<BidWhereInput>;
  bids_none?: InputMaybe<BidWhereInput>;
  bids_some?: InputMaybe<BidWhereInput>;
  buyNowPrice_eq?: InputMaybe<Scalars['BigInt']['input']>;
  buyNowPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  buyNowPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  buyNowPrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  buyNowPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  buyNowPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  endedAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  endedAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  englishauctionstartedeventauction_every?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventauction_none?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventauction_some?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  initialOwner?: InputMaybe<MembershipWhereInput>;
  isCanceled_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCanceled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isCompleted_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCompleted_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  nft?: InputMaybe<OwnedNftWhereInput>;
  openauctionstartedeventauction_every?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventauction_none?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventauction_some?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  ownednfttransactionalStatusAuction_every?: InputMaybe<OwnedNftWhereInput>;
  ownednfttransactionalStatusAuction_none?: InputMaybe<OwnedNftWhereInput>;
  ownednfttransactionalStatusAuction_some?: InputMaybe<OwnedNftWhereInput>;
  startingPrice_eq?: InputMaybe<Scalars['BigInt']['input']>;
  startingPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  startingPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  startingPrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  startingPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  startingPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  startsAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  startsAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  startsAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  startsAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  startsAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  startsAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  topBid?: InputMaybe<BidWhereInput>;
  transactionalstatusupdatetransactionalStatusAuction_every?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  transactionalstatusupdatetransactionalStatusAuction_none?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  transactionalstatusupdatetransactionalStatusAuction_some?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  whitelistedMembers_every?: InputMaybe<MembershipWhereInput>;
  whitelistedMembers_none?: InputMaybe<MembershipWhereInput>;
  whitelistedMembers_some?: InputMaybe<MembershipWhereInput>;
  winningMember?: InputMaybe<MembershipWhereInput>;
};

export type AuctionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BaseWhereInput = {
  createdAt_eq?: InputMaybe<Scalars['String']['input']>;
  createdAt_gt?: InputMaybe<Scalars['String']['input']>;
  createdAt_gte?: InputMaybe<Scalars['String']['input']>;
  createdAt_lt?: InputMaybe<Scalars['String']['input']>;
  createdAt_lte?: InputMaybe<Scalars['String']['input']>;
  createdById_eq?: InputMaybe<Scalars['String']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['String']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['String']['input']>;
  deletedById_eq?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['String']['input']>;
  id_in?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['String']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['String']['input']>;
  updatedById_eq?: InputMaybe<Scalars['String']['input']>;
};

export type BidCreateInput = {
  amount: Scalars['String']['input'];
  auction: Scalars['ID']['input'];
  bidder: Scalars['ID']['input'];
  createdInBlock: Scalars['Float']['input'];
  indexInBlock: Scalars['Float']['input'];
  isCanceled: Scalars['Boolean']['input'];
  nft: Scalars['ID']['input'];
};

export type BidMadeCompletingAuctionEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  previousTopBid?: InputMaybe<Scalars['ID']['input']>;
  previousTopBidder?: InputMaybe<Scalars['ID']['input']>;
  price: Scalars['String']['input'];
  video: Scalars['ID']['input'];
  winningBid: Scalars['ID']['input'];
};

export enum BidMadeCompletingAuctionEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PreviousTopBidAsc = 'previousTopBid_ASC',
  PreviousTopBidDesc = 'previousTopBid_DESC',
  PreviousTopBidderAsc = 'previousTopBidder_ASC',
  PreviousTopBidderDesc = 'previousTopBidder_DESC',
  PriceAsc = 'price_ASC',
  PriceDesc = 'price_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC',
  WinningBidAsc = 'winningBid_ASC',
  WinningBidDesc = 'winningBid_DESC'
}

export type BidMadeCompletingAuctionEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  previousTopBid?: InputMaybe<Scalars['ID']['input']>;
  previousTopBidder?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  winningBid?: InputMaybe<Scalars['ID']['input']>;
};

export type BidMadeCompletingAuctionEventWhereInput = {
  AND?: InputMaybe<Array<BidMadeCompletingAuctionEventWhereInput>>;
  NOT?: InputMaybe<Array<BidMadeCompletingAuctionEventWhereInput>>;
  OR?: InputMaybe<Array<BidMadeCompletingAuctionEventWhereInput>>;
  bidders_every?: InputMaybe<MembershipWhereInput>;
  bidders_none?: InputMaybe<MembershipWhereInput>;
  bidders_some?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  previousTopBid?: InputMaybe<BidWhereInput>;
  previousTopBidder?: InputMaybe<MembershipWhereInput>;
  price_eq?: InputMaybe<Scalars['BigInt']['input']>;
  price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  price_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  winningBid?: InputMaybe<BidWhereInput>;
};

export type BidMadeCompletingAuctionEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum BidOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  AuctionAsc = 'auction_ASC',
  AuctionDesc = 'auction_DESC',
  BidderAsc = 'bidder_ASC',
  BidderDesc = 'bidder_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsCanceledAsc = 'isCanceled_ASC',
  IsCanceledDesc = 'isCanceled_DESC',
  NftAsc = 'nft_ASC',
  NftDesc = 'nft_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BidUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  auction?: InputMaybe<Scalars['ID']['input']>;
  bidder?: InputMaybe<Scalars['ID']['input']>;
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isCanceled?: InputMaybe<Scalars['Boolean']['input']>;
  nft?: InputMaybe<Scalars['ID']['input']>;
};

export type BidWhereInput = {
  AND?: InputMaybe<Array<BidWhereInput>>;
  NOT?: InputMaybe<Array<BidWhereInput>>;
  OR?: InputMaybe<Array<BidWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  auction?: InputMaybe<AuctionWhereInput>;
  auctionTopBid?: InputMaybe<AuctionWhereInput>;
  auctionbidmadeeventpreviousTopBid_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventpreviousTopBid_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventpreviousTopBid_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  bidder?: InputMaybe<MembershipWhereInput>;
  bidmadecompletingauctioneventpreviousTopBid_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventpreviousTopBid_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventpreviousTopBid_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventwinningBid_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventwinningBid_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventwinningBid_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  englishauctionsettledeventwinningBid_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventwinningBid_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventwinningBid_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isCanceled_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCanceled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  nft?: InputMaybe<OwnedNftWhereInput>;
  openauctionbidacceptedeventwinningBid_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventwinningBid_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventwinningBid_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BidWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyCanceledEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyCanceledEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyCanceledEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyCanceledEventWhereInput = {
  AND?: InputMaybe<Array<BountyCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<BountyCanceledEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyContributionCreateInput = {
  amount: Scalars['String']['input'];
  bounty: Scalars['ID']['input'];
  contributor?: InputMaybe<Scalars['ID']['input']>;
  contributorId?: InputMaybe<Scalars['String']['input']>;
};

export enum BountyContributionOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  ContributorIdAsc = 'contributorId_ASC',
  ContributorIdDesc = 'contributorId_DESC',
  ContributorAsc = 'contributor_ASC',
  ContributorDesc = 'contributor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyContributionUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  bounty?: InputMaybe<Scalars['ID']['input']>;
  contributor?: InputMaybe<Scalars['ID']['input']>;
  contributorId?: InputMaybe<Scalars['String']['input']>;
};

export type BountyContributionWhereInput = {
  AND?: InputMaybe<Array<BountyContributionWhereInput>>;
  NOT?: InputMaybe<Array<BountyContributionWhereInput>>;
  OR?: InputMaybe<Array<BountyContributionWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  bounty?: InputMaybe<BountyWhereInput>;
  bountyFundedEvents_every?: InputMaybe<BountyFundedEventWhereInput>;
  bountyFundedEvents_none?: InputMaybe<BountyFundedEventWhereInput>;
  bountyFundedEvents_some?: InputMaybe<BountyFundedEventWhereInput>;
  contributor?: InputMaybe<MembershipWhereInput>;
  contributorId_contains?: InputMaybe<Scalars['String']['input']>;
  contributorId_endsWith?: InputMaybe<Scalars['String']['input']>;
  contributorId_eq?: InputMaybe<Scalars['String']['input']>;
  contributorId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  contributorId_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  withdrawnInEvent?: InputMaybe<BountyFundingWithdrawalEventWhereInput>;
};

export type BountyContributionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyCreateInput = {
  bannerImageUri?: InputMaybe<Scalars['String']['input']>;
  cherry: Scalars['String']['input'];
  creator?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  discussionThread?: InputMaybe<Scalars['ID']['input']>;
  entrantStake: Scalars['String']['input'];
  entrantWhitelist?: InputMaybe<Scalars['ID']['input']>;
  fundingType: Scalars['JSONObject']['input'];
  isTerminated: Scalars['Boolean']['input'];
  judgingPeriod: Scalars['Float']['input'];
  oracle?: InputMaybe<Scalars['ID']['input']>;
  stage: BountyStage;
  title?: InputMaybe<Scalars['String']['input']>;
  totalFunding: Scalars['String']['input'];
  workPeriod: Scalars['Float']['input'];
};

export type BountyCreatedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyCreatedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyCreatedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyCreatedEventWhereInput = {
  AND?: InputMaybe<Array<BountyCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<BountyCreatedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyCreatorCherryWithdrawalEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyCreatorCherryWithdrawalEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyCreatorCherryWithdrawalEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyCreatorCherryWithdrawalEventWhereInput = {
  AND?: InputMaybe<Array<BountyCreatorCherryWithdrawalEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyCreatorCherryWithdrawalEventWhereInput>>;
  OR?: InputMaybe<Array<BountyCreatorCherryWithdrawalEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyCreatorCherryWithdrawalEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyEntrantWhitelistCreateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export enum BountyEntrantWhitelistOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  PhantomAsc = 'phantom_ASC',
  PhantomDesc = 'phantom_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyEntrantWhitelistUpdateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export type BountyEntrantWhitelistWhereInput = {
  AND?: InputMaybe<Array<BountyEntrantWhitelistWhereInput>>;
  NOT?: InputMaybe<Array<BountyEntrantWhitelistWhereInput>>;
  OR?: InputMaybe<Array<BountyEntrantWhitelistWhereInput>>;
  bountyentrantWhitelist_every?: InputMaybe<BountyWhereInput>;
  bountyentrantWhitelist_none?: InputMaybe<BountyWhereInput>;
  bountyentrantWhitelist_some?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  members_every?: InputMaybe<MembershipWhereInput>;
  members_none?: InputMaybe<MembershipWhereInput>;
  members_some?: InputMaybe<MembershipWhereInput>;
  phantom_eq?: InputMaybe<Scalars['Int']['input']>;
  phantom_gt?: InputMaybe<Scalars['Int']['input']>;
  phantom_gte?: InputMaybe<Scalars['Int']['input']>;
  phantom_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  phantom_lt?: InputMaybe<Scalars['Int']['input']>;
  phantom_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyEntrantWhitelistWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyEntryCreateInput = {
  bounty: Scalars['ID']['input'];
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
  status: Scalars['JSONObject']['input'];
  workSubmitted: Scalars['Boolean']['input'];
  worker: Scalars['ID']['input'];
};

export enum BountyEntryOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  StakingAccountAsc = 'stakingAccount_ASC',
  StakingAccountDesc = 'stakingAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkSubmittedAsc = 'workSubmitted_ASC',
  WorkSubmittedDesc = 'workSubmitted_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type BountyEntryUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  workSubmitted?: InputMaybe<Scalars['Boolean']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type BountyEntryWhereInput = {
  AND?: InputMaybe<Array<BountyEntryWhereInput>>;
  NOT?: InputMaybe<Array<BountyEntryWhereInput>>;
  OR?: InputMaybe<Array<BountyEntryWhereInput>>;
  announcedInEvent?: InputMaybe<WorkEntryAnnouncedEventWhereInput>;
  bounty?: InputMaybe<BountyWhereInput>;
  cashedOutInEvent?: InputMaybe<WorkEntrantFundsWithdrawnEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  slashedInEvent?: InputMaybe<WorkEntrySlashedEventWhereInput>;
  stakingAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  withdrawnInEvent?: InputMaybe<WorkEntryWithdrawnEventWhereInput>;
  workSubmitted_eq?: InputMaybe<Scalars['Boolean']['input']>;
  workSubmitted_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  worker?: InputMaybe<MembershipWhereInput>;
  works_every?: InputMaybe<WorkSubmittedEventWhereInput>;
  works_none?: InputMaybe<WorkSubmittedEventWhereInput>;
  works_some?: InputMaybe<WorkSubmittedEventWhereInput>;
};

export type BountyEntryWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyFundedEventCreateInput = {
  contribution: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyFundedEventOrderByInput {
  ContributionAsc = 'contribution_ASC',
  ContributionDesc = 'contribution_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyFundedEventUpdateInput = {
  contribution?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyFundedEventWhereInput = {
  AND?: InputMaybe<Array<BountyFundedEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyFundedEventWhereInput>>;
  OR?: InputMaybe<Array<BountyFundedEventWhereInput>>;
  contribution?: InputMaybe<BountyContributionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyFundedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyFundingWithdrawalEventCreateInput = {
  contribution: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyFundingWithdrawalEventOrderByInput {
  ContributionAsc = 'contribution_ASC',
  ContributionDesc = 'contribution_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyFundingWithdrawalEventUpdateInput = {
  contribution?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyFundingWithdrawalEventWhereInput = {
  AND?: InputMaybe<Array<BountyFundingWithdrawalEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyFundingWithdrawalEventWhereInput>>;
  OR?: InputMaybe<Array<BountyFundingWithdrawalEventWhereInput>>;
  contribution?: InputMaybe<BountyContributionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyFundingWithdrawalEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyMaxFundingReachedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyMaxFundingReachedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyMaxFundingReachedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyMaxFundingReachedEventWhereInput = {
  AND?: InputMaybe<Array<BountyMaxFundingReachedEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyMaxFundingReachedEventWhereInput>>;
  OR?: InputMaybe<Array<BountyMaxFundingReachedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyMaxFundingReachedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum BountyOrderByInput {
  BannerImageUriAsc = 'bannerImageUri_ASC',
  BannerImageUriDesc = 'bannerImageUri_DESC',
  CherryAsc = 'cherry_ASC',
  CherryDesc = 'cherry_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatorAsc = 'creator_ASC',
  CreatorDesc = 'creator_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  DiscussionThreadAsc = 'discussionThread_ASC',
  DiscussionThreadDesc = 'discussionThread_DESC',
  EntrantStakeAsc = 'entrantStake_ASC',
  EntrantStakeDesc = 'entrantStake_DESC',
  EntrantWhitelistAsc = 'entrantWhitelist_ASC',
  EntrantWhitelistDesc = 'entrantWhitelist_DESC',
  IsTerminatedAsc = 'isTerminated_ASC',
  IsTerminatedDesc = 'isTerminated_DESC',
  JudgingPeriodAsc = 'judgingPeriod_ASC',
  JudgingPeriodDesc = 'judgingPeriod_DESC',
  OracleAsc = 'oracle_ASC',
  OracleDesc = 'oracle_DESC',
  StageAsc = 'stage_ASC',
  StageDesc = 'stage_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  TotalFundingAsc = 'totalFunding_ASC',
  TotalFundingDesc = 'totalFunding_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkPeriodAsc = 'workPeriod_ASC',
  WorkPeriodDesc = 'workPeriod_DESC'
}

export type BountyRemovedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyRemovedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyRemovedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyRemovedEventWhereInput = {
  AND?: InputMaybe<Array<BountyRemovedEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyRemovedEventWhereInput>>;
  OR?: InputMaybe<Array<BountyRemovedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyRemovedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum BountyStage {
  Expired = 'Expired',
  Failed = 'Failed',
  Funding = 'Funding',
  Judgment = 'Judgment',
  Successful = 'Successful',
  WorkSubmission = 'WorkSubmission'
}

export type BountyUpdateInput = {
  bannerImageUri?: InputMaybe<Scalars['String']['input']>;
  cherry?: InputMaybe<Scalars['String']['input']>;
  creator?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  discussionThread?: InputMaybe<Scalars['ID']['input']>;
  entrantStake?: InputMaybe<Scalars['String']['input']>;
  entrantWhitelist?: InputMaybe<Scalars['ID']['input']>;
  fundingType?: InputMaybe<Scalars['JSONObject']['input']>;
  isTerminated?: InputMaybe<Scalars['Boolean']['input']>;
  judgingPeriod?: InputMaybe<Scalars['Float']['input']>;
  oracle?: InputMaybe<Scalars['ID']['input']>;
  stage?: InputMaybe<BountyStage>;
  title?: InputMaybe<Scalars['String']['input']>;
  totalFunding?: InputMaybe<Scalars['String']['input']>;
  workPeriod?: InputMaybe<Scalars['Float']['input']>;
};

export type BountyVetoedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BountyVetoedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BountyVetoedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BountyVetoedEventWhereInput = {
  AND?: InputMaybe<Array<BountyVetoedEventWhereInput>>;
  NOT?: InputMaybe<Array<BountyVetoedEventWhereInput>>;
  OR?: InputMaybe<Array<BountyVetoedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BountyVetoedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BountyWhereInput = {
  AND?: InputMaybe<Array<BountyWhereInput>>;
  NOT?: InputMaybe<Array<BountyWhereInput>>;
  OR?: InputMaybe<Array<BountyWhereInput>>;
  bannerImageUri_contains?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_endsWith?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_eq?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_in?: InputMaybe<Array<Scalars['String']['input']>>;
  bannerImageUri_startsWith?: InputMaybe<Scalars['String']['input']>;
  bountycreatorcherrywithdrawaleventbounty_every?: InputMaybe<BountyCreatorCherryWithdrawalEventWhereInput>;
  bountycreatorcherrywithdrawaleventbounty_none?: InputMaybe<BountyCreatorCherryWithdrawalEventWhereInput>;
  bountycreatorcherrywithdrawaleventbounty_some?: InputMaybe<BountyCreatorCherryWithdrawalEventWhereInput>;
  canceledEvent?: InputMaybe<BountyCanceledEventWhereInput>;
  cherry_eq?: InputMaybe<Scalars['BigInt']['input']>;
  cherry_gt?: InputMaybe<Scalars['BigInt']['input']>;
  cherry_gte?: InputMaybe<Scalars['BigInt']['input']>;
  cherry_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  cherry_lt?: InputMaybe<Scalars['BigInt']['input']>;
  cherry_lte?: InputMaybe<Scalars['BigInt']['input']>;
  contributions_every?: InputMaybe<BountyContributionWhereInput>;
  contributions_none?: InputMaybe<BountyContributionWhereInput>;
  contributions_some?: InputMaybe<BountyContributionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<BountyCreatedEventWhereInput>;
  creator?: InputMaybe<MembershipWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  discussionThread?: InputMaybe<ForumThreadWhereInput>;
  entrantStake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  entrantStake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  entrantStake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  entrantStake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  entrantStake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  entrantStake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  entrantWhitelist?: InputMaybe<BountyEntrantWhitelistWhereInput>;
  entries_every?: InputMaybe<BountyEntryWhereInput>;
  entries_none?: InputMaybe<BountyEntryWhereInput>;
  entries_some?: InputMaybe<BountyEntryWhereInput>;
  fundingType_json?: InputMaybe<Scalars['JSONObject']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isTerminated_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isTerminated_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  judgingPeriod_eq?: InputMaybe<Scalars['Int']['input']>;
  judgingPeriod_gt?: InputMaybe<Scalars['Int']['input']>;
  judgingPeriod_gte?: InputMaybe<Scalars['Int']['input']>;
  judgingPeriod_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  judgingPeriod_lt?: InputMaybe<Scalars['Int']['input']>;
  judgingPeriod_lte?: InputMaybe<Scalars['Int']['input']>;
  judgment?: InputMaybe<OracleJudgmentSubmittedEventWhereInput>;
  maxFundingReachedEvent?: InputMaybe<BountyMaxFundingReachedEventWhereInput>;
  oracle?: InputMaybe<MembershipWhereInput>;
  removedInEvent?: InputMaybe<BountyRemovedEventWhereInput>;
  stage_eq?: InputMaybe<BountyStage>;
  stage_in?: InputMaybe<Array<BountyStage>>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  totalFunding_eq?: InputMaybe<Scalars['BigInt']['input']>;
  totalFunding_gt?: InputMaybe<Scalars['BigInt']['input']>;
  totalFunding_gte?: InputMaybe<Scalars['BigInt']['input']>;
  totalFunding_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  totalFunding_lt?: InputMaybe<Scalars['BigInt']['input']>;
  totalFunding_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  vetoedEvent?: InputMaybe<BountyVetoedEventWhereInput>;
  workPeriod_eq?: InputMaybe<Scalars['Int']['input']>;
  workPeriod_gt?: InputMaybe<Scalars['Int']['input']>;
  workPeriod_gte?: InputMaybe<Scalars['Int']['input']>;
  workPeriod_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  workPeriod_lt?: InputMaybe<Scalars['Int']['input']>;
  workPeriod_lte?: InputMaybe<Scalars['Int']['input']>;
  worksubmittedeventbounty_every?: InputMaybe<WorkSubmittedEventWhereInput>;
  worksubmittedeventbounty_none?: InputMaybe<WorkSubmittedEventWhereInput>;
  worksubmittedeventbounty_some?: InputMaybe<WorkSubmittedEventWhereInput>;
};

export type BountyWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetBalanceSetEventCreateInput = {
  balance: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BudgetBalanceSetEventOrderByInput {
  BalanceAsc = 'balance_ASC',
  BalanceDesc = 'balance_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetBalanceSetEventUpdateInput = {
  balance?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BudgetBalanceSetEventWhereInput = {
  AND?: InputMaybe<Array<BudgetBalanceSetEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetBalanceSetEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetBalanceSetEventWhereInput>>;
  balance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  balance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  balance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetBalanceSetEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetFundedEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum BudgetFundedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetFundedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type BudgetFundedEventWhereInput = {
  AND?: InputMaybe<Array<BudgetFundedEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetFundedEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetFundedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetFundedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetIncrementUpdatedEventCreateInput = {
  amount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BudgetIncrementUpdatedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetIncrementUpdatedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BudgetIncrementUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<BudgetIncrementUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetIncrementUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetIncrementUpdatedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetIncrementUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetRefillEventCreateInput = {
  balance: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BudgetRefillEventOrderByInput {
  BalanceAsc = 'balance_ASC',
  BalanceDesc = 'balance_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetRefillEventUpdateInput = {
  balance?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BudgetRefillEventWhereInput = {
  AND?: InputMaybe<Array<BudgetRefillEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetRefillEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetRefillEventWhereInput>>;
  balance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  balance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  balance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetRefillEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetRefillPlannedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  nextRefillInBlock: Scalars['Float']['input'];
};

export enum BudgetRefillPlannedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NextRefillInBlockAsc = 'nextRefillInBlock_ASC',
  NextRefillInBlockDesc = 'nextRefillInBlock_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetRefillPlannedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  nextRefillInBlock?: InputMaybe<Scalars['Float']['input']>;
};

export type BudgetRefillPlannedEventWhereInput = {
  AND?: InputMaybe<Array<BudgetRefillPlannedEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetRefillPlannedEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetRefillPlannedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  nextRefillInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  nextRefillInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  nextRefillInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  nextRefillInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  nextRefillInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  nextRefillInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetRefillPlannedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetSetEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newBudget: Scalars['String']['input'];
};

export enum BudgetSetEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewBudgetAsc = 'newBudget_ASC',
  NewBudgetDesc = 'newBudget_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetSetEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newBudget?: InputMaybe<Scalars['String']['input']>;
};

export type BudgetSetEventWhereInput = {
  AND?: InputMaybe<Array<BudgetSetEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetSetEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetSetEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newBudget_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newBudget_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newBudget_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newBudget_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newBudget_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newBudget_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetSetEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetSpendingEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale?: InputMaybe<Scalars['String']['input']>;
  reciever: Scalars['String']['input'];
};

export enum BudgetSpendingEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  RecieverAsc = 'reciever_ASC',
  RecieverDesc = 'reciever_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetSpendingEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  reciever?: InputMaybe<Scalars['String']['input']>;
};

export type BudgetSpendingEventWhereInput = {
  AND?: InputMaybe<Array<BudgetSpendingEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetSpendingEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetSpendingEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  reciever_contains?: InputMaybe<Scalars['String']['input']>;
  reciever_endsWith?: InputMaybe<Scalars['String']['input']>;
  reciever_eq?: InputMaybe<Scalars['String']['input']>;
  reciever_in?: InputMaybe<Array<Scalars['String']['input']>>;
  reciever_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetSpendingEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BudgetUpdatedEventCreateInput = {
  budgetChangeAmount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum BudgetUpdatedEventOrderByInput {
  BudgetChangeAmountAsc = 'budgetChangeAmount_ASC',
  BudgetChangeAmountDesc = 'budgetChangeAmount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type BudgetUpdatedEventUpdateInput = {
  budgetChangeAmount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type BudgetUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<BudgetUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<BudgetUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<BudgetUpdatedEventWhereInput>>;
  budgetChangeAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  budgetChangeAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  budgetChangeAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  budgetChangeAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  budgetChangeAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  budgetChangeAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type BudgetUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BuyNowCanceledEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum BuyNowCanceledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type BuyNowCanceledEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type BuyNowCanceledEventWhereInput = {
  AND?: InputMaybe<Array<BuyNowCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<BuyNowCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<BuyNowCanceledEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type BuyNowCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type BuyNowPriceUpdatedEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newPrice: Scalars['String']['input'];
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum BuyNowPriceUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewPriceAsc = 'newPrice_ASC',
  NewPriceDesc = 'newPrice_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type BuyNowPriceUpdatedEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newPrice?: InputMaybe<Scalars['String']['input']>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type BuyNowPriceUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<BuyNowPriceUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<BuyNowPriceUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<BuyNowPriceUpdatedEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newPrice_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type BuyNowPriceUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CandidacyNoteMetadataCreateInput = {
  bannerImageUri?: InputMaybe<Scalars['String']['input']>;
  bulletPoints: Array<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  header?: InputMaybe<Scalars['String']['input']>;
};

export enum CandidacyNoteMetadataOrderByInput {
  BannerImageUriAsc = 'bannerImageUri_ASC',
  BannerImageUriDesc = 'bannerImageUri_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  HeaderAsc = 'header_ASC',
  HeaderDesc = 'header_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CandidacyNoteMetadataUpdateInput = {
  bannerImageUri?: InputMaybe<Scalars['String']['input']>;
  bulletPoints?: InputMaybe<Array<Scalars['String']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  header?: InputMaybe<Scalars['String']['input']>;
};

export type CandidacyNoteMetadataWhereInput = {
  AND?: InputMaybe<Array<CandidacyNoteMetadataWhereInput>>;
  NOT?: InputMaybe<Array<CandidacyNoteMetadataWhereInput>>;
  OR?: InputMaybe<Array<CandidacyNoteMetadataWhereInput>>;
  bannerImageUri_contains?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_endsWith?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_eq?: InputMaybe<Scalars['String']['input']>;
  bannerImageUri_in?: InputMaybe<Array<Scalars['String']['input']>>;
  bannerImageUri_startsWith?: InputMaybe<Scalars['String']['input']>;
  bulletPoints_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  bulletPoints_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  bulletPoints_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  candidacynoteseteventnoteMetadata_every?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidacynoteseteventnoteMetadata_none?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidacynoteseteventnoteMetadata_some?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidatenoteMetadata_every?: InputMaybe<CandidateWhereInput>;
  candidatenoteMetadata_none?: InputMaybe<CandidateWhereInput>;
  candidatenoteMetadata_some?: InputMaybe<CandidateWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  header_contains?: InputMaybe<Scalars['String']['input']>;
  header_endsWith?: InputMaybe<Scalars['String']['input']>;
  header_eq?: InputMaybe<Scalars['String']['input']>;
  header_in?: InputMaybe<Array<Scalars['String']['input']>>;
  header_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CandidacyNoteMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CandidacyNoteSetEventCreateInput = {
  candidate: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  noteMetadata: Scalars['ID']['input'];
};

export enum CandidacyNoteSetEventOrderByInput {
  CandidateAsc = 'candidate_ASC',
  CandidateDesc = 'candidate_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NoteMetadataAsc = 'noteMetadata_ASC',
  NoteMetadataDesc = 'noteMetadata_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CandidacyNoteSetEventUpdateInput = {
  candidate?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  noteMetadata?: InputMaybe<Scalars['ID']['input']>;
};

export type CandidacyNoteSetEventWhereInput = {
  AND?: InputMaybe<Array<CandidacyNoteSetEventWhereInput>>;
  NOT?: InputMaybe<Array<CandidacyNoteSetEventWhereInput>>;
  OR?: InputMaybe<Array<CandidacyNoteSetEventWhereInput>>;
  candidate?: InputMaybe<CandidateWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  noteMetadata?: InputMaybe<CandidacyNoteMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CandidacyNoteSetEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CandidacyStakeReleaseEventCreateInput = {
  candidate: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CandidacyStakeReleaseEventOrderByInput {
  CandidateAsc = 'candidate_ASC',
  CandidateDesc = 'candidate_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CandidacyStakeReleaseEventUpdateInput = {
  candidate?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CandidacyStakeReleaseEventWhereInput = {
  AND?: InputMaybe<Array<CandidacyStakeReleaseEventWhereInput>>;
  NOT?: InputMaybe<Array<CandidacyStakeReleaseEventWhereInput>>;
  OR?: InputMaybe<Array<CandidacyStakeReleaseEventWhereInput>>;
  candidate?: InputMaybe<CandidateWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CandidacyStakeReleaseEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum CandidacyStatus {
  Active = 'ACTIVE',
  Elected = 'ELECTED',
  Failed = 'FAILED',
  Withdrawn = 'WITHDRAWN'
}

export type CandidacyWithdrawEventCreateInput = {
  candidate: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CandidacyWithdrawEventOrderByInput {
  CandidateAsc = 'candidate_ASC',
  CandidateDesc = 'candidate_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CandidacyWithdrawEventUpdateInput = {
  candidate?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CandidacyWithdrawEventWhereInput = {
  AND?: InputMaybe<Array<CandidacyWithdrawEventWhereInput>>;
  NOT?: InputMaybe<Array<CandidacyWithdrawEventWhereInput>>;
  OR?: InputMaybe<Array<CandidacyWithdrawEventWhereInput>>;
  candidate?: InputMaybe<CandidateWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CandidacyWithdrawEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CandidateCreateInput = {
  electionRound: Scalars['ID']['input'];
  lastVoteReceivedAtBlock?: InputMaybe<Scalars['String']['input']>;
  lastVoteReceivedAtEventNumber?: InputMaybe<Scalars['Float']['input']>;
  member: Scalars['ID']['input'];
  noteMetadata: Scalars['ID']['input'];
  rewardAccountId: Scalars['String']['input'];
  stake: Scalars['String']['input'];
  stakeLocked: Scalars['Boolean']['input'];
  stakingAccountId: Scalars['String']['input'];
  status: CandidacyStatus;
  votePower: Scalars['String']['input'];
};

export enum CandidateOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectionRoundAsc = 'electionRound_ASC',
  ElectionRoundDesc = 'electionRound_DESC',
  LastVoteReceivedAtBlockAsc = 'lastVoteReceivedAtBlock_ASC',
  LastVoteReceivedAtBlockDesc = 'lastVoteReceivedAtBlock_DESC',
  LastVoteReceivedAtEventNumberAsc = 'lastVoteReceivedAtEventNumber_ASC',
  LastVoteReceivedAtEventNumberDesc = 'lastVoteReceivedAtEventNumber_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NoteMetadataAsc = 'noteMetadata_ASC',
  NoteMetadataDesc = 'noteMetadata_DESC',
  RewardAccountIdAsc = 'rewardAccountId_ASC',
  RewardAccountIdDesc = 'rewardAccountId_DESC',
  StakeLockedAsc = 'stakeLocked_ASC',
  StakeLockedDesc = 'stakeLocked_DESC',
  StakeAsc = 'stake_ASC',
  StakeDesc = 'stake_DESC',
  StakingAccountIdAsc = 'stakingAccountId_ASC',
  StakingAccountIdDesc = 'stakingAccountId_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VotePowerAsc = 'votePower_ASC',
  VotePowerDesc = 'votePower_DESC'
}

export type CandidateUpdateInput = {
  electionRound?: InputMaybe<Scalars['ID']['input']>;
  lastVoteReceivedAtBlock?: InputMaybe<Scalars['String']['input']>;
  lastVoteReceivedAtEventNumber?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  noteMetadata?: InputMaybe<Scalars['ID']['input']>;
  rewardAccountId?: InputMaybe<Scalars['String']['input']>;
  stake?: InputMaybe<Scalars['String']['input']>;
  stakeLocked?: InputMaybe<Scalars['Boolean']['input']>;
  stakingAccountId?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CandidacyStatus>;
  votePower?: InputMaybe<Scalars['String']['input']>;
};

export type CandidateWhereInput = {
  AND?: InputMaybe<Array<CandidateWhereInput>>;
  NOT?: InputMaybe<Array<CandidateWhereInput>>;
  OR?: InputMaybe<Array<CandidateWhereInput>>;
  candidacynoteseteventcandidate_every?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidacynoteseteventcandidate_none?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidacynoteseteventcandidate_some?: InputMaybe<CandidacyNoteSetEventWhereInput>;
  candidacystakereleaseeventcandidate_every?: InputMaybe<CandidacyStakeReleaseEventWhereInput>;
  candidacystakereleaseeventcandidate_none?: InputMaybe<CandidacyStakeReleaseEventWhereInput>;
  candidacystakereleaseeventcandidate_some?: InputMaybe<CandidacyStakeReleaseEventWhereInput>;
  candidacywithdraweventcandidate_every?: InputMaybe<CandidacyWithdrawEventWhereInput>;
  candidacywithdraweventcandidate_none?: InputMaybe<CandidacyWithdrawEventWhereInput>;
  candidacywithdraweventcandidate_some?: InputMaybe<CandidacyWithdrawEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electionRound?: InputMaybe<ElectionRoundWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastVoteReceivedAtBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  lastVoteReceivedAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  lastVoteReceivedAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  lastVoteReceivedAtBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lastVoteReceivedAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  lastVoteReceivedAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  lastVoteReceivedAtEventNumber_eq?: InputMaybe<Scalars['Int']['input']>;
  lastVoteReceivedAtEventNumber_gt?: InputMaybe<Scalars['Int']['input']>;
  lastVoteReceivedAtEventNumber_gte?: InputMaybe<Scalars['Int']['input']>;
  lastVoteReceivedAtEventNumber_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lastVoteReceivedAtEventNumber_lt?: InputMaybe<Scalars['Int']['input']>;
  lastVoteReceivedAtEventNumber_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  newcandidateeventcandidate_every?: InputMaybe<NewCandidateEventWhereInput>;
  newcandidateeventcandidate_none?: InputMaybe<NewCandidateEventWhereInput>;
  newcandidateeventcandidate_some?: InputMaybe<NewCandidateEventWhereInput>;
  noteMetadata?: InputMaybe<CandidacyNoteMetadataWhereInput>;
  rewardAccountId_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccountId_startsWith?: InputMaybe<Scalars['String']['input']>;
  stakeLocked_eq?: InputMaybe<Scalars['Boolean']['input']>;
  stakeLocked_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  stake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stakingAccountId_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccountId_startsWith?: InputMaybe<Scalars['String']['input']>;
  status_eq?: InputMaybe<CandidacyStatus>;
  status_in?: InputMaybe<Array<CandidacyStatus>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  votePower_eq?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_gt?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_gte?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  votePower_lt?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_lte?: InputMaybe<Scalars['BigInt']['input']>;
  votesReceived_every?: InputMaybe<CastVoteWhereInput>;
  votesReceived_none?: InputMaybe<CastVoteWhereInput>;
  votesReceived_some?: InputMaybe<CastVoteWhereInput>;
};

export type CandidateWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CastVoteCreateInput = {
  castBy: Scalars['String']['input'];
  commitment: Scalars['String']['input'];
  electionRound: Scalars['ID']['input'];
  stake: Scalars['String']['input'];
  stakeLocked: Scalars['Boolean']['input'];
  voteFor?: InputMaybe<Scalars['ID']['input']>;
  votePower: Scalars['String']['input'];
};

export enum CastVoteOrderByInput {
  CastByAsc = 'castBy_ASC',
  CastByDesc = 'castBy_DESC',
  CommitmentAsc = 'commitment_ASC',
  CommitmentDesc = 'commitment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectionRoundAsc = 'electionRound_ASC',
  ElectionRoundDesc = 'electionRound_DESC',
  StakeLockedAsc = 'stakeLocked_ASC',
  StakeLockedDesc = 'stakeLocked_DESC',
  StakeAsc = 'stake_ASC',
  StakeDesc = 'stake_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VoteForAsc = 'voteFor_ASC',
  VoteForDesc = 'voteFor_DESC',
  VotePowerAsc = 'votePower_ASC',
  VotePowerDesc = 'votePower_DESC'
}

export type CastVoteUpdateInput = {
  castBy?: InputMaybe<Scalars['String']['input']>;
  commitment?: InputMaybe<Scalars['String']['input']>;
  electionRound?: InputMaybe<Scalars['ID']['input']>;
  stake?: InputMaybe<Scalars['String']['input']>;
  stakeLocked?: InputMaybe<Scalars['Boolean']['input']>;
  voteFor?: InputMaybe<Scalars['ID']['input']>;
  votePower?: InputMaybe<Scalars['String']['input']>;
};

export type CastVoteWhereInput = {
  AND?: InputMaybe<Array<CastVoteWhereInput>>;
  NOT?: InputMaybe<Array<CastVoteWhereInput>>;
  OR?: InputMaybe<Array<CastVoteWhereInput>>;
  castBy_contains?: InputMaybe<Scalars['String']['input']>;
  castBy_endsWith?: InputMaybe<Scalars['String']['input']>;
  castBy_eq?: InputMaybe<Scalars['String']['input']>;
  castBy_in?: InputMaybe<Array<Scalars['String']['input']>>;
  castBy_startsWith?: InputMaybe<Scalars['String']['input']>;
  commitment_contains?: InputMaybe<Scalars['String']['input']>;
  commitment_endsWith?: InputMaybe<Scalars['String']['input']>;
  commitment_eq?: InputMaybe<Scalars['String']['input']>;
  commitment_in?: InputMaybe<Array<Scalars['String']['input']>>;
  commitment_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electionRound?: InputMaybe<ElectionRoundWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  stakeLocked_eq?: InputMaybe<Scalars['Boolean']['input']>;
  stakeLocked_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  stake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  voteFor?: InputMaybe<CandidateWhereInput>;
  votePower_eq?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_gt?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_gte?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  votePower_lt?: InputMaybe<Scalars['BigInt']['input']>;
  votePower_lte?: InputMaybe<Scalars['BigInt']['input']>;
  votecasteventcastVote_every?: InputMaybe<VoteCastEventWhereInput>;
  votecasteventcastVote_none?: InputMaybe<VoteCastEventWhereInput>;
  votecasteventcastVote_some?: InputMaybe<VoteCastEventWhereInput>;
  voterevealedeventcastVote_every?: InputMaybe<VoteRevealedEventWhereInput>;
  voterevealedeventcastVote_none?: InputMaybe<VoteRevealedEventWhereInput>;
  voterevealedeventcastVote_some?: InputMaybe<VoteRevealedEventWhereInput>;
};

export type CastVoteWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CategoryArchivalStatusUpdatedEventCreateInput = {
  actor: Scalars['ID']['input'];
  category: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newArchivalStatus: Scalars['Boolean']['input'];
};

export enum CategoryArchivalStatusUpdatedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewArchivalStatusAsc = 'newArchivalStatus_ASC',
  NewArchivalStatusDesc = 'newArchivalStatus_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CategoryArchivalStatusUpdatedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  category?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newArchivalStatus?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CategoryArchivalStatusUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<CategoryArchivalStatusUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CategoryArchivalStatusUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<CategoryArchivalStatusUpdatedEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newArchivalStatus_eq?: InputMaybe<Scalars['Boolean']['input']>;
  newArchivalStatus_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CategoryArchivalStatusUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CategoryCreatedEventCreateInput = {
  category: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CategoryCreatedEventOrderByInput {
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CategoryCreatedEventUpdateInput = {
  category?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CategoryCreatedEventWhereInput = {
  AND?: InputMaybe<Array<CategoryCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CategoryCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<CategoryCreatedEventWhereInput>>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CategoryCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CategoryDeletedEventCreateInput = {
  actor: Scalars['ID']['input'];
  category: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CategoryDeletedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CategoryDeletedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  category?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CategoryDeletedEventWhereInput = {
  AND?: InputMaybe<Array<CategoryDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<CategoryDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<CategoryDeletedEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CategoryDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CategoryMembershipOfModeratorUpdatedEventCreateInput = {
  category: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  moderator: Scalars['ID']['input'];
  network: Network;
  newCanModerateValue: Scalars['Boolean']['input'];
};

export enum CategoryMembershipOfModeratorUpdatedEventOrderByInput {
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  ModeratorAsc = 'moderator_ASC',
  ModeratorDesc = 'moderator_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewCanModerateValueAsc = 'newCanModerateValue_ASC',
  NewCanModerateValueDesc = 'newCanModerateValue_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CategoryMembershipOfModeratorUpdatedEventUpdateInput = {
  category?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  moderator?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newCanModerateValue?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CategoryMembershipOfModeratorUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<CategoryMembershipOfModeratorUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CategoryMembershipOfModeratorUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<CategoryMembershipOfModeratorUpdatedEventWhereInput>>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  moderator?: InputMaybe<WorkerWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newCanModerateValue_eq?: InputMaybe<Scalars['Boolean']['input']>;
  newCanModerateValue_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CategoryMembershipOfModeratorUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CategoryStickyThreadUpdateEventCreateInput = {
  actor: Scalars['ID']['input'];
  category: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CategoryStickyThreadUpdateEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CategoryStickyThreadUpdateEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  category?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CategoryStickyThreadUpdateEventWhereInput = {
  AND?: InputMaybe<Array<CategoryStickyThreadUpdateEventWhereInput>>;
  NOT?: InputMaybe<Array<CategoryStickyThreadUpdateEventWhereInput>>;
  OR?: InputMaybe<Array<CategoryStickyThreadUpdateEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newStickyThreads_every?: InputMaybe<ForumThreadWhereInput>;
  newStickyThreads_none?: InputMaybe<ForumThreadWhereInput>;
  newStickyThreads_some?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CategoryStickyThreadUpdateEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelAssetsDeletedByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  assetIds: Array<Scalars['Int']['input']>;
  channelId: Scalars['Float']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum ChannelAssetsDeletedByModeratorEventOrderByInput {
  ChannelIdAsc = 'channelId_ASC',
  ChannelIdDesc = 'channelId_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelAssetsDeletedByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  assetIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  channelId?: InputMaybe<Scalars['Float']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelAssetsDeletedByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<ChannelAssetsDeletedByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelAssetsDeletedByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelAssetsDeletedByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  assetIds_containsAll?: InputMaybe<Array<Scalars['Int']['input']>>;
  assetIds_containsAny?: InputMaybe<Array<Scalars['Int']['input']>>;
  assetIds_containsNone?: InputMaybe<Array<Scalars['Int']['input']>>;
  channelId_eq?: InputMaybe<Scalars['Int']['input']>;
  channelId_gt?: InputMaybe<Scalars['Int']['input']>;
  channelId_gte?: InputMaybe<Scalars['Int']['input']>;
  channelId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  channelId_lt?: InputMaybe<Scalars['Int']['input']>;
  channelId_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelAssetsDeletedByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelCreateInput = {
  activeVideosCounter: Scalars['Float']['input'];
  avatarPhoto?: InputMaybe<Scalars['ID']['input']>;
  channelStateBloatBond: Scalars['String']['input'];
  coverPhoto?: InputMaybe<Scalars['ID']['input']>;
  createdInBlock: Scalars['Float']['input'];
  cumulativeRewardClaimed?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  entryApp?: InputMaybe<Scalars['ID']['input']>;
  isCensored: Scalars['Boolean']['input'];
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  privilegeLevel?: InputMaybe<Scalars['Float']['input']>;
  rewardAccount: Scalars['String']['input'];
  title?: InputMaybe<Scalars['String']['input']>;
  totalVideosCreated: Scalars['Float']['input'];
};

export type ChannelDeletedByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  channelId: Scalars['Float']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum ChannelDeletedByModeratorEventOrderByInput {
  ChannelIdAsc = 'channelId_ASC',
  ChannelIdDesc = 'channelId_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelDeletedByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  channelId?: InputMaybe<Scalars['Float']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelDeletedByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<ChannelDeletedByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelDeletedByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelDeletedByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  channelId_eq?: InputMaybe<Scalars['Int']['input']>;
  channelId_gt?: InputMaybe<Scalars['Int']['input']>;
  channelId_gte?: InputMaybe<Scalars['Int']['input']>;
  channelId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  channelId_lt?: InputMaybe<Scalars['Int']['input']>;
  channelId_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelDeletedByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelFundsWithdrawnEventCreateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  actor: Scalars['JSONObject']['input'];
  amount: Scalars['String']['input'];
  channel: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum ChannelFundsWithdrawnEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelFundsWithdrawnEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type ChannelFundsWithdrawnEventWhereInput = {
  AND?: InputMaybe<Array<ChannelFundsWithdrawnEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelFundsWithdrawnEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelFundsWithdrawnEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelFundsWithdrawnEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelNftCollectorsCreateInput = {
  amount: Scalars['Float']['input'];
  channel: Scalars['ID']['input'];
  curatorGroup?: InputMaybe<Scalars['ID']['input']>;
  lastIncreaseAt: Scalars['DateTime']['input'];
  member?: InputMaybe<Scalars['ID']['input']>;
};

export enum ChannelNftCollectorsOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CuratorGroupAsc = 'curatorGroup_ASC',
  CuratorGroupDesc = 'curatorGroup_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  LastIncreaseAtAsc = 'lastIncreaseAt_ASC',
  LastIncreaseAtDesc = 'lastIncreaseAt_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelNftCollectorsUpdateInput = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  curatorGroup?: InputMaybe<Scalars['ID']['input']>;
  lastIncreaseAt?: InputMaybe<Scalars['DateTime']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
};

export type ChannelNftCollectorsWhereInput = {
  AND?: InputMaybe<Array<ChannelNftCollectorsWhereInput>>;
  NOT?: InputMaybe<Array<ChannelNftCollectorsWhereInput>>;
  OR?: InputMaybe<Array<ChannelNftCollectorsWhereInput>>;
  amount_eq?: InputMaybe<Scalars['Int']['input']>;
  amount_gt?: InputMaybe<Scalars['Int']['input']>;
  amount_gte?: InputMaybe<Scalars['Int']['input']>;
  amount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  amount_lt?: InputMaybe<Scalars['Int']['input']>;
  amount_lte?: InputMaybe<Scalars['Int']['input']>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  curatorGroup?: InputMaybe<CuratorGroupWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastIncreaseAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  lastIncreaseAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  lastIncreaseAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  lastIncreaseAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  lastIncreaseAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelNftCollectorsWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum ChannelOrderByInput {
  ActiveVideosCounterAsc = 'activeVideosCounter_ASC',
  ActiveVideosCounterDesc = 'activeVideosCounter_DESC',
  AvatarPhotoAsc = 'avatarPhoto_ASC',
  AvatarPhotoDesc = 'avatarPhoto_DESC',
  ChannelStateBloatBondAsc = 'channelStateBloatBond_ASC',
  ChannelStateBloatBondDesc = 'channelStateBloatBond_DESC',
  CoverPhotoAsc = 'coverPhoto_ASC',
  CoverPhotoDesc = 'coverPhoto_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  CumulativeRewardClaimedAsc = 'cumulativeRewardClaimed_ASC',
  CumulativeRewardClaimedDesc = 'cumulativeRewardClaimed_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  EntryAppAsc = 'entryApp_ASC',
  EntryAppDesc = 'entryApp_DESC',
  IsCensoredAsc = 'isCensored_ASC',
  IsCensoredDesc = 'isCensored_DESC',
  IsPublicAsc = 'isPublic_ASC',
  IsPublicDesc = 'isPublic_DESC',
  LanguageAsc = 'language_ASC',
  LanguageDesc = 'language_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PrivilegeLevelAsc = 'privilegeLevel_ASC',
  PrivilegeLevelDesc = 'privilegeLevel_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  TotalVideosCreatedAsc = 'totalVideosCreated_ASC',
  TotalVideosCreatedDesc = 'totalVideosCreated_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelPaymentMadeEventCreateInput = {
  amount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  payeeChannel?: InputMaybe<Scalars['ID']['input']>;
  payer: Scalars['ID']['input'];
  paymentContext: Scalars['JSONObject']['input'];
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export enum ChannelPaymentMadeEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PayeeChannelAsc = 'payeeChannel_ASC',
  PayeeChannelDesc = 'payeeChannel_DESC',
  PayerAsc = 'payer_ASC',
  PayerDesc = 'payer_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelPaymentMadeEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  payeeChannel?: InputMaybe<Scalars['ID']['input']>;
  payer?: InputMaybe<Scalars['ID']['input']>;
  paymentContext?: InputMaybe<Scalars['JSONObject']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelPaymentMadeEventWhereInput = {
  AND?: InputMaybe<Array<ChannelPaymentMadeEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelPaymentMadeEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelPaymentMadeEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  payeeChannel?: InputMaybe<ChannelWhereInput>;
  payer?: InputMaybe<MembershipWhereInput>;
  paymentContext_json?: InputMaybe<Scalars['JSONObject']['input']>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelPaymentMadeEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelPayoutsUpdatedEventCreateInput = {
  channelCashoutsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  commitment?: InputMaybe<Scalars['String']['input']>;
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  maxCashoutAllowed?: InputMaybe<Scalars['String']['input']>;
  minCashoutAllowed?: InputMaybe<Scalars['String']['input']>;
  network: Network;
  payloadDataObject?: InputMaybe<Scalars['ID']['input']>;
  payloadHash?: InputMaybe<Scalars['String']['input']>;
  payloadSize?: InputMaybe<Scalars['String']['input']>;
};

export enum ChannelPayoutsUpdatedEventOrderByInput {
  ChannelCashoutsEnabledAsc = 'channelCashoutsEnabled_ASC',
  ChannelCashoutsEnabledDesc = 'channelCashoutsEnabled_DESC',
  CommitmentAsc = 'commitment_ASC',
  CommitmentDesc = 'commitment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MaxCashoutAllowedAsc = 'maxCashoutAllowed_ASC',
  MaxCashoutAllowedDesc = 'maxCashoutAllowed_DESC',
  MinCashoutAllowedAsc = 'minCashoutAllowed_ASC',
  MinCashoutAllowedDesc = 'minCashoutAllowed_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PayloadDataObjectAsc = 'payloadDataObject_ASC',
  PayloadDataObjectDesc = 'payloadDataObject_DESC',
  PayloadHashAsc = 'payloadHash_ASC',
  PayloadHashDesc = 'payloadHash_DESC',
  PayloadSizeAsc = 'payloadSize_ASC',
  PayloadSizeDesc = 'payloadSize_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelPayoutsUpdatedEventUpdateInput = {
  channelCashoutsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  commitment?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  maxCashoutAllowed?: InputMaybe<Scalars['String']['input']>;
  minCashoutAllowed?: InputMaybe<Scalars['String']['input']>;
  network?: InputMaybe<Network>;
  payloadDataObject?: InputMaybe<Scalars['ID']['input']>;
  payloadHash?: InputMaybe<Scalars['String']['input']>;
  payloadSize?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelPayoutsUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<ChannelPayoutsUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelPayoutsUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelPayoutsUpdatedEventWhereInput>>;
  channelCashoutsEnabled_eq?: InputMaybe<Scalars['Boolean']['input']>;
  channelCashoutsEnabled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  commitment_contains?: InputMaybe<Scalars['String']['input']>;
  commitment_endsWith?: InputMaybe<Scalars['String']['input']>;
  commitment_eq?: InputMaybe<Scalars['String']['input']>;
  commitment_in?: InputMaybe<Array<Scalars['String']['input']>>;
  commitment_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  maxCashoutAllowed_eq?: InputMaybe<Scalars['BigInt']['input']>;
  maxCashoutAllowed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  maxCashoutAllowed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  maxCashoutAllowed_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  maxCashoutAllowed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  maxCashoutAllowed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  minCashoutAllowed_eq?: InputMaybe<Scalars['BigInt']['input']>;
  minCashoutAllowed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  minCashoutAllowed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  minCashoutAllowed_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  minCashoutAllowed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  minCashoutAllowed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  payloadDataObject?: InputMaybe<StorageDataObjectWhereInput>;
  payloadHash_contains?: InputMaybe<Scalars['String']['input']>;
  payloadHash_endsWith?: InputMaybe<Scalars['String']['input']>;
  payloadHash_eq?: InputMaybe<Scalars['String']['input']>;
  payloadHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
  payloadHash_startsWith?: InputMaybe<Scalars['String']['input']>;
  payloadSize_eq?: InputMaybe<Scalars['BigInt']['input']>;
  payloadSize_gt?: InputMaybe<Scalars['BigInt']['input']>;
  payloadSize_gte?: InputMaybe<Scalars['BigInt']['input']>;
  payloadSize_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  payloadSize_lt?: InputMaybe<Scalars['BigInt']['input']>;
  payloadSize_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelPayoutsUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelRewardClaimedAndWithdrawnEventCreateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  actor: Scalars['JSONObject']['input'];
  amount: Scalars['String']['input'];
  channel: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum ChannelRewardClaimedAndWithdrawnEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelRewardClaimedAndWithdrawnEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type ChannelRewardClaimedAndWithdrawnEventWhereInput = {
  AND?: InputMaybe<Array<ChannelRewardClaimedAndWithdrawnEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelRewardClaimedAndWithdrawnEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelRewardClaimedAndWithdrawnEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelRewardClaimedAndWithdrawnEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelRewardClaimedEventCreateInput = {
  amount: Scalars['String']['input'];
  channel: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum ChannelRewardClaimedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelRewardClaimedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type ChannelRewardClaimedEventWhereInput = {
  AND?: InputMaybe<Array<ChannelRewardClaimedEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelRewardClaimedEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelRewardClaimedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelRewardClaimedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelUpdateInput = {
  activeVideosCounter?: InputMaybe<Scalars['Float']['input']>;
  avatarPhoto?: InputMaybe<Scalars['ID']['input']>;
  channelStateBloatBond?: InputMaybe<Scalars['String']['input']>;
  coverPhoto?: InputMaybe<Scalars['ID']['input']>;
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  cumulativeRewardClaimed?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  entryApp?: InputMaybe<Scalars['ID']['input']>;
  isCensored?: InputMaybe<Scalars['Boolean']['input']>;
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  privilegeLevel?: InputMaybe<Scalars['Float']['input']>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  totalVideosCreated?: InputMaybe<Scalars['Float']['input']>;
};

export type ChannelVisibilitySetByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  channelId: Scalars['Float']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  isHidden: Scalars['Boolean']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum ChannelVisibilitySetByModeratorEventOrderByInput {
  ChannelIdAsc = 'channelId_ASC',
  ChannelIdDesc = 'channelId_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsHiddenAsc = 'isHidden_ASC',
  IsHiddenDesc = 'isHidden_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ChannelVisibilitySetByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  channelId?: InputMaybe<Scalars['Float']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isHidden?: InputMaybe<Scalars['Boolean']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type ChannelVisibilitySetByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<ChannelVisibilitySetByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<ChannelVisibilitySetByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<ChannelVisibilitySetByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  channelId_eq?: InputMaybe<Scalars['Int']['input']>;
  channelId_gt?: InputMaybe<Scalars['Int']['input']>;
  channelId_gte?: InputMaybe<Scalars['Int']['input']>;
  channelId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  channelId_lt?: InputMaybe<Scalars['Int']['input']>;
  channelId_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isHidden_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isHidden_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ChannelVisibilitySetByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ChannelWhereInput = {
  AND?: InputMaybe<Array<ChannelWhereInput>>;
  NOT?: InputMaybe<Array<ChannelWhereInput>>;
  OR?: InputMaybe<Array<ChannelWhereInput>>;
  activeVideosCounter_eq?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_gt?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_gte?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  activeVideosCounter_lt?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_lte?: InputMaybe<Scalars['Int']['input']>;
  avatarPhoto?: InputMaybe<StorageDataObjectWhereInput>;
  bannedMembers_every?: InputMaybe<MembershipWhereInput>;
  bannedMembers_none?: InputMaybe<MembershipWhereInput>;
  bannedMembers_some?: InputMaybe<MembershipWhereInput>;
  channelNftCollectors_every?: InputMaybe<ChannelNftCollectorsWhereInput>;
  channelNftCollectors_none?: InputMaybe<ChannelNftCollectorsWhereInput>;
  channelNftCollectors_some?: InputMaybe<ChannelNftCollectorsWhereInput>;
  channelStateBloatBond_eq?: InputMaybe<Scalars['BigInt']['input']>;
  channelStateBloatBond_gt?: InputMaybe<Scalars['BigInt']['input']>;
  channelStateBloatBond_gte?: InputMaybe<Scalars['BigInt']['input']>;
  channelStateBloatBond_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  channelStateBloatBond_lt?: InputMaybe<Scalars['BigInt']['input']>;
  channelStateBloatBond_lte?: InputMaybe<Scalars['BigInt']['input']>;
  channelfundswithdrawneventchannel_every?: InputMaybe<ChannelFundsWithdrawnEventWhereInput>;
  channelfundswithdrawneventchannel_none?: InputMaybe<ChannelFundsWithdrawnEventWhereInput>;
  channelfundswithdrawneventchannel_some?: InputMaybe<ChannelFundsWithdrawnEventWhereInput>;
  channelpaymentmadeeventpayeeChannel_every?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channelpaymentmadeeventpayeeChannel_none?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channelpaymentmadeeventpayeeChannel_some?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channelrewardclaimedandwithdrawneventchannel_every?: InputMaybe<ChannelRewardClaimedAndWithdrawnEventWhereInput>;
  channelrewardclaimedandwithdrawneventchannel_none?: InputMaybe<ChannelRewardClaimedAndWithdrawnEventWhereInput>;
  channelrewardclaimedandwithdrawneventchannel_some?: InputMaybe<ChannelRewardClaimedAndWithdrawnEventWhereInput>;
  claimedRewards_every?: InputMaybe<ChannelRewardClaimedEventWhereInput>;
  claimedRewards_none?: InputMaybe<ChannelRewardClaimedEventWhereInput>;
  claimedRewards_some?: InputMaybe<ChannelRewardClaimedEventWhereInput>;
  collaborators_every?: InputMaybe<CollaboratorWhereInput>;
  collaborators_none?: InputMaybe<CollaboratorWhereInput>;
  collaborators_some?: InputMaybe<CollaboratorWhereInput>;
  commentcreatedeventvideoChannel_every?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventvideoChannel_none?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventvideoChannel_some?: InputMaybe<CommentCreatedEventWhereInput>;
  commentdeletedeventvideoChannel_every?: InputMaybe<CommentDeletedEventWhereInput>;
  commentdeletedeventvideoChannel_none?: InputMaybe<CommentDeletedEventWhereInput>;
  commentdeletedeventvideoChannel_some?: InputMaybe<CommentDeletedEventWhereInput>;
  commentmoderatedeventvideoChannel_every?: InputMaybe<CommentModeratedEventWhereInput>;
  commentmoderatedeventvideoChannel_none?: InputMaybe<CommentModeratedEventWhereInput>;
  commentmoderatedeventvideoChannel_some?: InputMaybe<CommentModeratedEventWhereInput>;
  commentpinnedeventvideoChannel_every?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventvideoChannel_none?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventvideoChannel_some?: InputMaybe<CommentPinnedEventWhereInput>;
  commentreactedeventvideoChannel_every?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventvideoChannel_none?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventvideoChannel_some?: InputMaybe<CommentReactedEventWhereInput>;
  commenttextupdatedeventvideoChannel_every?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  commenttextupdatedeventvideoChannel_none?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  commenttextupdatedeventvideoChannel_some?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  coverPhoto?: InputMaybe<StorageDataObjectWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  cumulativeRewardClaimed_eq?: InputMaybe<Scalars['BigInt']['input']>;
  cumulativeRewardClaimed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  cumulativeRewardClaimed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  cumulativeRewardClaimed_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  cumulativeRewardClaimed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  cumulativeRewardClaimed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  entryApp?: InputMaybe<AppWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isCensored_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCensored_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isPublic_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isPublic_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  language?: InputMaybe<LanguageWhereInput>;
  memberbannedfromchanneleventchannel_every?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  memberbannedfromchanneleventchannel_none?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  memberbannedfromchanneleventchannel_some?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  ownednftcreatorChannel_every?: InputMaybe<OwnedNftWhereInput>;
  ownednftcreatorChannel_none?: InputMaybe<OwnedNftWhereInput>;
  ownednftcreatorChannel_some?: InputMaybe<OwnedNftWhereInput>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  privilegeLevel_eq?: InputMaybe<Scalars['Int']['input']>;
  privilegeLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  privilegeLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  privilegeLevel_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  privilegeLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  privilegeLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  totalVideosCreated_eq?: InputMaybe<Scalars['Int']['input']>;
  totalVideosCreated_gt?: InputMaybe<Scalars['Int']['input']>;
  totalVideosCreated_gte?: InputMaybe<Scalars['Int']['input']>;
  totalVideosCreated_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalVideosCreated_lt?: InputMaybe<Scalars['Int']['input']>;
  totalVideosCreated_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoreactedeventvideoChannel_every?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventvideoChannel_none?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventvideoChannel_some?: InputMaybe<VideoReactedEventWhereInput>;
  videos_every?: InputMaybe<VideoWhereInput>;
  videos_none?: InputMaybe<VideoWhereInput>;
  videos_some?: InputMaybe<VideoWhereInput>;
};

export type ChannelWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CollaboratorCreateInput = {
  channel: Scalars['ID']['input'];
  member: Scalars['ID']['input'];
  permissions: Array<Scalars['String']['input']>;
};

export enum CollaboratorOrderByInput {
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CollaboratorUpdateInput = {
  channel?: InputMaybe<Scalars['ID']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CollaboratorWhereInput = {
  AND?: InputMaybe<Array<CollaboratorWhereInput>>;
  NOT?: InputMaybe<Array<CollaboratorWhereInput>>;
  OR?: InputMaybe<Array<CollaboratorWhereInput>>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  permissions_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  permissions_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  permissions_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CollaboratorWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentCreateInput = {
  author: Scalars['ID']['input'];
  isEdited: Scalars['Boolean']['input'];
  parentComment?: InputMaybe<Scalars['ID']['input']>;
  reactionsAndRepliesCount: Scalars['Float']['input'];
  reactionsCount: Scalars['Float']['input'];
  repliesCount: Scalars['Float']['input'];
  status: CommentStatus;
  text: Scalars['String']['input'];
  video: Scalars['ID']['input'];
};

export type CommentCreatedEventCreateInput = {
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  parentCommentAuthor?: InputMaybe<Scalars['ID']['input']>;
  text: Scalars['String']['input'];
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentCreatedEventOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ParentCommentAuthorAsc = 'parentCommentAuthor_ASC',
  ParentCommentAuthorDesc = 'parentCommentAuthor_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentCreatedEventUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  parentCommentAuthor?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentCreatedEventWhereInput = {
  AND?: InputMaybe<Array<CommentCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentCreatedEventWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  parentCommentAuthor?: InputMaybe<MembershipWhereInput>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentDeletedEventCreateInput = {
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentDeletedEventOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentDeletedEventUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentDeletedEventWhereInput = {
  AND?: InputMaybe<Array<CommentDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentDeletedEventWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentModeratedEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentModeratedEventOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentModeratedEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentModeratedEventWhereInput = {
  AND?: InputMaybe<Array<CommentModeratedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentModeratedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentModeratedEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentModeratedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum CommentOrderByInput {
  AuthorAsc = 'author_ASC',
  AuthorDesc = 'author_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IsEditedAsc = 'isEdited_ASC',
  IsEditedDesc = 'isEdited_DESC',
  ParentCommentAsc = 'parentComment_ASC',
  ParentCommentDesc = 'parentComment_DESC',
  ReactionsAndRepliesCountAsc = 'reactionsAndRepliesCount_ASC',
  ReactionsAndRepliesCountDesc = 'reactionsAndRepliesCount_DESC',
  ReactionsCountAsc = 'reactionsCount_ASC',
  ReactionsCountDesc = 'reactionsCount_DESC',
  RepliesCountAsc = 'repliesCount_ASC',
  RepliesCountDesc = 'repliesCount_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentPinnedEventCreateInput = {
  action: Scalars['Boolean']['input'];
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentPinnedEventOrderByInput {
  ActionAsc = 'action_ASC',
  ActionDesc = 'action_DESC',
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentPinnedEventUpdateInput = {
  action?: InputMaybe<Scalars['Boolean']['input']>;
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentPinnedEventWhereInput = {
  AND?: InputMaybe<Array<CommentPinnedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentPinnedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentPinnedEventWhereInput>>;
  action_eq?: InputMaybe<Scalars['Boolean']['input']>;
  action_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentPinnedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentReactedEventCreateInput = {
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  reactingMember: Scalars['ID']['input'];
  reactionResult: Scalars['Float']['input'];
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentReactedEventOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ReactingMemberAsc = 'reactingMember_ASC',
  ReactingMemberDesc = 'reactingMember_DESC',
  ReactionResultAsc = 'reactionResult_ASC',
  ReactionResultDesc = 'reactionResult_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentReactedEventUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  reactingMember?: InputMaybe<Scalars['ID']['input']>;
  reactionResult?: InputMaybe<Scalars['Float']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentReactedEventWhereInput = {
  AND?: InputMaybe<Array<CommentReactedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentReactedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentReactedEventWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  reactingMember?: InputMaybe<MembershipWhereInput>;
  reactionResult_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionResult_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionResult_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionResult_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionResult_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionResult_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentReactedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentReactionCreateInput = {
  comment: Scalars['ID']['input'];
  member: Scalars['ID']['input'];
  memberId: Scalars['String']['input'];
  reactionId: Scalars['Float']['input'];
  video: Scalars['ID']['input'];
};

export enum CommentReactionOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MemberIdAsc = 'memberId_ASC',
  MemberIdDesc = 'memberId_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  ReactionIdAsc = 'reactionId_ASC',
  ReactionIdDesc = 'reactionId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentReactionUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  memberId?: InputMaybe<Scalars['String']['input']>;
  reactionId?: InputMaybe<Scalars['Float']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentReactionWhereInput = {
  AND?: InputMaybe<Array<CommentReactionWhereInput>>;
  NOT?: InputMaybe<Array<CommentReactionWhereInput>>;
  OR?: InputMaybe<Array<CommentReactionWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  memberId_contains?: InputMaybe<Scalars['String']['input']>;
  memberId_endsWith?: InputMaybe<Scalars['String']['input']>;
  memberId_eq?: InputMaybe<Scalars['String']['input']>;
  memberId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  memberId_startsWith?: InputMaybe<Scalars['String']['input']>;
  reactionId_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionId_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionId_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionId_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionId_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type CommentReactionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentReactionsCountByReactionIdCreateInput = {
  comment: Scalars['ID']['input'];
  count: Scalars['Float']['input'];
  reactionId: Scalars['Float']['input'];
  video: Scalars['ID']['input'];
};

export enum CommentReactionsCountByReactionIdOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CountAsc = 'count_ASC',
  CountDesc = 'count_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ReactionIdAsc = 'reactionId_ASC',
  ReactionIdDesc = 'reactionId_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentReactionsCountByReactionIdUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  count?: InputMaybe<Scalars['Float']['input']>;
  reactionId?: InputMaybe<Scalars['Float']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentReactionsCountByReactionIdWhereInput = {
  AND?: InputMaybe<Array<CommentReactionsCountByReactionIdWhereInput>>;
  NOT?: InputMaybe<Array<CommentReactionsCountByReactionIdWhereInput>>;
  OR?: InputMaybe<Array<CommentReactionsCountByReactionIdWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  count_eq?: InputMaybe<Scalars['Int']['input']>;
  count_gt?: InputMaybe<Scalars['Int']['input']>;
  count_gte?: InputMaybe<Scalars['Int']['input']>;
  count_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  count_lt?: InputMaybe<Scalars['Int']['input']>;
  count_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  reactionId_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionId_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionId_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionId_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionId_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type CommentReactionsCountByReactionIdWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum CommentStatus {
  Deleted = 'DELETED',
  Moderated = 'MODERATED',
  Visible = 'VISIBLE'
}

export type CommentTextUpdatedEventCreateInput = {
  comment: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newText: Scalars['String']['input'];
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum CommentTextUpdatedEventOrderByInput {
  CommentAsc = 'comment_ASC',
  CommentDesc = 'comment_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewTextAsc = 'newText_ASC',
  NewTextDesc = 'newText_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type CommentTextUpdatedEventUpdateInput = {
  comment?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newText?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentTextUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<CommentTextUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CommentTextUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<CommentTextUpdatedEventWhereInput>>;
  comment?: InputMaybe<CommentWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newText_contains?: InputMaybe<Scalars['String']['input']>;
  newText_endsWith?: InputMaybe<Scalars['String']['input']>;
  newText_eq?: InputMaybe<Scalars['String']['input']>;
  newText_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newText_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type CommentTextUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CommentUpdateInput = {
  author?: InputMaybe<Scalars['ID']['input']>;
  isEdited?: InputMaybe<Scalars['Boolean']['input']>;
  parentComment?: InputMaybe<Scalars['ID']['input']>;
  reactionsAndRepliesCount?: InputMaybe<Scalars['Float']['input']>;
  reactionsCount?: InputMaybe<Scalars['Float']['input']>;
  repliesCount?: InputMaybe<Scalars['Float']['input']>;
  status?: InputMaybe<CommentStatus>;
  text?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type CommentWhereInput = {
  AND?: InputMaybe<Array<CommentWhereInput>>;
  NOT?: InputMaybe<Array<CommentWhereInput>>;
  OR?: InputMaybe<Array<CommentWhereInput>>;
  author?: InputMaybe<MembershipWhereInput>;
  commentcreatedeventcomment_every?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventcomment_none?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventcomment_some?: InputMaybe<CommentCreatedEventWhereInput>;
  commentparentComment_every?: InputMaybe<CommentWhereInput>;
  commentparentComment_none?: InputMaybe<CommentWhereInput>;
  commentparentComment_some?: InputMaybe<CommentWhereInput>;
  commentpinnedeventcomment_every?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventcomment_none?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventcomment_some?: InputMaybe<CommentPinnedEventWhereInput>;
  commentreactedeventcomment_every?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventcomment_none?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventcomment_some?: InputMaybe<CommentReactedEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedInEvent?: InputMaybe<CommentDeletedEventWhereInput>;
  edits_every?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  edits_none?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  edits_some?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isEdited_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isEdited_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  moderatedInEvent?: InputMaybe<CommentModeratedEventWhereInput>;
  parentComment?: InputMaybe<CommentWhereInput>;
  reactionsAndRepliesCount_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionsAndRepliesCount_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionsAndRepliesCount_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionsAndRepliesCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionsAndRepliesCount_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionsAndRepliesCount_lte?: InputMaybe<Scalars['Int']['input']>;
  reactionsCountByReactionId_every?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  reactionsCountByReactionId_none?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  reactionsCountByReactionId_some?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  reactionsCount_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionsCount_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_lte?: InputMaybe<Scalars['Int']['input']>;
  reactions_every?: InputMaybe<CommentReactionWhereInput>;
  reactions_none?: InputMaybe<CommentReactionWhereInput>;
  reactions_some?: InputMaybe<CommentReactionWhereInput>;
  repliesCount_eq?: InputMaybe<Scalars['Int']['input']>;
  repliesCount_gt?: InputMaybe<Scalars['Int']['input']>;
  repliesCount_gte?: InputMaybe<Scalars['Int']['input']>;
  repliesCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  repliesCount_lt?: InputMaybe<Scalars['Int']['input']>;
  repliesCount_lte?: InputMaybe<Scalars['Int']['input']>;
  status_eq?: InputMaybe<CommentStatus>;
  status_in?: InputMaybe<Array<CommentStatus>>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type CommentWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum Continent {
  Af = 'AF',
  An = 'AN',
  As = 'AS',
  Eu = 'EU',
  Na = 'NA',
  Oc = 'OC',
  Sa = 'SA'
}

export type CouncilBudgetDecreasedEventCreateInput = {
  amount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum CouncilBudgetDecreasedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CouncilBudgetDecreasedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type CouncilBudgetDecreasedEventWhereInput = {
  AND?: InputMaybe<Array<CouncilBudgetDecreasedEventWhereInput>>;
  NOT?: InputMaybe<Array<CouncilBudgetDecreasedEventWhereInput>>;
  OR?: InputMaybe<Array<CouncilBudgetDecreasedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CouncilBudgetDecreasedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CouncilBudgetFundedEventCreateInput = {
  amount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  memberId: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum CouncilBudgetFundedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberIdAsc = 'memberId_ASC',
  MemberIdDesc = 'memberId_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CouncilBudgetFundedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  memberId?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type CouncilBudgetFundedEventWhereInput = {
  AND?: InputMaybe<Array<CouncilBudgetFundedEventWhereInput>>;
  NOT?: InputMaybe<Array<CouncilBudgetFundedEventWhereInput>>;
  OR?: InputMaybe<Array<CouncilBudgetFundedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  memberId_eq?: InputMaybe<Scalars['Int']['input']>;
  memberId_gt?: InputMaybe<Scalars['Int']['input']>;
  memberId_gte?: InputMaybe<Scalars['Int']['input']>;
  memberId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  memberId_lt?: InputMaybe<Scalars['Int']['input']>;
  memberId_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CouncilBudgetFundedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CouncilMemberCreateInput = {
  accumulatedReward: Scalars['String']['input'];
  electedInCouncil: Scalars['ID']['input'];
  lastPaymentBlock: Scalars['String']['input'];
  member: Scalars['ID']['input'];
  rewardAccountId: Scalars['String']['input'];
  stake: Scalars['String']['input'];
  stakingAccountId: Scalars['String']['input'];
  unpaidReward: Scalars['String']['input'];
};

export enum CouncilMemberOrderByInput {
  AccumulatedRewardAsc = 'accumulatedReward_ASC',
  AccumulatedRewardDesc = 'accumulatedReward_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectedInCouncilAsc = 'electedInCouncil_ASC',
  ElectedInCouncilDesc = 'electedInCouncil_DESC',
  LastPaymentBlockAsc = 'lastPaymentBlock_ASC',
  LastPaymentBlockDesc = 'lastPaymentBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  RewardAccountIdAsc = 'rewardAccountId_ASC',
  RewardAccountIdDesc = 'rewardAccountId_DESC',
  StakeAsc = 'stake_ASC',
  StakeDesc = 'stake_DESC',
  StakingAccountIdAsc = 'stakingAccountId_ASC',
  StakingAccountIdDesc = 'stakingAccountId_DESC',
  UnpaidRewardAsc = 'unpaidReward_ASC',
  UnpaidRewardDesc = 'unpaidReward_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CouncilMemberUpdateInput = {
  accumulatedReward?: InputMaybe<Scalars['String']['input']>;
  electedInCouncil?: InputMaybe<Scalars['ID']['input']>;
  lastPaymentBlock?: InputMaybe<Scalars['String']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  rewardAccountId?: InputMaybe<Scalars['String']['input']>;
  stake?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId?: InputMaybe<Scalars['String']['input']>;
  unpaidReward?: InputMaybe<Scalars['String']['input']>;
};

export type CouncilMemberWhereInput = {
  AND?: InputMaybe<Array<CouncilMemberWhereInput>>;
  NOT?: InputMaybe<Array<CouncilMemberWhereInput>>;
  OR?: InputMaybe<Array<CouncilMemberWhereInput>>;
  accumulatedReward_eq?: InputMaybe<Scalars['BigInt']['input']>;
  accumulatedReward_gt?: InputMaybe<Scalars['BigInt']['input']>;
  accumulatedReward_gte?: InputMaybe<Scalars['BigInt']['input']>;
  accumulatedReward_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  accumulatedReward_lt?: InputMaybe<Scalars['BigInt']['input']>;
  accumulatedReward_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electedInCouncil?: InputMaybe<ElectedCouncilWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  lastPaymentBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  lastPaymentBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  lastPaymentBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  lastPaymentBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lastPaymentBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  lastPaymentBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  rewardAccountId_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccountId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccountId_startsWith?: InputMaybe<Scalars['String']['input']>;
  rewardpaymenteventcouncilMember_every?: InputMaybe<RewardPaymentEventWhereInput>;
  rewardpaymenteventcouncilMember_none?: InputMaybe<RewardPaymentEventWhereInput>;
  rewardpaymenteventcouncilMember_some?: InputMaybe<RewardPaymentEventWhereInput>;
  stake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stakingAccountId_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccountId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccountId_startsWith?: InputMaybe<Scalars['String']['input']>;
  unpaidReward_eq?: InputMaybe<Scalars['BigInt']['input']>;
  unpaidReward_gt?: InputMaybe<Scalars['BigInt']['input']>;
  unpaidReward_gte?: InputMaybe<Scalars['BigInt']['input']>;
  unpaidReward_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  unpaidReward_lt?: InputMaybe<Scalars['BigInt']['input']>;
  unpaidReward_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CouncilMemberWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CouncilStageUpdateCreateInput = {
  changedAt: Scalars['String']['input'];
  electedCouncil?: InputMaybe<Scalars['ID']['input']>;
  electionProblem?: InputMaybe<ElectionProblem>;
  stage: Scalars['JSONObject']['input'];
};

export enum CouncilStageUpdateOrderByInput {
  ChangedAtAsc = 'changedAt_ASC',
  ChangedAtDesc = 'changedAt_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectedCouncilAsc = 'electedCouncil_ASC',
  ElectedCouncilDesc = 'electedCouncil_DESC',
  ElectionProblemAsc = 'electionProblem_ASC',
  ElectionProblemDesc = 'electionProblem_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CouncilStageUpdateUpdateInput = {
  changedAt?: InputMaybe<Scalars['String']['input']>;
  electedCouncil?: InputMaybe<Scalars['ID']['input']>;
  electionProblem?: InputMaybe<ElectionProblem>;
  stage?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type CouncilStageUpdateWhereInput = {
  AND?: InputMaybe<Array<CouncilStageUpdateWhereInput>>;
  NOT?: InputMaybe<Array<CouncilStageUpdateWhereInput>>;
  OR?: InputMaybe<Array<CouncilStageUpdateWhereInput>>;
  changedAt_eq?: InputMaybe<Scalars['BigInt']['input']>;
  changedAt_gt?: InputMaybe<Scalars['BigInt']['input']>;
  changedAt_gte?: InputMaybe<Scalars['BigInt']['input']>;
  changedAt_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  changedAt_lt?: InputMaybe<Scalars['BigInt']['input']>;
  changedAt_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electedCouncil?: InputMaybe<ElectedCouncilWhereInput>;
  electionProblem_eq?: InputMaybe<ElectionProblem>;
  electionProblem_in?: InputMaybe<Array<ElectionProblem>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  stage_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CouncilStageUpdateWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CouncilorRewardUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rewardAmount: Scalars['String']['input'];
};

export enum CouncilorRewardUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RewardAmountAsc = 'rewardAmount_ASC',
  RewardAmountDesc = 'rewardAmount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CouncilorRewardUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rewardAmount?: InputMaybe<Scalars['String']['input']>;
};

export type CouncilorRewardUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<CouncilorRewardUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<CouncilorRewardUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<CouncilorRewardUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rewardAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  rewardAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  rewardAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  rewardAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CouncilorRewardUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CuratorAgentPermissionsCreateInput = {
  curator: Scalars['ID']['input'];
  curatorGroup: Scalars['ID']['input'];
  permissions: Array<Scalars['String']['input']>;
};

export enum CuratorAgentPermissionsOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CuratorGroupAsc = 'curatorGroup_ASC',
  CuratorGroupDesc = 'curatorGroup_DESC',
  CuratorAsc = 'curator_ASC',
  CuratorDesc = 'curator_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CuratorAgentPermissionsUpdateInput = {
  curator?: InputMaybe<Scalars['ID']['input']>;
  curatorGroup?: InputMaybe<Scalars['ID']['input']>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CuratorAgentPermissionsWhereInput = {
  AND?: InputMaybe<Array<CuratorAgentPermissionsWhereInput>>;
  NOT?: InputMaybe<Array<CuratorAgentPermissionsWhereInput>>;
  OR?: InputMaybe<Array<CuratorAgentPermissionsWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  curator?: InputMaybe<CuratorWhereInput>;
  curatorGroup?: InputMaybe<CuratorGroupWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  permissions_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  permissions_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  permissions_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CuratorAgentPermissionsWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type CuratorCreateInput = {
  dummy?: InputMaybe<Scalars['Float']['input']>;
};

export type CuratorGroupCreateInput = {
  isActive: Scalars['Boolean']['input'];
};

export enum CuratorGroupOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IsActiveAsc = 'isActive_ASC',
  IsActiveDesc = 'isActive_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CuratorGroupUpdateInput = {
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CuratorGroupWhereInput = {
  AND?: InputMaybe<Array<CuratorGroupWhereInput>>;
  NOT?: InputMaybe<Array<CuratorGroupWhereInput>>;
  OR?: InputMaybe<Array<CuratorGroupWhereInput>>;
  auctionbidcanceledeventownerCuratorGroup_every?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventownerCuratorGroup_none?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventownerCuratorGroup_some?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidmadeeventownerCuratorGroup_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventownerCuratorGroup_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventownerCuratorGroup_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctioncanceledeventownerCuratorGroup_every?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventownerCuratorGroup_none?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventownerCuratorGroup_some?: InputMaybe<AuctionCanceledEventWhereInput>;
  bidmadecompletingauctioneventownerCuratorGroup_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventownerCuratorGroup_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventownerCuratorGroup_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  buynowcanceledeventownerCuratorGroup_every?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventownerCuratorGroup_none?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventownerCuratorGroup_some?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowpriceupdatedeventownerCuratorGroup_every?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventownerCuratorGroup_none?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventownerCuratorGroup_some?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  channels_every?: InputMaybe<ChannelWhereInput>;
  channels_none?: InputMaybe<ChannelWhereInput>;
  channels_some?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  curators_every?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  curators_none?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  curators_some?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  englishauctionsettledeventownerCuratorGroup_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventownerCuratorGroup_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventownerCuratorGroup_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionstartedeventownerCuratorGroup_every?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventownerCuratorGroup_none?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventownerCuratorGroup_some?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isActive_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isActive_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  nftCollectorInChannels_every?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftCollectorInChannels_none?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftCollectorInChannels_some?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftboughteventownerCuratorGroup_every?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventownerCuratorGroup_none?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventownerCuratorGroup_some?: InputMaybe<NftBoughtEventWhereInput>;
  nftissuedeventownerCuratorGroup_every?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventownerCuratorGroup_none?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventownerCuratorGroup_some?: InputMaybe<NftIssuedEventWhereInput>;
  nftsellordermadeeventownerCuratorGroup_every?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventownerCuratorGroup_none?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventownerCuratorGroup_some?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_every?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_none?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_some?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  offeracceptedeventownerCuratorGroup_every?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventownerCuratorGroup_none?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventownerCuratorGroup_some?: InputMaybe<OfferAcceptedEventWhereInput>;
  offercanceledeventownerCuratorGroup_every?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventownerCuratorGroup_none?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventownerCuratorGroup_some?: InputMaybe<OfferCanceledEventWhereInput>;
  offerstartedeventownerCuratorGroup_every?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventownerCuratorGroup_none?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventownerCuratorGroup_some?: InputMaybe<OfferStartedEventWhereInput>;
  openauctionbidacceptedeventownerCuratorGroup_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventownerCuratorGroup_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventownerCuratorGroup_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionstartedeventownerCuratorGroup_every?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventownerCuratorGroup_none?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventownerCuratorGroup_some?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  ownednftownerCuratorGroup_every?: InputMaybe<OwnedNftWhereInput>;
  ownednftownerCuratorGroup_none?: InputMaybe<OwnedNftWhereInput>;
  ownednftownerCuratorGroup_some?: InputMaybe<OwnedNftWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CuratorGroupWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum CuratorOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DummyAsc = 'dummy_ASC',
  DummyDesc = 'dummy_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type CuratorUpdateInput = {
  dummy?: InputMaybe<Scalars['Float']['input']>;
};

export type CuratorWhereInput = {
  AND?: InputMaybe<Array<CuratorWhereInput>>;
  NOT?: InputMaybe<Array<CuratorWhereInput>>;
  OR?: InputMaybe<Array<CuratorWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  curatorGroups_every?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  curatorGroups_none?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  curatorGroups_some?: InputMaybe<CuratorAgentPermissionsWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  dummy_eq?: InputMaybe<Scalars['Int']['input']>;
  dummy_gt?: InputMaybe<Scalars['Int']['input']>;
  dummy_gte?: InputMaybe<Scalars['Int']['input']>;
  dummy_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  dummy_lt?: InputMaybe<Scalars['Int']['input']>;
  dummy_lte?: InputMaybe<Scalars['Int']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CuratorWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type DistributionBucketCreateInput = {
  acceptingNewBags: Scalars['Boolean']['input'];
  bucketIndex: Scalars['Float']['input'];
  distributing: Scalars['Boolean']['input'];
  family: Scalars['ID']['input'];
};

export type DistributionBucketFamilyCreateInput = {
  metadata?: InputMaybe<Scalars['ID']['input']>;
};

export type DistributionBucketFamilyGeographicAreaCreateInput = {
  area: Scalars['JSONObject']['input'];
  distributionBucketFamilyMetadata: Scalars['ID']['input'];
};

export enum DistributionBucketFamilyGeographicAreaOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DistributionBucketFamilyMetadataAsc = 'distributionBucketFamilyMetadata_ASC',
  DistributionBucketFamilyMetadataDesc = 'distributionBucketFamilyMetadata_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type DistributionBucketFamilyGeographicAreaUpdateInput = {
  area?: InputMaybe<Scalars['JSONObject']['input']>;
  distributionBucketFamilyMetadata?: InputMaybe<Scalars['ID']['input']>;
};

export type DistributionBucketFamilyGeographicAreaWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketFamilyGeographicAreaWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketFamilyGeographicAreaWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketFamilyGeographicAreaWhereInput>>;
  area_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributionBucketFamilyMetadata?: InputMaybe<DistributionBucketFamilyMetadataWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type DistributionBucketFamilyGeographicAreaWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type DistributionBucketFamilyMetadataCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  latencyTestTargets?: InputMaybe<Array<Scalars['String']['input']>>;
  region?: InputMaybe<Scalars['String']['input']>;
};

export enum DistributionBucketFamilyMetadataOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  RegionAsc = 'region_ASC',
  RegionDesc = 'region_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type DistributionBucketFamilyMetadataUpdateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  latencyTestTargets?: InputMaybe<Array<Scalars['String']['input']>>;
  region?: InputMaybe<Scalars['String']['input']>;
};

export type DistributionBucketFamilyMetadataWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketFamilyMetadataWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketFamilyMetadataWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketFamilyMetadataWhereInput>>;
  areas_every?: InputMaybe<DistributionBucketFamilyGeographicAreaWhereInput>;
  areas_none?: InputMaybe<DistributionBucketFamilyGeographicAreaWhereInput>;
  areas_some?: InputMaybe<DistributionBucketFamilyGeographicAreaWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  distributionbucketfamilymetadata_every?: InputMaybe<DistributionBucketFamilyWhereInput>;
  distributionbucketfamilymetadata_none?: InputMaybe<DistributionBucketFamilyWhereInput>;
  distributionbucketfamilymetadata_some?: InputMaybe<DistributionBucketFamilyWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  latencyTestTargets_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  latencyTestTargets_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  latencyTestTargets_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  region_contains?: InputMaybe<Scalars['String']['input']>;
  region_endsWith?: InputMaybe<Scalars['String']['input']>;
  region_eq?: InputMaybe<Scalars['String']['input']>;
  region_in?: InputMaybe<Array<Scalars['String']['input']>>;
  region_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type DistributionBucketFamilyMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum DistributionBucketFamilyOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type DistributionBucketFamilyUpdateInput = {
  metadata?: InputMaybe<Scalars['ID']['input']>;
};

export type DistributionBucketFamilyWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketFamilyWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketFamilyWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketFamilyWhereInput>>;
  buckets_every?: InputMaybe<DistributionBucketWhereInput>;
  buckets_none?: InputMaybe<DistributionBucketWhereInput>;
  buckets_some?: InputMaybe<DistributionBucketWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<DistributionBucketFamilyMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type DistributionBucketFamilyWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type DistributionBucketOperatorCreateInput = {
  distributionBucket: Scalars['ID']['input'];
  metadata?: InputMaybe<Scalars['ID']['input']>;
  status: DistributionBucketOperatorStatus;
  workerId: Scalars['Float']['input'];
};

export type DistributionBucketOperatorMetadataCreateInput = {
  extra?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<Scalars['ID']['input']>;
};

export enum DistributionBucketOperatorMetadataOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ExtraAsc = 'extra_ASC',
  ExtraDesc = 'extra_DESC',
  NodeEndpointAsc = 'nodeEndpoint_ASC',
  NodeEndpointDesc = 'nodeEndpoint_DESC',
  NodeLocationAsc = 'nodeLocation_ASC',
  NodeLocationDesc = 'nodeLocation_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type DistributionBucketOperatorMetadataUpdateInput = {
  extra?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<Scalars['ID']['input']>;
};

export type DistributionBucketOperatorMetadataWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketOperatorMetadataWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketOperatorMetadataWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketOperatorMetadataWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributionbucketoperatormetadata_every?: InputMaybe<DistributionBucketOperatorWhereInput>;
  distributionbucketoperatormetadata_none?: InputMaybe<DistributionBucketOperatorWhereInput>;
  distributionbucketoperatormetadata_some?: InputMaybe<DistributionBucketOperatorWhereInput>;
  extra_contains?: InputMaybe<Scalars['String']['input']>;
  extra_endsWith?: InputMaybe<Scalars['String']['input']>;
  extra_eq?: InputMaybe<Scalars['String']['input']>;
  extra_in?: InputMaybe<Array<Scalars['String']['input']>>;
  extra_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  nodeEndpoint_contains?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_endsWith?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_eq?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_in?: InputMaybe<Array<Scalars['String']['input']>>;
  nodeEndpoint_startsWith?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<NodeLocationMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type DistributionBucketOperatorMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum DistributionBucketOperatorOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DistributionBucketAsc = 'distributionBucket_ASC',
  DistributionBucketDesc = 'distributionBucket_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerIdAsc = 'workerId_ASC',
  WorkerIdDesc = 'workerId_DESC'
}

export enum DistributionBucketOperatorStatus {
  Active = 'ACTIVE',
  Invited = 'INVITED'
}

export type DistributionBucketOperatorUpdateInput = {
  distributionBucket?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<DistributionBucketOperatorStatus>;
  workerId?: InputMaybe<Scalars['Float']['input']>;
};

export type DistributionBucketOperatorWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketOperatorWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketOperatorWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketOperatorWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributionBucket?: InputMaybe<DistributionBucketWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<DistributionBucketOperatorMetadataWhereInput>;
  status_eq?: InputMaybe<DistributionBucketOperatorStatus>;
  status_in?: InputMaybe<Array<DistributionBucketOperatorStatus>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workerId_eq?: InputMaybe<Scalars['Int']['input']>;
  workerId_gt?: InputMaybe<Scalars['Int']['input']>;
  workerId_gte?: InputMaybe<Scalars['Int']['input']>;
  workerId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  workerId_lt?: InputMaybe<Scalars['Int']['input']>;
  workerId_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type DistributionBucketOperatorWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum DistributionBucketOrderByInput {
  AcceptingNewBagsAsc = 'acceptingNewBags_ASC',
  AcceptingNewBagsDesc = 'acceptingNewBags_DESC',
  BucketIndexAsc = 'bucketIndex_ASC',
  BucketIndexDesc = 'bucketIndex_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DistributingAsc = 'distributing_ASC',
  DistributingDesc = 'distributing_DESC',
  FamilyAsc = 'family_ASC',
  FamilyDesc = 'family_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type DistributionBucketUpdateInput = {
  acceptingNewBags?: InputMaybe<Scalars['Boolean']['input']>;
  bucketIndex?: InputMaybe<Scalars['Float']['input']>;
  distributing?: InputMaybe<Scalars['Boolean']['input']>;
  family?: InputMaybe<Scalars['ID']['input']>;
};

export type DistributionBucketWhereInput = {
  AND?: InputMaybe<Array<DistributionBucketWhereInput>>;
  NOT?: InputMaybe<Array<DistributionBucketWhereInput>>;
  OR?: InputMaybe<Array<DistributionBucketWhereInput>>;
  acceptingNewBags_eq?: InputMaybe<Scalars['Boolean']['input']>;
  acceptingNewBags_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  bags_every?: InputMaybe<StorageBagWhereInput>;
  bags_none?: InputMaybe<StorageBagWhereInput>;
  bags_some?: InputMaybe<StorageBagWhereInput>;
  bucketIndex_eq?: InputMaybe<Scalars['Int']['input']>;
  bucketIndex_gt?: InputMaybe<Scalars['Int']['input']>;
  bucketIndex_gte?: InputMaybe<Scalars['Int']['input']>;
  bucketIndex_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  bucketIndex_lt?: InputMaybe<Scalars['Int']['input']>;
  bucketIndex_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributing_eq?: InputMaybe<Scalars['Boolean']['input']>;
  distributing_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  family?: InputMaybe<DistributionBucketFamilyWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  operators_every?: InputMaybe<DistributionBucketOperatorWhereInput>;
  operators_none?: InputMaybe<DistributionBucketOperatorWhereInput>;
  operators_some?: InputMaybe<DistributionBucketOperatorWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type DistributionBucketWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ElectedCouncilCreateInput = {
  electedAtBlock: Scalars['Float']['input'];
  electedAtNetwork: Network;
  electedAtTime: Scalars['DateTime']['input'];
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  endedAtNetwork?: InputMaybe<Network>;
  endedAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  isResigned: Scalars['Boolean']['input'];
};

export enum ElectedCouncilOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectedAtBlockAsc = 'electedAtBlock_ASC',
  ElectedAtBlockDesc = 'electedAtBlock_DESC',
  ElectedAtNetworkAsc = 'electedAtNetwork_ASC',
  ElectedAtNetworkDesc = 'electedAtNetwork_DESC',
  ElectedAtTimeAsc = 'electedAtTime_ASC',
  ElectedAtTimeDesc = 'electedAtTime_DESC',
  EndedAtBlockAsc = 'endedAtBlock_ASC',
  EndedAtBlockDesc = 'endedAtBlock_DESC',
  EndedAtNetworkAsc = 'endedAtNetwork_ASC',
  EndedAtNetworkDesc = 'endedAtNetwork_DESC',
  EndedAtTimeAsc = 'endedAtTime_ASC',
  EndedAtTimeDesc = 'endedAtTime_DESC',
  IsResignedAsc = 'isResigned_ASC',
  IsResignedDesc = 'isResigned_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ElectedCouncilUpdateInput = {
  electedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  electedAtNetwork?: InputMaybe<Network>;
  electedAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  endedAtNetwork?: InputMaybe<Network>;
  endedAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  isResigned?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ElectedCouncilWhereInput = {
  AND?: InputMaybe<Array<ElectedCouncilWhereInput>>;
  NOT?: InputMaybe<Array<ElectedCouncilWhereInput>>;
  OR?: InputMaybe<Array<ElectedCouncilWhereInput>>;
  councilElections_every?: InputMaybe<ElectionRoundWhereInput>;
  councilElections_none?: InputMaybe<ElectionRoundWhereInput>;
  councilElections_some?: InputMaybe<ElectionRoundWhereInput>;
  councilMembers_every?: InputMaybe<CouncilMemberWhereInput>;
  councilMembers_none?: InputMaybe<CouncilMemberWhereInput>;
  councilMembers_some?: InputMaybe<CouncilMemberWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electedAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  electedAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  electedAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  electedAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  electedAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  electedAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  electedAtNetwork_eq?: InputMaybe<Network>;
  electedAtNetwork_in?: InputMaybe<Array<Network>>;
  electedAtTime_eq?: InputMaybe<Scalars['DateTime']['input']>;
  electedAtTime_gt?: InputMaybe<Scalars['DateTime']['input']>;
  electedAtTime_gte?: InputMaybe<Scalars['DateTime']['input']>;
  electedAtTime_lt?: InputMaybe<Scalars['DateTime']['input']>;
  electedAtTime_lte?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  endedAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  endedAtNetwork_eq?: InputMaybe<Network>;
  endedAtNetwork_in?: InputMaybe<Array<Network>>;
  endedAtTime_eq?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_gt?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_gte?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_lt?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_lte?: InputMaybe<Scalars['DateTime']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isResigned_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isResigned_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  newcouncilelectedeventelectedCouncil_every?: InputMaybe<NewCouncilElectedEventWhereInput>;
  newcouncilelectedeventelectedCouncil_none?: InputMaybe<NewCouncilElectedEventWhereInput>;
  newcouncilelectedeventelectedCouncil_some?: InputMaybe<NewCouncilElectedEventWhereInput>;
  nextCouncilElections_every?: InputMaybe<ElectionRoundWhereInput>;
  nextCouncilElections_none?: InputMaybe<ElectionRoundWhereInput>;
  nextCouncilElections_some?: InputMaybe<ElectionRoundWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updates_every?: InputMaybe<CouncilStageUpdateWhereInput>;
  updates_none?: InputMaybe<CouncilStageUpdateWhereInput>;
  updates_some?: InputMaybe<CouncilStageUpdateWhereInput>;
};

export type ElectedCouncilWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum ElectionProblem {
  NewCouncilNotElected = 'NEW_COUNCIL_NOT_ELECTED',
  NotEnoughCandidates = 'NOT_ENOUGH_CANDIDATES'
}

export type ElectionRoundCreateInput = {
  cycleId: Scalars['Float']['input'];
  electedCouncil: Scalars['ID']['input'];
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  endedAtNetwork?: InputMaybe<Network>;
  endedAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  isFinished: Scalars['Boolean']['input'];
  nextElectedCouncil?: InputMaybe<Scalars['ID']['input']>;
};

export enum ElectionRoundOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CycleIdAsc = 'cycleId_ASC',
  CycleIdDesc = 'cycleId_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectedCouncilAsc = 'electedCouncil_ASC',
  ElectedCouncilDesc = 'electedCouncil_DESC',
  EndedAtBlockAsc = 'endedAtBlock_ASC',
  EndedAtBlockDesc = 'endedAtBlock_DESC',
  EndedAtNetworkAsc = 'endedAtNetwork_ASC',
  EndedAtNetworkDesc = 'endedAtNetwork_DESC',
  EndedAtTimeAsc = 'endedAtTime_ASC',
  EndedAtTimeDesc = 'endedAtTime_DESC',
  IsFinishedAsc = 'isFinished_ASC',
  IsFinishedDesc = 'isFinished_DESC',
  NextElectedCouncilAsc = 'nextElectedCouncil_ASC',
  NextElectedCouncilDesc = 'nextElectedCouncil_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ElectionRoundUpdateInput = {
  cycleId?: InputMaybe<Scalars['Float']['input']>;
  electedCouncil?: InputMaybe<Scalars['ID']['input']>;
  endedAtBlock?: InputMaybe<Scalars['Float']['input']>;
  endedAtNetwork?: InputMaybe<Network>;
  endedAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  isFinished?: InputMaybe<Scalars['Boolean']['input']>;
  nextElectedCouncil?: InputMaybe<Scalars['ID']['input']>;
};

export type ElectionRoundWhereInput = {
  AND?: InputMaybe<Array<ElectionRoundWhereInput>>;
  NOT?: InputMaybe<Array<ElectionRoundWhereInput>>;
  OR?: InputMaybe<Array<ElectionRoundWhereInput>>;
  candidates_every?: InputMaybe<CandidateWhereInput>;
  candidates_none?: InputMaybe<CandidateWhereInput>;
  candidates_some?: InputMaybe<CandidateWhereInput>;
  castVotes_every?: InputMaybe<CastVoteWhereInput>;
  castVotes_none?: InputMaybe<CastVoteWhereInput>;
  castVotes_some?: InputMaybe<CastVoteWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  cycleId_eq?: InputMaybe<Scalars['Int']['input']>;
  cycleId_gt?: InputMaybe<Scalars['Int']['input']>;
  cycleId_gte?: InputMaybe<Scalars['Int']['input']>;
  cycleId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  cycleId_lt?: InputMaybe<Scalars['Int']['input']>;
  cycleId_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electedCouncil?: InputMaybe<ElectedCouncilWhereInput>;
  endedAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  endedAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  endedAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  endedAtNetwork_eq?: InputMaybe<Network>;
  endedAtNetwork_in?: InputMaybe<Array<Network>>;
  endedAtTime_eq?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_gt?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_gte?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_lt?: InputMaybe<Scalars['DateTime']['input']>;
  endedAtTime_lte?: InputMaybe<Scalars['DateTime']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isFinished_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isFinished_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  newcandidateeventelectionRound_every?: InputMaybe<NewCandidateEventWhereInput>;
  newcandidateeventelectionRound_none?: InputMaybe<NewCandidateEventWhereInput>;
  newcandidateeventelectionRound_some?: InputMaybe<NewCandidateEventWhereInput>;
  nextElectedCouncil?: InputMaybe<ElectedCouncilWhereInput>;
  referendumStageRevealing?: InputMaybe<ReferendumStageRevealingWhereInput>;
  referendumStageVoting?: InputMaybe<ReferendumStageVotingWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ElectionRoundWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type EnglishAuctionSettledEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
  winner: Scalars['ID']['input'];
  winningBid: Scalars['ID']['input'];
};

export enum EnglishAuctionSettledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC',
  WinnerAsc = 'winner_ASC',
  WinnerDesc = 'winner_DESC',
  WinningBidAsc = 'winningBid_ASC',
  WinningBidDesc = 'winningBid_DESC'
}

export type EnglishAuctionSettledEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  winner?: InputMaybe<Scalars['ID']['input']>;
  winningBid?: InputMaybe<Scalars['ID']['input']>;
};

export type EnglishAuctionSettledEventWhereInput = {
  AND?: InputMaybe<Array<EnglishAuctionSettledEventWhereInput>>;
  NOT?: InputMaybe<Array<EnglishAuctionSettledEventWhereInput>>;
  OR?: InputMaybe<Array<EnglishAuctionSettledEventWhereInput>>;
  bidders_every?: InputMaybe<MembershipWhereInput>;
  bidders_none?: InputMaybe<MembershipWhereInput>;
  bidders_some?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  winner?: InputMaybe<MembershipWhereInput>;
  winningBid?: InputMaybe<BidWhereInput>;
};

export type EnglishAuctionSettledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type EnglishAuctionStartedEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  auction: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum EnglishAuctionStartedEventOrderByInput {
  AuctionAsc = 'auction_ASC',
  AuctionDesc = 'auction_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type EnglishAuctionStartedEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  auction?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type EnglishAuctionStartedEventWhereInput = {
  AND?: InputMaybe<Array<EnglishAuctionStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<EnglishAuctionStartedEventWhereInput>>;
  OR?: InputMaybe<Array<EnglishAuctionStartedEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  auction?: InputMaybe<AuctionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type EnglishAuctionStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type EventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  type?: InputMaybe<EventTypeOptions>;
};

export enum EventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  TypeAsc = 'type_ASC',
  TypeDesc = 'type_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export enum EventTypeOptions {
  AnnouncingPeriodStartedEvent = 'AnnouncingPeriodStartedEvent',
  ApplicationWithdrawnEvent = 'ApplicationWithdrawnEvent',
  AppliedOnOpeningEvent = 'AppliedOnOpeningEvent',
  AuctionBidCanceledEvent = 'AuctionBidCanceledEvent',
  AuctionBidMadeEvent = 'AuctionBidMadeEvent',
  AuctionCanceledEvent = 'AuctionCanceledEvent',
  BidMadeCompletingAuctionEvent = 'BidMadeCompletingAuctionEvent',
  BountyCanceledEvent = 'BountyCanceledEvent',
  BountyCreatedEvent = 'BountyCreatedEvent',
  BountyCreatorCherryWithdrawalEvent = 'BountyCreatorCherryWithdrawalEvent',
  BountyFundedEvent = 'BountyFundedEvent',
  BountyFundingWithdrawalEvent = 'BountyFundingWithdrawalEvent',
  BountyMaxFundingReachedEvent = 'BountyMaxFundingReachedEvent',
  BountyRemovedEvent = 'BountyRemovedEvent',
  BountyVetoedEvent = 'BountyVetoedEvent',
  BudgetBalanceSetEvent = 'BudgetBalanceSetEvent',
  BudgetFundedEvent = 'BudgetFundedEvent',
  BudgetIncrementUpdatedEvent = 'BudgetIncrementUpdatedEvent',
  BudgetRefillEvent = 'BudgetRefillEvent',
  BudgetRefillPlannedEvent = 'BudgetRefillPlannedEvent',
  BudgetSetEvent = 'BudgetSetEvent',
  BudgetSpendingEvent = 'BudgetSpendingEvent',
  BudgetUpdatedEvent = 'BudgetUpdatedEvent',
  BuyNowCanceledEvent = 'BuyNowCanceledEvent',
  BuyNowPriceUpdatedEvent = 'BuyNowPriceUpdatedEvent',
  CandidacyNoteSetEvent = 'CandidacyNoteSetEvent',
  CandidacyStakeReleaseEvent = 'CandidacyStakeReleaseEvent',
  CandidacyWithdrawEvent = 'CandidacyWithdrawEvent',
  CategoryArchivalStatusUpdatedEvent = 'CategoryArchivalStatusUpdatedEvent',
  CategoryCreatedEvent = 'CategoryCreatedEvent',
  CategoryDeletedEvent = 'CategoryDeletedEvent',
  CategoryMembershipOfModeratorUpdatedEvent = 'CategoryMembershipOfModeratorUpdatedEvent',
  CategoryStickyThreadUpdateEvent = 'CategoryStickyThreadUpdateEvent',
  ChannelFundsWithdrawnEvent = 'ChannelFundsWithdrawnEvent',
  ChannelRewardClaimedAndWithdrawnEvent = 'ChannelRewardClaimedAndWithdrawnEvent',
  ChannelRewardClaimedEvent = 'ChannelRewardClaimedEvent',
  CommentCreatedEvent = 'CommentCreatedEvent',
  CommentDeletedEvent = 'CommentDeletedEvent',
  CommentModeratedEvent = 'CommentModeratedEvent',
  CommentPinnedEvent = 'CommentPinnedEvent',
  CommentReactedEvent = 'CommentReactedEvent',
  CommentTextUpdatedEvent = 'CommentTextUpdatedEvent',
  CouncilBudgetDecreasedEvent = 'CouncilBudgetDecreasedEvent',
  CouncilBudgetFundedEvent = 'CouncilBudgetFundedEvent',
  CouncilorRewardUpdatedEvent = 'CouncilorRewardUpdatedEvent',
  EnglishAuctionSettledEvent = 'EnglishAuctionSettledEvent',
  EnglishAuctionStartedEvent = 'EnglishAuctionStartedEvent',
  InitialInvitationBalanceUpdatedEvent = 'InitialInvitationBalanceUpdatedEvent',
  InitialInvitationCountUpdatedEvent = 'InitialInvitationCountUpdatedEvent',
  InvitesTransferredEvent = 'InvitesTransferredEvent',
  LeaderInvitationQuotaUpdatedEvent = 'LeaderInvitationQuotaUpdatedEvent',
  LeaderSetEvent = 'LeaderSetEvent',
  LeaderUnsetEvent = 'LeaderUnsetEvent',
  MemberAccountsUpdatedEvent = 'MemberAccountsUpdatedEvent',
  MemberBannedFromChannelEvent = 'MemberBannedFromChannelEvent',
  MemberCreatedEvent = 'MemberCreatedEvent',
  MemberInvitedEvent = 'MemberInvitedEvent',
  MemberProfileUpdatedEvent = 'MemberProfileUpdatedEvent',
  MemberVerificationStatusUpdatedEvent = 'MemberVerificationStatusUpdatedEvent',
  MembershipBoughtEvent = 'MembershipBoughtEvent',
  MembershipGiftedEvent = 'MembershipGiftedEvent',
  MembershipPriceUpdatedEvent = 'MembershipPriceUpdatedEvent',
  MetaprotocolTransactionStatusEvent = 'MetaprotocolTransactionStatusEvent',
  NewCandidateEvent = 'NewCandidateEvent',
  NewCouncilElectedEvent = 'NewCouncilElectedEvent',
  NewCouncilNotElectedEvent = 'NewCouncilNotElectedEvent',
  NewMissedRewardLevelReachedEvent = 'NewMissedRewardLevelReachedEvent',
  NftBoughtEvent = 'NftBoughtEvent',
  NftIssuedEvent = 'NftIssuedEvent',
  NftSlingedBackToTheOriginalArtistEvent = 'NftSlingedBackToTheOriginalArtistEvent',
  NotEnoughCandidatesEvent = 'NotEnoughCandidatesEvent',
  OfferAcceptedEvent = 'OfferAcceptedEvent',
  OfferCanceledEvent = 'OfferCanceledEvent',
  OfferStartedEvent = 'OfferStartedEvent',
  OpenAuctionBidAcceptedEvent = 'OpenAuctionBidAcceptedEvent',
  OpenAuctionStartedEvent = 'OpenAuctionStartedEvent',
  OpeningAddedEvent = 'OpeningAddedEvent',
  OpeningCanceledEvent = 'OpeningCanceledEvent',
  OpeningFilledEvent = 'OpeningFilledEvent',
  OracleJudgmentSubmittedEvent = 'OracleJudgmentSubmittedEvent',
  PostAddedEvent = 'PostAddedEvent',
  PostDeletedEvent = 'PostDeletedEvent',
  PostModeratedEvent = 'PostModeratedEvent',
  PostTextUpdatedEvent = 'PostTextUpdatedEvent',
  ProposalCancelledEvent = 'ProposalCancelledEvent',
  ProposalCreatedEvent = 'ProposalCreatedEvent',
  ProposalDecisionMadeEvent = 'ProposalDecisionMadeEvent',
  ProposalDiscussionPostCreatedEvent = 'ProposalDiscussionPostCreatedEvent',
  ProposalDiscussionPostDeletedEvent = 'ProposalDiscussionPostDeletedEvent',
  ProposalDiscussionPostUpdatedEvent = 'ProposalDiscussionPostUpdatedEvent',
  ProposalDiscussionThreadModeChangedEvent = 'ProposalDiscussionThreadModeChangedEvent',
  ProposalExecutedEvent = 'ProposalExecutedEvent',
  ProposalStatusUpdatedEvent = 'ProposalStatusUpdatedEvent',
  ProposalVotedEvent = 'ProposalVotedEvent',
  ReferendumFinishedEvent = 'ReferendumFinishedEvent',
  ReferendumStartedEvent = 'ReferendumStartedEvent',
  ReferendumStartedForcefullyEvent = 'ReferendumStartedForcefullyEvent',
  ReferralCutUpdatedEvent = 'ReferralCutUpdatedEvent',
  RequestFundedEvent = 'RequestFundedEvent',
  RevealingStageStartedEvent = 'RevealingStageStartedEvent',
  RewardPaidEvent = 'RewardPaidEvent',
  RewardPaymentEvent = 'RewardPaymentEvent',
  StakeDecreasedEvent = 'StakeDecreasedEvent',
  StakeIncreasedEvent = 'StakeIncreasedEvent',
  StakeReleasedEvent = 'StakeReleasedEvent',
  StakeSlashedEvent = 'StakeSlashedEvent',
  StakingAccountAddedEvent = 'StakingAccountAddedEvent',
  StakingAccountConfirmedEvent = 'StakingAccountConfirmedEvent',
  StakingAccountRemovedEvent = 'StakingAccountRemovedEvent',
  StatusTextChangedEvent = 'StatusTextChangedEvent',
  TerminatedLeaderEvent = 'TerminatedLeaderEvent',
  TerminatedWorkerEvent = 'TerminatedWorkerEvent',
  ThreadCreatedEvent = 'ThreadCreatedEvent',
  ThreadDeletedEvent = 'ThreadDeletedEvent',
  ThreadMetadataUpdatedEvent = 'ThreadMetadataUpdatedEvent',
  ThreadModeratedEvent = 'ThreadModeratedEvent',
  ThreadMovedEvent = 'ThreadMovedEvent',
  VestedBudgetSpendingEvent = 'VestedBudgetSpendingEvent',
  VideoReactedEvent = 'VideoReactedEvent',
  VideoReactionsPreferenceEvent = 'VideoReactionsPreferenceEvent',
  VoteCastEvent = 'VoteCastEvent',
  VoteRevealedEvent = 'VoteRevealedEvent',
  VotingPeriodStartedEvent = 'VotingPeriodStartedEvent',
  WorkEntrantFundsWithdrawnEvent = 'WorkEntrantFundsWithdrawnEvent',
  WorkEntryAnnouncedEvent = 'WorkEntryAnnouncedEvent',
  WorkEntrySlashedEvent = 'WorkEntrySlashedEvent',
  WorkEntryWithdrawnEvent = 'WorkEntryWithdrawnEvent',
  WorkSubmittedEvent = 'WorkSubmittedEvent',
  WorkerExitedEvent = 'WorkerExitedEvent',
  WorkerRewardAccountUpdatedEvent = 'WorkerRewardAccountUpdatedEvent',
  WorkerRewardAmountUpdatedEvent = 'WorkerRewardAmountUpdatedEvent',
  WorkerRoleAccountUpdatedEvent = 'WorkerRoleAccountUpdatedEvent',
  WorkerStartedLeavingEvent = 'WorkerStartedLeavingEvent'
}

export type EventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  type?: InputMaybe<EventTypeOptions>;
};

export type EventWhereInput = {
  AND?: InputMaybe<Array<EventWhereInput>>;
  NOT?: InputMaybe<Array<EventWhereInput>>;
  OR?: InputMaybe<Array<EventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  type_eq?: InputMaybe<EventTypeOptions>;
  type_in?: InputMaybe<Array<EventTypeOptions>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type EventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ForumCategoryCreateInput = {
  description: Scalars['String']['input'];
  parent?: InputMaybe<Scalars['ID']['input']>;
  status: Scalars['JSONObject']['input'];
  title: Scalars['String']['input'];
};

export enum ForumCategoryOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  ParentAsc = 'parent_ASC',
  ParentDesc = 'parent_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ForumCategoryUpdateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type ForumCategoryWhereInput = {
  AND?: InputMaybe<Array<ForumCategoryWhereInput>>;
  NOT?: InputMaybe<Array<ForumCategoryWhereInput>>;
  OR?: InputMaybe<Array<ForumCategoryWhereInput>>;
  categoryarchivalstatusupdatedeventcategory_every?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categoryarchivalstatusupdatedeventcategory_none?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categoryarchivalstatusupdatedeventcategory_some?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categorydeletedeventcategory_every?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorydeletedeventcategory_none?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorydeletedeventcategory_some?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventcategory_every?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventcategory_none?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventcategory_some?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorystickythreadupdateeventcategory_every?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  categorystickythreadupdateeventcategory_none?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  categorystickythreadupdateeventcategory_some?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<CategoryCreatedEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  forumcategoryparent_every?: InputMaybe<ForumCategoryWhereInput>;
  forumcategoryparent_none?: InputMaybe<ForumCategoryWhereInput>;
  forumcategoryparent_some?: InputMaybe<ForumCategoryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  moderators_every?: InputMaybe<WorkerWhereInput>;
  moderators_none?: InputMaybe<WorkerWhereInput>;
  moderators_some?: InputMaybe<WorkerWhereInput>;
  parent?: InputMaybe<ForumCategoryWhereInput>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  threadmovedeventnewCategory_every?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventnewCategory_none?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventnewCategory_some?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventoldCategory_every?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventoldCategory_none?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventoldCategory_some?: InputMaybe<ThreadMovedEventWhereInput>;
  threads_every?: InputMaybe<ForumThreadWhereInput>;
  threads_none?: InputMaybe<ForumThreadWhereInput>;
  threads_some?: InputMaybe<ForumThreadWhereInput>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ForumCategoryWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ForumPostCreateInput = {
  author: Scalars['ID']['input'];
  deletedInEvent?: InputMaybe<Scalars['ID']['input']>;
  isVisible: Scalars['Boolean']['input'];
  origin: Scalars['JSONObject']['input'];
  repliesTo?: InputMaybe<Scalars['ID']['input']>;
  status: Scalars['JSONObject']['input'];
  text: Scalars['String']['input'];
  thread: Scalars['ID']['input'];
};

export enum ForumPostOrderByInput {
  AuthorAsc = 'author_ASC',
  AuthorDesc = 'author_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DeletedInEventAsc = 'deletedInEvent_ASC',
  DeletedInEventDesc = 'deletedInEvent_DESC',
  IsVisibleAsc = 'isVisible_ASC',
  IsVisibleDesc = 'isVisible_DESC',
  RepliesToAsc = 'repliesTo_ASC',
  RepliesToDesc = 'repliesTo_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ForumPostUpdateInput = {
  author?: InputMaybe<Scalars['ID']['input']>;
  deletedInEvent?: InputMaybe<Scalars['ID']['input']>;
  isVisible?: InputMaybe<Scalars['Boolean']['input']>;
  origin?: InputMaybe<Scalars['JSONObject']['input']>;
  repliesTo?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ForumPostWhereInput = {
  AND?: InputMaybe<Array<ForumPostWhereInput>>;
  NOT?: InputMaybe<Array<ForumPostWhereInput>>;
  OR?: InputMaybe<Array<ForumPostWhereInput>>;
  author?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedInEvent?: InputMaybe<PostDeletedEventWhereInput>;
  edits_every?: InputMaybe<PostTextUpdatedEventWhereInput>;
  edits_none?: InputMaybe<PostTextUpdatedEventWhereInput>;
  edits_some?: InputMaybe<PostTextUpdatedEventWhereInput>;
  forumpostrepliesTo_every?: InputMaybe<ForumPostWhereInput>;
  forumpostrepliesTo_none?: InputMaybe<ForumPostWhereInput>;
  forumpostrepliesTo_some?: InputMaybe<ForumPostWhereInput>;
  forumthreadinitialPost_every?: InputMaybe<ForumThreadWhereInput>;
  forumthreadinitialPost_none?: InputMaybe<ForumThreadWhereInput>;
  forumthreadinitialPost_some?: InputMaybe<ForumThreadWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isVisible_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVisible_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  origin_json?: InputMaybe<Scalars['JSONObject']['input']>;
  postaddedeventpost_every?: InputMaybe<PostAddedEventWhereInput>;
  postaddedeventpost_none?: InputMaybe<PostAddedEventWhereInput>;
  postaddedeventpost_some?: InputMaybe<PostAddedEventWhereInput>;
  postmoderatedeventpost_every?: InputMaybe<PostModeratedEventWhereInput>;
  postmoderatedeventpost_none?: InputMaybe<PostModeratedEventWhereInput>;
  postmoderatedeventpost_some?: InputMaybe<PostModeratedEventWhereInput>;
  repliesTo?: InputMaybe<ForumPostWhereInput>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ForumPostWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ForumThreadCreateInput = {
  author: Scalars['ID']['input'];
  category: Scalars['ID']['input'];
  initialPost?: InputMaybe<Scalars['ID']['input']>;
  isSticky: Scalars['Boolean']['input'];
  isVisible: Scalars['Boolean']['input'];
  status: Scalars['JSONObject']['input'];
  title: Scalars['String']['input'];
  visiblePostsCount: Scalars['Float']['input'];
};

export enum ForumThreadOrderByInput {
  AuthorAsc = 'author_ASC',
  AuthorDesc = 'author_DESC',
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InitialPostAsc = 'initialPost_ASC',
  InitialPostDesc = 'initialPost_DESC',
  IsStickyAsc = 'isSticky_ASC',
  IsStickyDesc = 'isSticky_DESC',
  IsVisibleAsc = 'isVisible_ASC',
  IsVisibleDesc = 'isVisible_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VisiblePostsCountAsc = 'visiblePostsCount_ASC',
  VisiblePostsCountDesc = 'visiblePostsCount_DESC'
}

export type ForumThreadTagCreateInput = {
  visibleThreadsCount: Scalars['Float']['input'];
};

export enum ForumThreadTagOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VisibleThreadsCountAsc = 'visibleThreadsCount_ASC',
  VisibleThreadsCountDesc = 'visibleThreadsCount_DESC'
}

export type ForumThreadTagUpdateInput = {
  visibleThreadsCount?: InputMaybe<Scalars['Float']['input']>;
};

export type ForumThreadTagWhereInput = {
  AND?: InputMaybe<Array<ForumThreadTagWhereInput>>;
  NOT?: InputMaybe<Array<ForumThreadTagWhereInput>>;
  OR?: InputMaybe<Array<ForumThreadTagWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  threads_every?: InputMaybe<ForumThreadWhereInput>;
  threads_none?: InputMaybe<ForumThreadWhereInput>;
  threads_some?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  visibleThreadsCount_eq?: InputMaybe<Scalars['Int']['input']>;
  visibleThreadsCount_gt?: InputMaybe<Scalars['Int']['input']>;
  visibleThreadsCount_gte?: InputMaybe<Scalars['Int']['input']>;
  visibleThreadsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  visibleThreadsCount_lt?: InputMaybe<Scalars['Int']['input']>;
  visibleThreadsCount_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type ForumThreadTagWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ForumThreadUpdateInput = {
  author?: InputMaybe<Scalars['ID']['input']>;
  category?: InputMaybe<Scalars['ID']['input']>;
  initialPost?: InputMaybe<Scalars['ID']['input']>;
  isSticky?: InputMaybe<Scalars['Boolean']['input']>;
  isVisible?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  visiblePostsCount?: InputMaybe<Scalars['Float']['input']>;
};

export type ForumThreadWhereInput = {
  AND?: InputMaybe<Array<ForumThreadWhereInput>>;
  NOT?: InputMaybe<Array<ForumThreadWhereInput>>;
  OR?: InputMaybe<Array<ForumThreadWhereInput>>;
  author?: InputMaybe<MembershipWhereInput>;
  bountydiscussionThread_every?: InputMaybe<BountyWhereInput>;
  bountydiscussionThread_none?: InputMaybe<BountyWhereInput>;
  bountydiscussionThread_some?: InputMaybe<BountyWhereInput>;
  category?: InputMaybe<ForumCategoryWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<ThreadCreatedEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  initialPost?: InputMaybe<ForumPostWhereInput>;
  isSticky_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isSticky_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isVisible_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVisible_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  madeStickyInEvents_every?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  madeStickyInEvents_none?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  madeStickyInEvents_some?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  metadataUpdates_every?: InputMaybe<ThreadMetadataUpdatedEventWhereInput>;
  metadataUpdates_none?: InputMaybe<ThreadMetadataUpdatedEventWhereInput>;
  metadataUpdates_some?: InputMaybe<ThreadMetadataUpdatedEventWhereInput>;
  movedInEvents_every?: InputMaybe<ThreadMovedEventWhereInput>;
  movedInEvents_none?: InputMaybe<ThreadMovedEventWhereInput>;
  movedInEvents_some?: InputMaybe<ThreadMovedEventWhereInput>;
  posts_every?: InputMaybe<ForumPostWhereInput>;
  posts_none?: InputMaybe<ForumPostWhereInput>;
  posts_some?: InputMaybe<ForumPostWhereInput>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  tags_every?: InputMaybe<ForumThreadTagWhereInput>;
  tags_none?: InputMaybe<ForumThreadTagWhereInput>;
  tags_some?: InputMaybe<ForumThreadTagWhereInput>;
  threaddeletedeventthread_every?: InputMaybe<ThreadDeletedEventWhereInput>;
  threaddeletedeventthread_none?: InputMaybe<ThreadDeletedEventWhereInput>;
  threaddeletedeventthread_some?: InputMaybe<ThreadDeletedEventWhereInput>;
  threadmoderatedeventthread_every?: InputMaybe<ThreadModeratedEventWhereInput>;
  threadmoderatedeventthread_none?: InputMaybe<ThreadModeratedEventWhereInput>;
  threadmoderatedeventthread_some?: InputMaybe<ThreadModeratedEventWhereInput>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  visiblePostsCount_eq?: InputMaybe<Scalars['Int']['input']>;
  visiblePostsCount_gt?: InputMaybe<Scalars['Int']['input']>;
  visiblePostsCount_gte?: InputMaybe<Scalars['Int']['input']>;
  visiblePostsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  visiblePostsCount_lt?: InputMaybe<Scalars['Int']['input']>;
  visiblePostsCount_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type ForumThreadWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type FundingRequestDestinationCreateInput = {
  account: Scalars['String']['input'];
  amount: Scalars['String']['input'];
  list: Scalars['ID']['input'];
};

export enum FundingRequestDestinationOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ListAsc = 'list_ASC',
  ListDesc = 'list_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type FundingRequestDestinationUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  list?: InputMaybe<Scalars['ID']['input']>;
};

export type FundingRequestDestinationWhereInput = {
  AND?: InputMaybe<Array<FundingRequestDestinationWhereInput>>;
  NOT?: InputMaybe<Array<FundingRequestDestinationWhereInput>>;
  OR?: InputMaybe<Array<FundingRequestDestinationWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  list?: InputMaybe<FundingRequestDestinationsListWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type FundingRequestDestinationWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type FundingRequestDestinationsListCreateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export enum FundingRequestDestinationsListOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  PhantomAsc = 'phantom_ASC',
  PhantomDesc = 'phantom_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type FundingRequestDestinationsListUpdateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export type FundingRequestDestinationsListWhereInput = {
  AND?: InputMaybe<Array<FundingRequestDestinationsListWhereInput>>;
  NOT?: InputMaybe<Array<FundingRequestDestinationsListWhereInput>>;
  OR?: InputMaybe<Array<FundingRequestDestinationsListWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  destinations_every?: InputMaybe<FundingRequestDestinationWhereInput>;
  destinations_none?: InputMaybe<FundingRequestDestinationWhereInput>;
  destinations_some?: InputMaybe<FundingRequestDestinationWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  phantom_eq?: InputMaybe<Scalars['Int']['input']>;
  phantom_gt?: InputMaybe<Scalars['Int']['input']>;
  phantom_gte?: InputMaybe<Scalars['Int']['input']>;
  phantom_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  phantom_lt?: InputMaybe<Scalars['Int']['input']>;
  phantom_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type FundingRequestDestinationsListWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type GeoCoordinatesCreateInput = {
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
};

export enum GeoCoordinatesOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  LatitudeAsc = 'latitude_ASC',
  LatitudeDesc = 'latitude_DESC',
  LongitudeAsc = 'longitude_ASC',
  LongitudeDesc = 'longitude_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type GeoCoordinatesUpdateInput = {
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
};

export type GeoCoordinatesWhereInput = {
  AND?: InputMaybe<Array<GeoCoordinatesWhereInput>>;
  NOT?: InputMaybe<Array<GeoCoordinatesWhereInput>>;
  OR?: InputMaybe<Array<GeoCoordinatesWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  latitude_eq?: InputMaybe<Scalars['Float']['input']>;
  latitude_gt?: InputMaybe<Scalars['Float']['input']>;
  latitude_gte?: InputMaybe<Scalars['Float']['input']>;
  latitude_in?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitude_lt?: InputMaybe<Scalars['Float']['input']>;
  latitude_lte?: InputMaybe<Scalars['Float']['input']>;
  longitude_eq?: InputMaybe<Scalars['Float']['input']>;
  longitude_gt?: InputMaybe<Scalars['Float']['input']>;
  longitude_gte?: InputMaybe<Scalars['Float']['input']>;
  longitude_in?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitude_lt?: InputMaybe<Scalars['Float']['input']>;
  longitude_lte?: InputMaybe<Scalars['Float']['input']>;
  nodelocationmetadatacoordinates_every?: InputMaybe<NodeLocationMetadataWhereInput>;
  nodelocationmetadatacoordinates_none?: InputMaybe<NodeLocationMetadataWhereInput>;
  nodelocationmetadatacoordinates_some?: InputMaybe<NodeLocationMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type GeoCoordinatesWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type GeographicalAreaContinentCreateInput = {
  code?: InputMaybe<Continent>;
};

export type GeographicalAreaContinentUpdateInput = {
  code?: InputMaybe<Continent>;
};

export type GeographicalAreaContinentWhereInput = {
  AND?: InputMaybe<Array<GeographicalAreaContinentWhereInput>>;
  NOT?: InputMaybe<Array<GeographicalAreaContinentWhereInput>>;
  OR?: InputMaybe<Array<GeographicalAreaContinentWhereInput>>;
  code_eq?: InputMaybe<Continent>;
  code_in?: InputMaybe<Array<Continent>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type GeographicalAreaContinentWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type InitialInvitationBalanceUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newInitialBalance: Scalars['String']['input'];
};

export enum InitialInvitationBalanceUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewInitialBalanceAsc = 'newInitialBalance_ASC',
  NewInitialBalanceDesc = 'newInitialBalance_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type InitialInvitationBalanceUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newInitialBalance?: InputMaybe<Scalars['String']['input']>;
};

export type InitialInvitationBalanceUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<InitialInvitationBalanceUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<InitialInvitationBalanceUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<InitialInvitationBalanceUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newInitialBalance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newInitialBalance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newInitialBalance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newInitialBalance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newInitialBalance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newInitialBalance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type InitialInvitationBalanceUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type InitialInvitationCountUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newInitialInvitationCount: Scalars['Float']['input'];
};

export enum InitialInvitationCountUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewInitialInvitationCountAsc = 'newInitialInvitationCount_ASC',
  NewInitialInvitationCountDesc = 'newInitialInvitationCount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type InitialInvitationCountUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newInitialInvitationCount?: InputMaybe<Scalars['Float']['input']>;
};

export type InitialInvitationCountUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<InitialInvitationCountUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<InitialInvitationCountUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<InitialInvitationCountUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newInitialInvitationCount_eq?: InputMaybe<Scalars['Int']['input']>;
  newInitialInvitationCount_gt?: InputMaybe<Scalars['Int']['input']>;
  newInitialInvitationCount_gte?: InputMaybe<Scalars['Int']['input']>;
  newInitialInvitationCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  newInitialInvitationCount_lt?: InputMaybe<Scalars['Int']['input']>;
  newInitialInvitationCount_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type InitialInvitationCountUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type InvitesTransferredEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  numberOfInvites: Scalars['Float']['input'];
  sourceMember: Scalars['ID']['input'];
  targetMember: Scalars['ID']['input'];
};

export enum InvitesTransferredEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NumberOfInvitesAsc = 'numberOfInvites_ASC',
  NumberOfInvitesDesc = 'numberOfInvites_DESC',
  SourceMemberAsc = 'sourceMember_ASC',
  SourceMemberDesc = 'sourceMember_DESC',
  TargetMemberAsc = 'targetMember_ASC',
  TargetMemberDesc = 'targetMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type InvitesTransferredEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  numberOfInvites?: InputMaybe<Scalars['Float']['input']>;
  sourceMember?: InputMaybe<Scalars['ID']['input']>;
  targetMember?: InputMaybe<Scalars['ID']['input']>;
};

export type InvitesTransferredEventWhereInput = {
  AND?: InputMaybe<Array<InvitesTransferredEventWhereInput>>;
  NOT?: InputMaybe<Array<InvitesTransferredEventWhereInput>>;
  OR?: InputMaybe<Array<InvitesTransferredEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  numberOfInvites_eq?: InputMaybe<Scalars['Int']['input']>;
  numberOfInvites_gt?: InputMaybe<Scalars['Int']['input']>;
  numberOfInvites_gte?: InputMaybe<Scalars['Int']['input']>;
  numberOfInvites_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  numberOfInvites_lt?: InputMaybe<Scalars['Int']['input']>;
  numberOfInvites_lte?: InputMaybe<Scalars['Int']['input']>;
  sourceMember?: InputMaybe<MembershipWhereInput>;
  targetMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type InvitesTransferredEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type LanguageCreateInput = {
  createdInBlock: Scalars['Float']['input'];
  iso: Scalars['String']['input'];
};

export enum LanguageOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IsoAsc = 'iso_ASC',
  IsoDesc = 'iso_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type LanguageUpdateInput = {
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  iso?: InputMaybe<Scalars['String']['input']>;
};

export type LanguageWhereInput = {
  AND?: InputMaybe<Array<LanguageWhereInput>>;
  NOT?: InputMaybe<Array<LanguageWhereInput>>;
  OR?: InputMaybe<Array<LanguageWhereInput>>;
  channellanguage_every?: InputMaybe<ChannelWhereInput>;
  channellanguage_none?: InputMaybe<ChannelWhereInput>;
  channellanguage_some?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  iso_contains?: InputMaybe<Scalars['String']['input']>;
  iso_endsWith?: InputMaybe<Scalars['String']['input']>;
  iso_eq?: InputMaybe<Scalars['String']['input']>;
  iso_in?: InputMaybe<Array<Scalars['String']['input']>>;
  iso_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videolanguage_every?: InputMaybe<VideoWhereInput>;
  videolanguage_none?: InputMaybe<VideoWhereInput>;
  videolanguage_some?: InputMaybe<VideoWhereInput>;
  videosubtitlelanguage_every?: InputMaybe<VideoSubtitleWhereInput>;
  videosubtitlelanguage_none?: InputMaybe<VideoSubtitleWhereInput>;
  videosubtitlelanguage_some?: InputMaybe<VideoSubtitleWhereInput>;
};

export type LanguageWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type LeaderInvitationQuotaUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newInvitationQuota: Scalars['Float']['input'];
};

export enum LeaderInvitationQuotaUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewInvitationQuotaAsc = 'newInvitationQuota_ASC',
  NewInvitationQuotaDesc = 'newInvitationQuota_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type LeaderInvitationQuotaUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newInvitationQuota?: InputMaybe<Scalars['Float']['input']>;
};

export type LeaderInvitationQuotaUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<LeaderInvitationQuotaUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<LeaderInvitationQuotaUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<LeaderInvitationQuotaUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newInvitationQuota_eq?: InputMaybe<Scalars['Int']['input']>;
  newInvitationQuota_gt?: InputMaybe<Scalars['Int']['input']>;
  newInvitationQuota_gte?: InputMaybe<Scalars['Int']['input']>;
  newInvitationQuota_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  newInvitationQuota_lt?: InputMaybe<Scalars['Int']['input']>;
  newInvitationQuota_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type LeaderInvitationQuotaUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type LeaderSetEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export enum LeaderSetEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type LeaderSetEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type LeaderSetEventWhereInput = {
  AND?: InputMaybe<Array<LeaderSetEventWhereInput>>;
  NOT?: InputMaybe<Array<LeaderSetEventWhereInput>>;
  OR?: InputMaybe<Array<LeaderSetEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type LeaderSetEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type LeaderUnsetEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  leader: Scalars['ID']['input'];
  network: Network;
};

export enum LeaderUnsetEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  LeaderAsc = 'leader_ASC',
  LeaderDesc = 'leader_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type LeaderUnsetEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  leader?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
};

export type LeaderUnsetEventWhereInput = {
  AND?: InputMaybe<Array<LeaderUnsetEventWhereInput>>;
  NOT?: InputMaybe<Array<LeaderUnsetEventWhereInput>>;
  OR?: InputMaybe<Array<LeaderUnsetEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  leader?: InputMaybe<WorkerWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type LeaderUnsetEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type LicenseCreateInput = {
  attribution?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['Float']['input']>;
  customText?: InputMaybe<Scalars['String']['input']>;
};

export enum LicenseOrderByInput {
  AttributionAsc = 'attribution_ASC',
  AttributionDesc = 'attribution_DESC',
  CodeAsc = 'code_ASC',
  CodeDesc = 'code_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CustomTextAsc = 'customText_ASC',
  CustomTextDesc = 'customText_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type LicenseUpdateInput = {
  attribution?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['Float']['input']>;
  customText?: InputMaybe<Scalars['String']['input']>;
};

export type LicenseWhereInput = {
  AND?: InputMaybe<Array<LicenseWhereInput>>;
  NOT?: InputMaybe<Array<LicenseWhereInput>>;
  OR?: InputMaybe<Array<LicenseWhereInput>>;
  attribution_contains?: InputMaybe<Scalars['String']['input']>;
  attribution_endsWith?: InputMaybe<Scalars['String']['input']>;
  attribution_eq?: InputMaybe<Scalars['String']['input']>;
  attribution_in?: InputMaybe<Array<Scalars['String']['input']>>;
  attribution_startsWith?: InputMaybe<Scalars['String']['input']>;
  code_eq?: InputMaybe<Scalars['Int']['input']>;
  code_gt?: InputMaybe<Scalars['Int']['input']>;
  code_gte?: InputMaybe<Scalars['Int']['input']>;
  code_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  code_lt?: InputMaybe<Scalars['Int']['input']>;
  code_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  customText_contains?: InputMaybe<Scalars['String']['input']>;
  customText_endsWith?: InputMaybe<Scalars['String']['input']>;
  customText_eq?: InputMaybe<Scalars['String']['input']>;
  customText_in?: InputMaybe<Array<Scalars['String']['input']>>;
  customText_startsWith?: InputMaybe<Scalars['String']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videolicense_every?: InputMaybe<VideoWhereInput>;
  videolicense_none?: InputMaybe<VideoWhereInput>;
  videolicense_some?: InputMaybe<VideoWhereInput>;
};

export type LicenseWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberAccountsUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  newControllerAccount?: InputMaybe<Scalars['String']['input']>;
  newRootAccount?: InputMaybe<Scalars['String']['input']>;
};

export enum MemberAccountsUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewControllerAccountAsc = 'newControllerAccount_ASC',
  NewControllerAccountDesc = 'newControllerAccount_DESC',
  NewRootAccountAsc = 'newRootAccount_ASC',
  NewRootAccountDesc = 'newRootAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberAccountsUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newControllerAccount?: InputMaybe<Scalars['String']['input']>;
  newRootAccount?: InputMaybe<Scalars['String']['input']>;
};

export type MemberAccountsUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<MemberAccountsUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberAccountsUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<MemberAccountsUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newControllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  newControllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  newControllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  newControllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newControllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  newRootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  newRootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  newRootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  newRootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newRootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberAccountsUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberBannedFromChannelEventCreateInput = {
  action: Scalars['Boolean']['input'];
  channel: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
};

export enum MemberBannedFromChannelEventOrderByInput {
  ActionAsc = 'action_ASC',
  ActionDesc = 'action_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberBannedFromChannelEventUpdateInput = {
  action?: InputMaybe<Scalars['Boolean']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
};

export type MemberBannedFromChannelEventWhereInput = {
  AND?: InputMaybe<Array<MemberBannedFromChannelEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberBannedFromChannelEventWhereInput>>;
  OR?: InputMaybe<Array<MemberBannedFromChannelEventWhereInput>>;
  action_eq?: InputMaybe<Scalars['Boolean']['input']>;
  action_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  channel?: InputMaybe<ChannelWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberBannedFromChannelEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberCreatedEventCreateInput = {
  controllerAccount: Scalars['String']['input'];
  handle: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  isFoundingMember: Scalars['Boolean']['input'];
  metadata: Scalars['ID']['input'];
  network: Network;
  newMember: Scalars['ID']['input'];
  rootAccount: Scalars['String']['input'];
};

export enum MemberCreatedEventOrderByInput {
  ControllerAccountAsc = 'controllerAccount_ASC',
  ControllerAccountDesc = 'controllerAccount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  HandleAsc = 'handle_ASC',
  HandleDesc = 'handle_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsFoundingMemberAsc = 'isFoundingMember_ASC',
  IsFoundingMemberDesc = 'isFoundingMember_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewMemberAsc = 'newMember_ASC',
  NewMemberDesc = 'newMember_DESC',
  RootAccountAsc = 'rootAccount_ASC',
  RootAccountDesc = 'rootAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberCreatedEventUpdateInput = {
  controllerAccount?: InputMaybe<Scalars['String']['input']>;
  handle?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isFoundingMember?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newMember?: InputMaybe<Scalars['ID']['input']>;
  rootAccount?: InputMaybe<Scalars['String']['input']>;
};

export type MemberCreatedEventWhereInput = {
  AND?: InputMaybe<Array<MemberCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<MemberCreatedEventWhereInput>>;
  controllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  handle_contains?: InputMaybe<Scalars['String']['input']>;
  handle_endsWith?: InputMaybe<Scalars['String']['input']>;
  handle_eq?: InputMaybe<Scalars['String']['input']>;
  handle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handle_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isFoundingMember_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isFoundingMember_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  metadata?: InputMaybe<MemberMetadataWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMember?: InputMaybe<MembershipWhereInput>;
  rootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberInvitedEventCreateInput = {
  controllerAccount: Scalars['String']['input'];
  handle: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  initialBalance: Scalars['String']['input'];
  invitingMember: Scalars['ID']['input'];
  metadata: Scalars['ID']['input'];
  network: Network;
  newMember: Scalars['ID']['input'];
  rootAccount: Scalars['String']['input'];
};

export enum MemberInvitedEventOrderByInput {
  ControllerAccountAsc = 'controllerAccount_ASC',
  ControllerAccountDesc = 'controllerAccount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  HandleAsc = 'handle_ASC',
  HandleDesc = 'handle_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  InitialBalanceAsc = 'initialBalance_ASC',
  InitialBalanceDesc = 'initialBalance_DESC',
  InvitingMemberAsc = 'invitingMember_ASC',
  InvitingMemberDesc = 'invitingMember_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewMemberAsc = 'newMember_ASC',
  NewMemberDesc = 'newMember_DESC',
  RootAccountAsc = 'rootAccount_ASC',
  RootAccountDesc = 'rootAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberInvitedEventUpdateInput = {
  controllerAccount?: InputMaybe<Scalars['String']['input']>;
  handle?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  initialBalance?: InputMaybe<Scalars['String']['input']>;
  invitingMember?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newMember?: InputMaybe<Scalars['ID']['input']>;
  rootAccount?: InputMaybe<Scalars['String']['input']>;
};

export type MemberInvitedEventWhereInput = {
  AND?: InputMaybe<Array<MemberInvitedEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberInvitedEventWhereInput>>;
  OR?: InputMaybe<Array<MemberInvitedEventWhereInput>>;
  controllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  handle_contains?: InputMaybe<Scalars['String']['input']>;
  handle_endsWith?: InputMaybe<Scalars['String']['input']>;
  handle_eq?: InputMaybe<Scalars['String']['input']>;
  handle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handle_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  initialBalance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  initialBalance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  initialBalance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  initialBalance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  initialBalance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  initialBalance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  invitingMember?: InputMaybe<MembershipWhereInput>;
  metadata?: InputMaybe<MemberMetadataWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMember?: InputMaybe<MembershipWhereInput>;
  rootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberInvitedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberMetadataCreateInput = {
  about?: InputMaybe<Scalars['String']['input']>;
  avatar: Scalars['JSONObject']['input'];
  isVerifiedValidator?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export enum MemberMetadataOrderByInput {
  AboutAsc = 'about_ASC',
  AboutDesc = 'about_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IsVerifiedValidatorAsc = 'isVerifiedValidator_ASC',
  IsVerifiedValidatorDesc = 'isVerifiedValidator_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberMetadataUpdateInput = {
  about?: InputMaybe<Scalars['String']['input']>;
  avatar?: InputMaybe<Scalars['JSONObject']['input']>;
  isVerifiedValidator?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type MemberMetadataWhereInput = {
  AND?: InputMaybe<Array<MemberMetadataWhereInput>>;
  NOT?: InputMaybe<Array<MemberMetadataWhereInput>>;
  OR?: InputMaybe<Array<MemberMetadataWhereInput>>;
  about_contains?: InputMaybe<Scalars['String']['input']>;
  about_endsWith?: InputMaybe<Scalars['String']['input']>;
  about_eq?: InputMaybe<Scalars['String']['input']>;
  about_in?: InputMaybe<Array<Scalars['String']['input']>>;
  about_startsWith?: InputMaybe<Scalars['String']['input']>;
  avatar_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  externalResources_every?: InputMaybe<MembershipExternalResourceWhereInput>;
  externalResources_none?: InputMaybe<MembershipExternalResourceWhereInput>;
  externalResources_some?: InputMaybe<MembershipExternalResourceWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isVerifiedValidator_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVerifiedValidator_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  membercreatedeventmetadata_every?: InputMaybe<MemberCreatedEventWhereInput>;
  membercreatedeventmetadata_none?: InputMaybe<MemberCreatedEventWhereInput>;
  membercreatedeventmetadata_some?: InputMaybe<MemberCreatedEventWhereInput>;
  memberinvitedeventmetadata_every?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventmetadata_none?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventmetadata_some?: InputMaybe<MemberInvitedEventWhereInput>;
  memberprofileupdatedeventnewMetadata_every?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  memberprofileupdatedeventnewMetadata_none?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  memberprofileupdatedeventnewMetadata_some?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  membershipboughteventmetadata_every?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventmetadata_none?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventmetadata_some?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipgiftedeventmetadata_every?: InputMaybe<MembershipGiftedEventWhereInput>;
  membershipgiftedeventmetadata_none?: InputMaybe<MembershipGiftedEventWhereInput>;
  membershipgiftedeventmetadata_some?: InputMaybe<MembershipGiftedEventWhereInput>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_endsWith?: InputMaybe<Scalars['String']['input']>;
  name_eq?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberProfileUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  newHandle?: InputMaybe<Scalars['String']['input']>;
  newHandleRaw?: InputMaybe<Scalars['String']['input']>;
  newMetadata: Scalars['ID']['input'];
};

export enum MemberProfileUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewHandleRawAsc = 'newHandleRaw_ASC',
  NewHandleRawDesc = 'newHandleRaw_DESC',
  NewHandleAsc = 'newHandle_ASC',
  NewHandleDesc = 'newHandle_DESC',
  NewMetadataAsc = 'newMetadata_ASC',
  NewMetadataDesc = 'newMetadata_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MemberProfileUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newHandle?: InputMaybe<Scalars['String']['input']>;
  newHandleRaw?: InputMaybe<Scalars['String']['input']>;
  newMetadata?: InputMaybe<Scalars['ID']['input']>;
};

export type MemberProfileUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<MemberProfileUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberProfileUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<MemberProfileUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newHandleRaw_contains?: InputMaybe<Scalars['String']['input']>;
  newHandleRaw_endsWith?: InputMaybe<Scalars['String']['input']>;
  newHandleRaw_eq?: InputMaybe<Scalars['String']['input']>;
  newHandleRaw_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newHandleRaw_startsWith?: InputMaybe<Scalars['String']['input']>;
  newHandle_contains?: InputMaybe<Scalars['String']['input']>;
  newHandle_endsWith?: InputMaybe<Scalars['String']['input']>;
  newHandle_eq?: InputMaybe<Scalars['String']['input']>;
  newHandle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newHandle_startsWith?: InputMaybe<Scalars['String']['input']>;
  newMetadata?: InputMaybe<MemberMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MemberProfileUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MemberVerificationStatusUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  isVerified: Scalars['Boolean']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  worker: Scalars['ID']['input'];
};

export enum MemberVerificationStatusUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type MemberVerificationStatusUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type MemberVerificationStatusUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<MemberVerificationStatusUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<MemberVerificationStatusUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<MemberVerificationStatusUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isVerified_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type MemberVerificationStatusUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MembershipBoughtEventCreateInput = {
  controllerAccount: Scalars['String']['input'];
  handle: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  metadata: Scalars['ID']['input'];
  network: Network;
  newMember: Scalars['ID']['input'];
  referrer?: InputMaybe<Scalars['ID']['input']>;
  rootAccount: Scalars['String']['input'];
};

export enum MembershipBoughtEventOrderByInput {
  ControllerAccountAsc = 'controllerAccount_ASC',
  ControllerAccountDesc = 'controllerAccount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  HandleAsc = 'handle_ASC',
  HandleDesc = 'handle_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewMemberAsc = 'newMember_ASC',
  NewMemberDesc = 'newMember_DESC',
  ReferrerAsc = 'referrer_ASC',
  ReferrerDesc = 'referrer_DESC',
  RootAccountAsc = 'rootAccount_ASC',
  RootAccountDesc = 'rootAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MembershipBoughtEventUpdateInput = {
  controllerAccount?: InputMaybe<Scalars['String']['input']>;
  handle?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newMember?: InputMaybe<Scalars['ID']['input']>;
  referrer?: InputMaybe<Scalars['ID']['input']>;
  rootAccount?: InputMaybe<Scalars['String']['input']>;
};

export type MembershipBoughtEventWhereInput = {
  AND?: InputMaybe<Array<MembershipBoughtEventWhereInput>>;
  NOT?: InputMaybe<Array<MembershipBoughtEventWhereInput>>;
  OR?: InputMaybe<Array<MembershipBoughtEventWhereInput>>;
  controllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  handle_contains?: InputMaybe<Scalars['String']['input']>;
  handle_endsWith?: InputMaybe<Scalars['String']['input']>;
  handle_eq?: InputMaybe<Scalars['String']['input']>;
  handle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handle_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<MemberMetadataWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMember?: InputMaybe<MembershipWhereInput>;
  referrer?: InputMaybe<MembershipWhereInput>;
  rootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MembershipBoughtEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MembershipCreateInput = {
  boundAccounts: Array<Scalars['String']['input']>;
  controllerAccount: Scalars['String']['input'];
  entry: Scalars['JSONObject']['input'];
  handle: Scalars['String']['input'];
  handleRaw: Scalars['String']['input'];
  inviteCount: Scalars['Float']['input'];
  invitedBy?: InputMaybe<Scalars['ID']['input']>;
  isCouncilMember: Scalars['Boolean']['input'];
  isFoundingMember: Scalars['Boolean']['input'];
  isVerified: Scalars['Boolean']['input'];
  metadata: Scalars['ID']['input'];
  referredBy?: InputMaybe<Scalars['ID']['input']>;
  rootAccount: Scalars['String']['input'];
  totalChannelsCreated: Scalars['Float']['input'];
};

export type MembershipExternalResourceCreateInput = {
  member?: InputMaybe<Scalars['ID']['input']>;
  memberMetadata: Scalars['ID']['input'];
  type: MembershipExternalResourceType;
  value: Scalars['String']['input'];
};

export enum MembershipExternalResourceOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MemberMetadataAsc = 'memberMetadata_ASC',
  MemberMetadataDesc = 'memberMetadata_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  TypeAsc = 'type_ASC',
  TypeDesc = 'type_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  ValueAsc = 'value_ASC',
  ValueDesc = 'value_DESC'
}

export enum MembershipExternalResourceType {
  Discord = 'DISCORD',
  Email = 'EMAIL',
  Facebook = 'FACEBOOK',
  Github = 'GITHUB',
  Hyperlink = 'HYPERLINK',
  Irc = 'IRC',
  Linkedin = 'LINKEDIN',
  Matrix = 'MATRIX',
  Telegram = 'TELEGRAM',
  Twitter = 'TWITTER',
  Wechat = 'WECHAT',
  Whatsapp = 'WHATSAPP',
  Youtube = 'YOUTUBE'
}

export type MembershipExternalResourceUpdateInput = {
  member?: InputMaybe<Scalars['ID']['input']>;
  memberMetadata?: InputMaybe<Scalars['ID']['input']>;
  type?: InputMaybe<MembershipExternalResourceType>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type MembershipExternalResourceWhereInput = {
  AND?: InputMaybe<Array<MembershipExternalResourceWhereInput>>;
  NOT?: InputMaybe<Array<MembershipExternalResourceWhereInput>>;
  OR?: InputMaybe<Array<MembershipExternalResourceWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  memberMetadata?: InputMaybe<MemberMetadataWhereInput>;
  type_eq?: InputMaybe<MembershipExternalResourceType>;
  type_in?: InputMaybe<Array<MembershipExternalResourceType>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  value_contains?: InputMaybe<Scalars['String']['input']>;
  value_endsWith?: InputMaybe<Scalars['String']['input']>;
  value_eq?: InputMaybe<Scalars['String']['input']>;
  value_in?: InputMaybe<Array<Scalars['String']['input']>>;
  value_startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type MembershipExternalResourceWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MembershipGiftedEventCreateInput = {
  controllerAccount: Scalars['String']['input'];
  handle: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  metadata: Scalars['ID']['input'];
  network: Network;
  newMember: Scalars['ID']['input'];
  rootAccount: Scalars['String']['input'];
};

export enum MembershipGiftedEventOrderByInput {
  ControllerAccountAsc = 'controllerAccount_ASC',
  ControllerAccountDesc = 'controllerAccount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  HandleAsc = 'handle_ASC',
  HandleDesc = 'handle_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewMemberAsc = 'newMember_ASC',
  NewMemberDesc = 'newMember_DESC',
  RootAccountAsc = 'rootAccount_ASC',
  RootAccountDesc = 'rootAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MembershipGiftedEventUpdateInput = {
  controllerAccount?: InputMaybe<Scalars['String']['input']>;
  handle?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  newMember?: InputMaybe<Scalars['ID']['input']>;
  rootAccount?: InputMaybe<Scalars['String']['input']>;
};

export type MembershipGiftedEventWhereInput = {
  AND?: InputMaybe<Array<MembershipGiftedEventWhereInput>>;
  NOT?: InputMaybe<Array<MembershipGiftedEventWhereInput>>;
  OR?: InputMaybe<Array<MembershipGiftedEventWhereInput>>;
  controllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  handle_contains?: InputMaybe<Scalars['String']['input']>;
  handle_endsWith?: InputMaybe<Scalars['String']['input']>;
  handle_eq?: InputMaybe<Scalars['String']['input']>;
  handle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handle_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  metadata?: InputMaybe<MemberMetadataWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMember?: InputMaybe<MembershipWhereInput>;
  rootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MembershipGiftedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum MembershipOrderByInput {
  ControllerAccountAsc = 'controllerAccount_ASC',
  ControllerAccountDesc = 'controllerAccount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  HandleRawAsc = 'handleRaw_ASC',
  HandleRawDesc = 'handleRaw_DESC',
  HandleAsc = 'handle_ASC',
  HandleDesc = 'handle_DESC',
  InviteCountAsc = 'inviteCount_ASC',
  InviteCountDesc = 'inviteCount_DESC',
  InvitedByAsc = 'invitedBy_ASC',
  InvitedByDesc = 'invitedBy_DESC',
  IsCouncilMemberAsc = 'isCouncilMember_ASC',
  IsCouncilMemberDesc = 'isCouncilMember_DESC',
  IsFoundingMemberAsc = 'isFoundingMember_ASC',
  IsFoundingMemberDesc = 'isFoundingMember_DESC',
  IsVerifiedAsc = 'isVerified_ASC',
  IsVerifiedDesc = 'isVerified_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  ReferredByAsc = 'referredBy_ASC',
  ReferredByDesc = 'referredBy_DESC',
  RootAccountAsc = 'rootAccount_ASC',
  RootAccountDesc = 'rootAccount_DESC',
  TotalChannelsCreatedAsc = 'totalChannelsCreated_ASC',
  TotalChannelsCreatedDesc = 'totalChannelsCreated_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MembershipPriceUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newPrice: Scalars['String']['input'];
};

export enum MembershipPriceUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewPriceAsc = 'newPrice_ASC',
  NewPriceDesc = 'newPrice_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MembershipPriceUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newPrice?: InputMaybe<Scalars['String']['input']>;
};

export type MembershipPriceUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<MembershipPriceUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<MembershipPriceUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<MembershipPriceUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newPrice_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MembershipPriceUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type MembershipUpdateInput = {
  boundAccounts?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount?: InputMaybe<Scalars['String']['input']>;
  entry?: InputMaybe<Scalars['JSONObject']['input']>;
  handle?: InputMaybe<Scalars['String']['input']>;
  handleRaw?: InputMaybe<Scalars['String']['input']>;
  inviteCount?: InputMaybe<Scalars['Float']['input']>;
  invitedBy?: InputMaybe<Scalars['ID']['input']>;
  isCouncilMember?: InputMaybe<Scalars['Boolean']['input']>;
  isFoundingMember?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  referredBy?: InputMaybe<Scalars['ID']['input']>;
  rootAccount?: InputMaybe<Scalars['String']['input']>;
  totalChannelsCreated?: InputMaybe<Scalars['Float']['input']>;
};

export type MembershipWhereInput = {
  AND?: InputMaybe<Array<MembershipWhereInput>>;
  NOT?: InputMaybe<Array<MembershipWhereInput>>;
  OR?: InputMaybe<Array<MembershipWhereInput>>;
  appownerMember_every?: InputMaybe<AppWhereInput>;
  appownerMember_none?: InputMaybe<AppWhereInput>;
  appownerMember_some?: InputMaybe<AppWhereInput>;
  auctionbidcanceledeventmember_every?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventmember_none?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventmember_some?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventownerMember_every?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventownerMember_none?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventownerMember_some?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidmadeeventmember_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventmember_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventmember_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventownerMember_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventownerMember_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventownerMember_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventpreviousTopBidder_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventpreviousTopBidder_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventpreviousTopBidder_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctioncanceledeventownerMember_every?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventownerMember_none?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventownerMember_some?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioninitialOwner_every?: InputMaybe<AuctionWhereInput>;
  auctioninitialOwner_none?: InputMaybe<AuctionWhereInput>;
  auctioninitialOwner_some?: InputMaybe<AuctionWhereInput>;
  auctionwinningMember_every?: InputMaybe<AuctionWhereInput>;
  auctionwinningMember_none?: InputMaybe<AuctionWhereInput>;
  auctionwinningMember_some?: InputMaybe<AuctionWhereInput>;
  bidbidder_every?: InputMaybe<BidWhereInput>;
  bidbidder_none?: InputMaybe<BidWhereInput>;
  bidbidder_some?: InputMaybe<BidWhereInput>;
  bidmadecompletingauctioneventmember_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventmember_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventmember_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventownerMember_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventownerMember_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventownerMember_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventpreviousTopBidder_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventpreviousTopBidder_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventpreviousTopBidder_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  boundAccounts_containsAll?: InputMaybe<Array<Scalars['String']['input']>>;
  boundAccounts_containsAny?: InputMaybe<Array<Scalars['String']['input']>>;
  boundAccounts_containsNone?: InputMaybe<Array<Scalars['String']['input']>>;
  bountycontributioncontributor_every?: InputMaybe<BountyContributionWhereInput>;
  bountycontributioncontributor_none?: InputMaybe<BountyContributionWhereInput>;
  bountycontributioncontributor_some?: InputMaybe<BountyContributionWhereInput>;
  bountycreator_every?: InputMaybe<BountyWhereInput>;
  bountycreator_none?: InputMaybe<BountyWhereInput>;
  bountycreator_some?: InputMaybe<BountyWhereInput>;
  bountyentryworker_every?: InputMaybe<BountyEntryWhereInput>;
  bountyentryworker_none?: InputMaybe<BountyEntryWhereInput>;
  bountyentryworker_some?: InputMaybe<BountyEntryWhereInput>;
  bountyoracle_every?: InputMaybe<BountyWhereInput>;
  bountyoracle_none?: InputMaybe<BountyWhereInput>;
  bountyoracle_some?: InputMaybe<BountyWhereInput>;
  budgetfundedeventmember_every?: InputMaybe<BudgetFundedEventWhereInput>;
  budgetfundedeventmember_none?: InputMaybe<BudgetFundedEventWhereInput>;
  budgetfundedeventmember_some?: InputMaybe<BudgetFundedEventWhereInput>;
  buynowcanceledeventownerMember_every?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventownerMember_none?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventownerMember_some?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowpriceupdatedeventownerMember_every?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventownerMember_none?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventownerMember_some?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  channelpaymentmadeeventpayer_every?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channelpaymentmadeeventpayer_none?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channelpaymentmadeeventpayer_some?: InputMaybe<ChannelPaymentMadeEventWhereInput>;
  channels_every?: InputMaybe<ChannelWhereInput>;
  channels_none?: InputMaybe<ChannelWhereInput>;
  channels_some?: InputMaybe<ChannelWhereInput>;
  collaboratorInChannels_every?: InputMaybe<CollaboratorWhereInput>;
  collaboratorInChannels_none?: InputMaybe<CollaboratorWhereInput>;
  collaboratorInChannels_some?: InputMaybe<CollaboratorWhereInput>;
  commentauthor_every?: InputMaybe<CommentWhereInput>;
  commentauthor_none?: InputMaybe<CommentWhereInput>;
  commentauthor_some?: InputMaybe<CommentWhereInput>;
  commentcreatedeventparentCommentAuthor_every?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventparentCommentAuthor_none?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventparentCommentAuthor_some?: InputMaybe<CommentCreatedEventWhereInput>;
  commentreactedeventreactingMember_every?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventreactingMember_none?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventreactingMember_some?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactionmember_every?: InputMaybe<CommentReactionWhereInput>;
  commentreactionmember_none?: InputMaybe<CommentReactionWhereInput>;
  commentreactionmember_some?: InputMaybe<CommentReactionWhereInput>;
  controllerAccount_contains?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_eq?: InputMaybe<Scalars['String']['input']>;
  controllerAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  controllerAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  councilCandidacies_every?: InputMaybe<CandidateWhereInput>;
  councilCandidacies_none?: InputMaybe<CandidateWhereInput>;
  councilCandidacies_some?: InputMaybe<CandidateWhereInput>;
  councilMembers_every?: InputMaybe<CouncilMemberWhereInput>;
  councilMembers_none?: InputMaybe<CouncilMemberWhereInput>;
  councilMembers_some?: InputMaybe<CouncilMemberWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  englishauctionsettledeventownerMember_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventownerMember_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventownerMember_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventwinner_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventwinner_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventwinner_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionstartedeventownerMember_every?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventownerMember_none?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventownerMember_some?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  entry_json?: InputMaybe<Scalars['JSONObject']['input']>;
  externalResources_every?: InputMaybe<MembershipExternalResourceWhereInput>;
  externalResources_none?: InputMaybe<MembershipExternalResourceWhereInput>;
  externalResources_some?: InputMaybe<MembershipExternalResourceWhereInput>;
  forumpostauthor_every?: InputMaybe<ForumPostWhereInput>;
  forumpostauthor_none?: InputMaybe<ForumPostWhereInput>;
  forumpostauthor_some?: InputMaybe<ForumPostWhereInput>;
  forumthreadauthor_every?: InputMaybe<ForumThreadWhereInput>;
  forumthreadauthor_none?: InputMaybe<ForumThreadWhereInput>;
  forumthreadauthor_some?: InputMaybe<ForumThreadWhereInput>;
  handleRaw_contains?: InputMaybe<Scalars['String']['input']>;
  handleRaw_endsWith?: InputMaybe<Scalars['String']['input']>;
  handleRaw_eq?: InputMaybe<Scalars['String']['input']>;
  handleRaw_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handleRaw_startsWith?: InputMaybe<Scalars['String']['input']>;
  handle_contains?: InputMaybe<Scalars['String']['input']>;
  handle_endsWith?: InputMaybe<Scalars['String']['input']>;
  handle_eq?: InputMaybe<Scalars['String']['input']>;
  handle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  handle_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inviteCount_eq?: InputMaybe<Scalars['Int']['input']>;
  inviteCount_gt?: InputMaybe<Scalars['Int']['input']>;
  inviteCount_gte?: InputMaybe<Scalars['Int']['input']>;
  inviteCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inviteCount_lt?: InputMaybe<Scalars['Int']['input']>;
  inviteCount_lte?: InputMaybe<Scalars['Int']['input']>;
  invitedBy?: InputMaybe<MembershipWhereInput>;
  invitees_every?: InputMaybe<MembershipWhereInput>;
  invitees_none?: InputMaybe<MembershipWhereInput>;
  invitees_some?: InputMaybe<MembershipWhereInput>;
  invitestransferredeventsourceMember_every?: InputMaybe<InvitesTransferredEventWhereInput>;
  invitestransferredeventsourceMember_none?: InputMaybe<InvitesTransferredEventWhereInput>;
  invitestransferredeventsourceMember_some?: InputMaybe<InvitesTransferredEventWhereInput>;
  invitestransferredeventtargetMember_every?: InputMaybe<InvitesTransferredEventWhereInput>;
  invitestransferredeventtargetMember_none?: InputMaybe<InvitesTransferredEventWhereInput>;
  invitestransferredeventtargetMember_some?: InputMaybe<InvitesTransferredEventWhereInput>;
  isCouncilMember_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCouncilMember_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isFoundingMember_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isFoundingMember_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isVerified_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVerified_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  memberBannedFromChannels_every?: InputMaybe<ChannelWhereInput>;
  memberBannedFromChannels_none?: InputMaybe<ChannelWhereInput>;
  memberBannedFromChannels_some?: InputMaybe<ChannelWhereInput>;
  memberBidMadeCompletingAuctionEvents_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  memberBidMadeCompletingAuctionEvents_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  memberBidMadeCompletingAuctionEvents_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  memberEnglishAuctionSettledEvents_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  memberEnglishAuctionSettledEvents_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  memberEnglishAuctionSettledEvents_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  memberOpenAuctionAcceptedBidEvents_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  memberOpenAuctionAcceptedBidEvents_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  memberOpenAuctionAcceptedBidEvents_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  memberaccountsupdatedeventmember_every?: InputMaybe<MemberAccountsUpdatedEventWhereInput>;
  memberaccountsupdatedeventmember_none?: InputMaybe<MemberAccountsUpdatedEventWhereInput>;
  memberaccountsupdatedeventmember_some?: InputMaybe<MemberAccountsUpdatedEventWhereInput>;
  memberbannedfromchanneleventmember_every?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  memberbannedfromchanneleventmember_none?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  memberbannedfromchanneleventmember_some?: InputMaybe<MemberBannedFromChannelEventWhereInput>;
  membercreatedeventnewMember_every?: InputMaybe<MemberCreatedEventWhereInput>;
  membercreatedeventnewMember_none?: InputMaybe<MemberCreatedEventWhereInput>;
  membercreatedeventnewMember_some?: InputMaybe<MemberCreatedEventWhereInput>;
  memberinvitedeventinvitingMember_every?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventinvitingMember_none?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventinvitingMember_some?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventnewMember_every?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventnewMember_none?: InputMaybe<MemberInvitedEventWhereInput>;
  memberinvitedeventnewMember_some?: InputMaybe<MemberInvitedEventWhereInput>;
  memberprofileupdatedeventmember_every?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  memberprofileupdatedeventmember_none?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  memberprofileupdatedeventmember_some?: InputMaybe<MemberProfileUpdatedEventWhereInput>;
  membershipboughteventnewMember_every?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventnewMember_none?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventnewMember_some?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventreferrer_every?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventreferrer_none?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipboughteventreferrer_some?: InputMaybe<MembershipBoughtEventWhereInput>;
  membershipgiftedeventnewMember_every?: InputMaybe<MembershipGiftedEventWhereInput>;
  membershipgiftedeventnewMember_none?: InputMaybe<MembershipGiftedEventWhereInput>;
  membershipgiftedeventnewMember_some?: InputMaybe<MembershipGiftedEventWhereInput>;
  memberverificationstatusupdatedeventmember_every?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  memberverificationstatusupdatedeventmember_none?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  memberverificationstatusupdatedeventmember_some?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  metadata?: InputMaybe<MemberMetadataWhereInput>;
  nftCollectorInChannels_every?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftCollectorInChannels_none?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftCollectorInChannels_some?: InputMaybe<ChannelNftCollectorsWhereInput>;
  nftboughteventmember_every?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventmember_none?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventmember_some?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventownerMember_every?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventownerMember_none?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventownerMember_some?: InputMaybe<NftBoughtEventWhereInput>;
  nftissuedeventownerMember_every?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventownerMember_none?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventownerMember_some?: InputMaybe<NftIssuedEventWhereInput>;
  nftsellordermadeeventownerMember_every?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventownerMember_none?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventownerMember_some?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerMember_every?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerMember_none?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventownerMember_some?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  offeracceptedeventownerMember_every?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventownerMember_none?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventownerMember_some?: InputMaybe<OfferAcceptedEventWhereInput>;
  offercanceledeventownerMember_every?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventownerMember_none?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventownerMember_some?: InputMaybe<OfferCanceledEventWhereInput>;
  offerstartedeventmember_every?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventmember_none?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventmember_some?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventownerMember_every?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventownerMember_none?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventownerMember_some?: InputMaybe<OfferStartedEventWhereInput>;
  openauctionbidacceptedeventownerMember_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventownerMember_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventownerMember_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventwinningBidder_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventwinningBidder_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventwinningBidder_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionstartedeventownerMember_every?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventownerMember_none?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventownerMember_some?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  ownedNfts_every?: InputMaybe<OwnedNftWhereInput>;
  ownedNfts_none?: InputMaybe<OwnedNftWhereInput>;
  ownedNfts_some?: InputMaybe<OwnedNftWhereInput>;
  postdeletedeventactor_every?: InputMaybe<PostDeletedEventWhereInput>;
  postdeletedeventactor_none?: InputMaybe<PostDeletedEventWhereInput>;
  postdeletedeventactor_some?: InputMaybe<PostDeletedEventWhereInput>;
  proposalcreator_every?: InputMaybe<ProposalWhereInput>;
  proposalcreator_none?: InputMaybe<ProposalWhereInput>;
  proposalcreator_some?: InputMaybe<ProposalWhereInput>;
  proposaldiscussionpostauthor_every?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposaldiscussionpostauthor_none?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposaldiscussionpostauthor_some?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposaldiscussionpostdeletedeventactor_every?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionpostdeletedeventactor_none?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionpostdeletedeventactor_some?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionthreadmodechangedeventactor_every?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  proposaldiscussionthreadmodechangedeventactor_none?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  proposaldiscussionthreadmodechangedeventactor_some?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  proposalvotedeventvoter_every?: InputMaybe<ProposalVotedEventWhereInput>;
  proposalvotedeventvoter_none?: InputMaybe<ProposalVotedEventWhereInput>;
  proposalvotedeventvoter_some?: InputMaybe<ProposalVotedEventWhereInput>;
  referredBy?: InputMaybe<MembershipWhereInput>;
  referredMembers_every?: InputMaybe<MembershipWhereInput>;
  referredMembers_none?: InputMaybe<MembershipWhereInput>;
  referredMembers_some?: InputMaybe<MembershipWhereInput>;
  roles_every?: InputMaybe<WorkerWhereInput>;
  roles_none?: InputMaybe<WorkerWhereInput>;
  roles_some?: InputMaybe<WorkerWhereInput>;
  rootAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rootAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rootAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rootAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rootAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  stakingaccountaddedeventmember_every?: InputMaybe<StakingAccountAddedEventWhereInput>;
  stakingaccountaddedeventmember_none?: InputMaybe<StakingAccountAddedEventWhereInput>;
  stakingaccountaddedeventmember_some?: InputMaybe<StakingAccountAddedEventWhereInput>;
  stakingaccountconfirmedeventmember_every?: InputMaybe<StakingAccountConfirmedEventWhereInput>;
  stakingaccountconfirmedeventmember_none?: InputMaybe<StakingAccountConfirmedEventWhereInput>;
  stakingaccountconfirmedeventmember_some?: InputMaybe<StakingAccountConfirmedEventWhereInput>;
  stakingaccountremovedeventmember_every?: InputMaybe<StakingAccountRemovedEventWhereInput>;
  stakingaccountremovedeventmember_none?: InputMaybe<StakingAccountRemovedEventWhereInput>;
  stakingaccountremovedeventmember_some?: InputMaybe<StakingAccountRemovedEventWhereInput>;
  totalChannelsCreated_eq?: InputMaybe<Scalars['Int']['input']>;
  totalChannelsCreated_gt?: InputMaybe<Scalars['Int']['input']>;
  totalChannelsCreated_gte?: InputMaybe<Scalars['Int']['input']>;
  totalChannelsCreated_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  totalChannelsCreated_lt?: InputMaybe<Scalars['Int']['input']>;
  totalChannelsCreated_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoreactedeventreactingMember_every?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventreactingMember_none?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventreactingMember_some?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactionmember_every?: InputMaybe<VideoReactionWhereInput>;
  videoreactionmember_none?: InputMaybe<VideoReactionWhereInput>;
  videoreactionmember_some?: InputMaybe<VideoReactionWhereInput>;
  whitelistedInAuctions_every?: InputMaybe<AuctionWhereInput>;
  whitelistedInAuctions_none?: InputMaybe<AuctionWhereInput>;
  whitelistedInAuctions_some?: InputMaybe<AuctionWhereInput>;
  whitelistedInBounties_every?: InputMaybe<BountyEntrantWhitelistWhereInput>;
  whitelistedInBounties_none?: InputMaybe<BountyEntrantWhitelistWhereInput>;
  whitelistedInBounties_some?: InputMaybe<BountyEntrantWhitelistWhereInput>;
  whitelistedIn_every?: InputMaybe<ProposalDiscussionWhitelistWhereInput>;
  whitelistedIn_none?: InputMaybe<ProposalDiscussionWhitelistWhereInput>;
  whitelistedIn_some?: InputMaybe<ProposalDiscussionWhitelistWhereInput>;
  workinggroupapplicationapplicant_every?: InputMaybe<WorkingGroupApplicationWhereInput>;
  workinggroupapplicationapplicant_none?: InputMaybe<WorkingGroupApplicationWhereInput>;
  workinggroupapplicationapplicant_some?: InputMaybe<WorkingGroupApplicationWhereInput>;
};

export type MembershipWhereUniqueInput = {
  handleRaw?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type MetaprotocolTransactionStatusEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  status: Scalars['JSONObject']['input'];
};

export enum MetaprotocolTransactionStatusEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type MetaprotocolTransactionStatusEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type MetaprotocolTransactionStatusEventWhereInput = {
  AND?: InputMaybe<Array<MetaprotocolTransactionStatusEventWhereInput>>;
  NOT?: InputMaybe<Array<MetaprotocolTransactionStatusEventWhereInput>>;
  OR?: InputMaybe<Array<MetaprotocolTransactionStatusEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MetaprotocolTransactionStatusEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum Network {
  Alexandria = 'ALEXANDRIA',
  Babylon = 'BABYLON',
  Giza = 'GIZA',
  Olympia = 'OLYMPIA',
  Rome = 'ROME'
}

export type NewCandidateEventCreateInput = {
  balance: Scalars['String']['input'];
  candidate: Scalars['ID']['input'];
  electionRound: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rewardAccount: Scalars['String']['input'];
  stakingAccount: Scalars['String']['input'];
};

export enum NewCandidateEventOrderByInput {
  BalanceAsc = 'balance_ASC',
  BalanceDesc = 'balance_DESC',
  CandidateAsc = 'candidate_ASC',
  CandidateDesc = 'candidate_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectionRoundAsc = 'electionRound_ASC',
  ElectionRoundDesc = 'electionRound_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  StakingAccountAsc = 'stakingAccount_ASC',
  StakingAccountDesc = 'stakingAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type NewCandidateEventUpdateInput = {
  balance?: InputMaybe<Scalars['String']['input']>;
  candidate?: InputMaybe<Scalars['ID']['input']>;
  electionRound?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
};

export type NewCandidateEventWhereInput = {
  AND?: InputMaybe<Array<NewCandidateEventWhereInput>>;
  NOT?: InputMaybe<Array<NewCandidateEventWhereInput>>;
  OR?: InputMaybe<Array<NewCandidateEventWhereInput>>;
  balance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  balance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  balance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  balance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  candidate?: InputMaybe<CandidateWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electionRound?: InputMaybe<ElectionRoundWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type NewCandidateEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NewCouncilElectedEventCreateInput = {
  electedCouncil: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum NewCouncilElectedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectedCouncilAsc = 'electedCouncil_ASC',
  ElectedCouncilDesc = 'electedCouncil_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type NewCouncilElectedEventUpdateInput = {
  electedCouncil?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type NewCouncilElectedEventWhereInput = {
  AND?: InputMaybe<Array<NewCouncilElectedEventWhereInput>>;
  NOT?: InputMaybe<Array<NewCouncilElectedEventWhereInput>>;
  OR?: InputMaybe<Array<NewCouncilElectedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electedCouncil?: InputMaybe<ElectedCouncilWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type NewCouncilElectedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NewCouncilNotElectedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum NewCouncilNotElectedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type NewCouncilNotElectedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type NewCouncilNotElectedEventWhereInput = {
  AND?: InputMaybe<Array<NewCouncilNotElectedEventWhereInput>>;
  NOT?: InputMaybe<Array<NewCouncilNotElectedEventWhereInput>>;
  OR?: InputMaybe<Array<NewCouncilNotElectedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type NewCouncilNotElectedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NewMissedRewardLevelReachedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newMissedRewardAmount: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum NewMissedRewardLevelReachedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewMissedRewardAmountAsc = 'newMissedRewardAmount_ASC',
  NewMissedRewardAmountDesc = 'newMissedRewardAmount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type NewMissedRewardLevelReachedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newMissedRewardAmount?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type NewMissedRewardLevelReachedEventWhereInput = {
  AND?: InputMaybe<Array<NewMissedRewardLevelReachedEventWhereInput>>;
  NOT?: InputMaybe<Array<NewMissedRewardLevelReachedEventWhereInput>>;
  OR?: InputMaybe<Array<NewMissedRewardLevelReachedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMissedRewardAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newMissedRewardAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newMissedRewardAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newMissedRewardAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newMissedRewardAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newMissedRewardAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type NewMissedRewardLevelReachedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NftBoughtEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price: Scalars['String']['input'];
  video: Scalars['ID']['input'];
};

export enum NftBoughtEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PriceAsc = 'price_ASC',
  PriceDesc = 'price_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type NftBoughtEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type NftBoughtEventWhereInput = {
  AND?: InputMaybe<Array<NftBoughtEventWhereInput>>;
  NOT?: InputMaybe<Array<NftBoughtEventWhereInput>>;
  OR?: InputMaybe<Array<NftBoughtEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  price_eq?: InputMaybe<Scalars['BigInt']['input']>;
  price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  price_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type NftBoughtEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NftIssuedEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  metadata: Scalars['String']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  royalty?: InputMaybe<Scalars['Float']['input']>;
  video: Scalars['ID']['input'];
  videoCategory?: InputMaybe<Scalars['ID']['input']>;
};

export enum NftIssuedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  RoyaltyAsc = 'royalty_ASC',
  RoyaltyDesc = 'royalty_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoCategoryAsc = 'videoCategory_ASC',
  VideoCategoryDesc = 'videoCategory_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type NftIssuedEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  royalty?: InputMaybe<Scalars['Float']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoCategory?: InputMaybe<Scalars['ID']['input']>;
};

export type NftIssuedEventWhereInput = {
  AND?: InputMaybe<Array<NftIssuedEventWhereInput>>;
  NOT?: InputMaybe<Array<NftIssuedEventWhereInput>>;
  OR?: InputMaybe<Array<NftIssuedEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  metadata_contains?: InputMaybe<Scalars['String']['input']>;
  metadata_endsWith?: InputMaybe<Scalars['String']['input']>;
  metadata_eq?: InputMaybe<Scalars['String']['input']>;
  metadata_in?: InputMaybe<Array<Scalars['String']['input']>>;
  metadata_startsWith?: InputMaybe<Scalars['String']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  royalty_eq?: InputMaybe<Scalars['Float']['input']>;
  royalty_gt?: InputMaybe<Scalars['Float']['input']>;
  royalty_gte?: InputMaybe<Scalars['Float']['input']>;
  royalty_in?: InputMaybe<Array<Scalars['Float']['input']>>;
  royalty_lt?: InputMaybe<Scalars['Float']['input']>;
  royalty_lte?: InputMaybe<Scalars['Float']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoCategory?: InputMaybe<VideoCategoryWhereInput>;
};

export type NftIssuedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NftSellOrderMadeEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price: Scalars['String']['input'];
  video: Scalars['ID']['input'];
};

export enum NftSellOrderMadeEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PriceAsc = 'price_ASC',
  PriceDesc = 'price_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type NftSellOrderMadeEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type NftSellOrderMadeEventWhereInput = {
  AND?: InputMaybe<Array<NftSellOrderMadeEventWhereInput>>;
  NOT?: InputMaybe<Array<NftSellOrderMadeEventWhereInput>>;
  OR?: InputMaybe<Array<NftSellOrderMadeEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  price_eq?: InputMaybe<Scalars['BigInt']['input']>;
  price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  price_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type NftSellOrderMadeEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NftSlingedBackToTheOriginalArtistEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum NftSlingedBackToTheOriginalArtistEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type NftSlingedBackToTheOriginalArtistEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type NftSlingedBackToTheOriginalArtistEventWhereInput = {
  AND?: InputMaybe<Array<NftSlingedBackToTheOriginalArtistEventWhereInput>>;
  NOT?: InputMaybe<Array<NftSlingedBackToTheOriginalArtistEventWhereInput>>;
  OR?: InputMaybe<Array<NftSlingedBackToTheOriginalArtistEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type NftSlingedBackToTheOriginalArtistEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NodeLocationMetadataCreateInput = {
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['ID']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};

export enum NodeLocationMetadataOrderByInput {
  CityAsc = 'city_ASC',
  CityDesc = 'city_DESC',
  CoordinatesAsc = 'coordinates_ASC',
  CoordinatesDesc = 'coordinates_DESC',
  CountryCodeAsc = 'countryCode_ASC',
  CountryCodeDesc = 'countryCode_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type NodeLocationMetadataUpdateInput = {
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['ID']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
};

export type NodeLocationMetadataWhereInput = {
  AND?: InputMaybe<Array<NodeLocationMetadataWhereInput>>;
  NOT?: InputMaybe<Array<NodeLocationMetadataWhereInput>>;
  OR?: InputMaybe<Array<NodeLocationMetadataWhereInput>>;
  city_contains?: InputMaybe<Scalars['String']['input']>;
  city_endsWith?: InputMaybe<Scalars['String']['input']>;
  city_eq?: InputMaybe<Scalars['String']['input']>;
  city_in?: InputMaybe<Array<Scalars['String']['input']>>;
  city_startsWith?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<GeoCoordinatesWhereInput>;
  countryCode_contains?: InputMaybe<Scalars['String']['input']>;
  countryCode_endsWith?: InputMaybe<Scalars['String']['input']>;
  countryCode_eq?: InputMaybe<Scalars['String']['input']>;
  countryCode_in?: InputMaybe<Array<Scalars['String']['input']>>;
  countryCode_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributionbucketoperatormetadatanodeLocation_every?: InputMaybe<DistributionBucketOperatorMetadataWhereInput>;
  distributionbucketoperatormetadatanodeLocation_none?: InputMaybe<DistributionBucketOperatorMetadataWhereInput>;
  distributionbucketoperatormetadatanodeLocation_some?: InputMaybe<DistributionBucketOperatorMetadataWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  storagebucketoperatormetadatanodeLocation_every?: InputMaybe<StorageBucketOperatorMetadataWhereInput>;
  storagebucketoperatormetadatanodeLocation_none?: InputMaybe<StorageBucketOperatorMetadataWhereInput>;
  storagebucketoperatormetadatanodeLocation_some?: InputMaybe<StorageBucketOperatorMetadataWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type NodeLocationMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type NotEnoughCandidatesEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum NotEnoughCandidatesEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type NotEnoughCandidatesEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type NotEnoughCandidatesEventWhereInput = {
  AND?: InputMaybe<Array<NotEnoughCandidatesEventWhereInput>>;
  NOT?: InputMaybe<Array<NotEnoughCandidatesEventWhereInput>>;
  OR?: InputMaybe<Array<NotEnoughCandidatesEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type NotEnoughCandidatesEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OfferAcceptedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video: Scalars['ID']['input'];
};

export enum OfferAcceptedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PriceAsc = 'price_ASC',
  PriceDesc = 'price_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type OfferAcceptedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type OfferAcceptedEventWhereInput = {
  AND?: InputMaybe<Array<OfferAcceptedEventWhereInput>>;
  NOT?: InputMaybe<Array<OfferAcceptedEventWhereInput>>;
  OR?: InputMaybe<Array<OfferAcceptedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  price_eq?: InputMaybe<Scalars['BigInt']['input']>;
  price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  price_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type OfferAcceptedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OfferCanceledEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum OfferCanceledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type OfferCanceledEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type OfferCanceledEventWhereInput = {
  AND?: InputMaybe<Array<OfferCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<OfferCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<OfferCanceledEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type OfferCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OfferStartedEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video: Scalars['ID']['input'];
};

export enum OfferStartedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  PriceAsc = 'price_ASC',
  PriceDesc = 'price_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type OfferStartedEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type OfferStartedEventWhereInput = {
  AND?: InputMaybe<Array<OfferStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<OfferStartedEventWhereInput>>;
  OR?: InputMaybe<Array<OfferStartedEventWhereInput>>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  price_eq?: InputMaybe<Scalars['BigInt']['input']>;
  price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  price_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type OfferStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OpenAuctionBidAcceptedEventCreateInput = {
  contentActor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
  winningBid?: InputMaybe<Scalars['ID']['input']>;
  winningBidder?: InputMaybe<Scalars['ID']['input']>;
};

export enum OpenAuctionBidAcceptedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC',
  WinningBidAsc = 'winningBid_ASC',
  WinningBidDesc = 'winningBid_DESC',
  WinningBidderAsc = 'winningBidder_ASC',
  WinningBidderDesc = 'winningBidder_DESC'
}

export type OpenAuctionBidAcceptedEventUpdateInput = {
  contentActor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
  winningBid?: InputMaybe<Scalars['ID']['input']>;
  winningBidder?: InputMaybe<Scalars['ID']['input']>;
};

export type OpenAuctionBidAcceptedEventWhereInput = {
  AND?: InputMaybe<Array<OpenAuctionBidAcceptedEventWhereInput>>;
  NOT?: InputMaybe<Array<OpenAuctionBidAcceptedEventWhereInput>>;
  OR?: InputMaybe<Array<OpenAuctionBidAcceptedEventWhereInput>>;
  bidders_every?: InputMaybe<MembershipWhereInput>;
  bidders_none?: InputMaybe<MembershipWhereInput>;
  bidders_some?: InputMaybe<MembershipWhereInput>;
  contentActor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  winningBid?: InputMaybe<BidWhereInput>;
  winningBidder?: InputMaybe<MembershipWhereInput>;
};

export type OpenAuctionBidAcceptedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OpenAuctionStartedEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  auction: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video: Scalars['ID']['input'];
};

export enum OpenAuctionStartedEventOrderByInput {
  AuctionAsc = 'auction_ASC',
  AuctionDesc = 'auction_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type OpenAuctionStartedEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  auction?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type OpenAuctionStartedEventWhereInput = {
  AND?: InputMaybe<Array<OpenAuctionStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<OpenAuctionStartedEventWhereInput>>;
  OR?: InputMaybe<Array<OpenAuctionStartedEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  auction?: InputMaybe<AuctionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type OpenAuctionStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OpeningAddedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  opening: Scalars['ID']['input'];
};

export enum OpeningAddedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OpeningAsc = 'opening_ASC',
  OpeningDesc = 'opening_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type OpeningAddedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  opening?: InputMaybe<Scalars['ID']['input']>;
};

export type OpeningAddedEventWhereInput = {
  AND?: InputMaybe<Array<OpeningAddedEventWhereInput>>;
  NOT?: InputMaybe<Array<OpeningAddedEventWhereInput>>;
  OR?: InputMaybe<Array<OpeningAddedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  opening?: InputMaybe<WorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type OpeningAddedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OpeningCanceledEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  opening: Scalars['ID']['input'];
};

export enum OpeningCanceledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OpeningAsc = 'opening_ASC',
  OpeningDesc = 'opening_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type OpeningCanceledEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  opening?: InputMaybe<Scalars['ID']['input']>;
};

export type OpeningCanceledEventWhereInput = {
  AND?: InputMaybe<Array<OpeningCanceledEventWhereInput>>;
  NOT?: InputMaybe<Array<OpeningCanceledEventWhereInput>>;
  OR?: InputMaybe<Array<OpeningCanceledEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  opening?: InputMaybe<WorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type OpeningCanceledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OpeningFilledEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  opening: Scalars['ID']['input'];
};

export enum OpeningFilledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  OpeningAsc = 'opening_ASC',
  OpeningDesc = 'opening_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type OpeningFilledEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  opening?: InputMaybe<Scalars['ID']['input']>;
};

export type OpeningFilledEventWhereInput = {
  AND?: InputMaybe<Array<OpeningFilledEventWhereInput>>;
  NOT?: InputMaybe<Array<OpeningFilledEventWhereInput>>;
  OR?: InputMaybe<Array<OpeningFilledEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  opening?: InputMaybe<WorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workersHired_every?: InputMaybe<WorkerWhereInput>;
  workersHired_none?: InputMaybe<WorkerWhereInput>;
  workersHired_some?: InputMaybe<WorkerWhereInput>;
};

export type OpeningFilledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OracleJudgmentSubmittedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export enum OracleJudgmentSubmittedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type OracleJudgmentSubmittedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type OracleJudgmentSubmittedEventWhereInput = {
  AND?: InputMaybe<Array<OracleJudgmentSubmittedEventWhereInput>>;
  NOT?: InputMaybe<Array<OracleJudgmentSubmittedEventWhereInput>>;
  OR?: InputMaybe<Array<OracleJudgmentSubmittedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type OracleJudgmentSubmittedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type OwnedNftCreateInput = {
  creatorChannel: Scalars['ID']['input'];
  creatorRoyalty?: InputMaybe<Scalars['Float']['input']>;
  isOwnedByChannel: Scalars['Boolean']['input'];
  lastSaleDate?: InputMaybe<Scalars['DateTime']['input']>;
  lastSalePrice?: InputMaybe<Scalars['String']['input']>;
  metadata: Scalars['String']['input'];
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  transactionalStatus: Scalars['JSONObject']['input'];
  transactionalStatusAuction?: InputMaybe<Scalars['ID']['input']>;
  videoCategory?: InputMaybe<Scalars['ID']['input']>;
};

export enum OwnedNftOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatorChannelAsc = 'creatorChannel_ASC',
  CreatorChannelDesc = 'creatorChannel_DESC',
  CreatorRoyaltyAsc = 'creatorRoyalty_ASC',
  CreatorRoyaltyDesc = 'creatorRoyalty_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IsOwnedByChannelAsc = 'isOwnedByChannel_ASC',
  IsOwnedByChannelDesc = 'isOwnedByChannel_DESC',
  LastSaleDateAsc = 'lastSaleDate_ASC',
  LastSaleDateDesc = 'lastSaleDate_DESC',
  LastSalePriceAsc = 'lastSalePrice_ASC',
  LastSalePriceDesc = 'lastSalePrice_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  OwnerCuratorGroupAsc = 'ownerCuratorGroup_ASC',
  OwnerCuratorGroupDesc = 'ownerCuratorGroup_DESC',
  OwnerMemberAsc = 'ownerMember_ASC',
  OwnerMemberDesc = 'ownerMember_DESC',
  TransactionalStatusAuctionAsc = 'transactionalStatusAuction_ASC',
  TransactionalStatusAuctionDesc = 'transactionalStatusAuction_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoCategoryAsc = 'videoCategory_ASC',
  VideoCategoryDesc = 'videoCategory_DESC'
}

export type OwnedNftUpdateInput = {
  creatorChannel?: InputMaybe<Scalars['ID']['input']>;
  creatorRoyalty?: InputMaybe<Scalars['Float']['input']>;
  isOwnedByChannel?: InputMaybe<Scalars['Boolean']['input']>;
  lastSaleDate?: InputMaybe<Scalars['DateTime']['input']>;
  lastSalePrice?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  ownerCuratorGroup?: InputMaybe<Scalars['ID']['input']>;
  ownerMember?: InputMaybe<Scalars['ID']['input']>;
  transactionalStatus?: InputMaybe<Scalars['JSONObject']['input']>;
  transactionalStatusAuction?: InputMaybe<Scalars['ID']['input']>;
  videoCategory?: InputMaybe<Scalars['ID']['input']>;
};

export type OwnedNftWhereInput = {
  AND?: InputMaybe<Array<OwnedNftWhereInput>>;
  NOT?: InputMaybe<Array<OwnedNftWhereInput>>;
  OR?: InputMaybe<Array<OwnedNftWhereInput>>;
  auctions_every?: InputMaybe<AuctionWhereInput>;
  auctions_none?: InputMaybe<AuctionWhereInput>;
  auctions_some?: InputMaybe<AuctionWhereInput>;
  bids_every?: InputMaybe<BidWhereInput>;
  bids_none?: InputMaybe<BidWhereInput>;
  bids_some?: InputMaybe<BidWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  creatorChannel?: InputMaybe<ChannelWhereInput>;
  creatorRoyalty_eq?: InputMaybe<Scalars['Float']['input']>;
  creatorRoyalty_gt?: InputMaybe<Scalars['Float']['input']>;
  creatorRoyalty_gte?: InputMaybe<Scalars['Float']['input']>;
  creatorRoyalty_in?: InputMaybe<Array<Scalars['Float']['input']>>;
  creatorRoyalty_lt?: InputMaybe<Scalars['Float']['input']>;
  creatorRoyalty_lte?: InputMaybe<Scalars['Float']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isOwnedByChannel_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isOwnedByChannel_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  lastSaleDate_eq?: InputMaybe<Scalars['DateTime']['input']>;
  lastSaleDate_gt?: InputMaybe<Scalars['DateTime']['input']>;
  lastSaleDate_gte?: InputMaybe<Scalars['DateTime']['input']>;
  lastSaleDate_lt?: InputMaybe<Scalars['DateTime']['input']>;
  lastSaleDate_lte?: InputMaybe<Scalars['DateTime']['input']>;
  lastSalePrice_eq?: InputMaybe<Scalars['BigInt']['input']>;
  lastSalePrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  lastSalePrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  lastSalePrice_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lastSalePrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  lastSalePrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  metadata_contains?: InputMaybe<Scalars['String']['input']>;
  metadata_endsWith?: InputMaybe<Scalars['String']['input']>;
  metadata_eq?: InputMaybe<Scalars['String']['input']>;
  metadata_in?: InputMaybe<Array<Scalars['String']['input']>>;
  metadata_startsWith?: InputMaybe<Scalars['String']['input']>;
  ownerCuratorGroup?: InputMaybe<CuratorGroupWhereInput>;
  ownerMember?: InputMaybe<MembershipWhereInput>;
  transactionalStatusAuction?: InputMaybe<AuctionWhereInput>;
  transactionalStatusUpdates_every?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  transactionalStatusUpdates_none?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  transactionalStatusUpdates_some?: InputMaybe<TransactionalStatusUpdateWhereInput>;
  transactionalStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoCategory?: InputMaybe<VideoCategoryWhereInput>;
};

export type OwnedNftWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type PostAddedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  isEditable?: InputMaybe<Scalars['Boolean']['input']>;
  network: Network;
  post: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};

export enum PostAddedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsEditableAsc = 'isEditable_ASC',
  IsEditableDesc = 'isEditable_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type PostAddedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isEditable?: InputMaybe<Scalars['Boolean']['input']>;
  network?: InputMaybe<Network>;
  post?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type PostAddedEventWhereInput = {
  AND?: InputMaybe<Array<PostAddedEventWhereInput>>;
  NOT?: InputMaybe<Array<PostAddedEventWhereInput>>;
  OR?: InputMaybe<Array<PostAddedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isEditable_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isEditable_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  post?: InputMaybe<ForumPostWhereInput>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type PostAddedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type PostDeletedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
};

export enum PostDeletedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type PostDeletedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type PostDeletedEventWhereInput = {
  AND?: InputMaybe<Array<PostDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<PostDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<PostDeletedEventWhereInput>>;
  actor?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  posts_every?: InputMaybe<ForumPostWhereInput>;
  posts_none?: InputMaybe<ForumPostWhereInput>;
  posts_some?: InputMaybe<ForumPostWhereInput>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type PostDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type PostModeratedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  post: Scalars['ID']['input'];
  rationale: Scalars['String']['input'];
};

export enum PostModeratedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type PostModeratedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  post?: InputMaybe<Scalars['ID']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
};

export type PostModeratedEventWhereInput = {
  AND?: InputMaybe<Array<PostModeratedEventWhereInput>>;
  NOT?: InputMaybe<Array<PostModeratedEventWhereInput>>;
  OR?: InputMaybe<Array<PostModeratedEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  post?: InputMaybe<ForumPostWhereInput>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type PostModeratedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type PostTextUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newText: Scalars['String']['input'];
  post: Scalars['ID']['input'];
};

export enum PostTextUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewTextAsc = 'newText_ASC',
  NewTextDesc = 'newText_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type PostTextUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newText?: InputMaybe<Scalars['String']['input']>;
  post?: InputMaybe<Scalars['ID']['input']>;
};

export type PostTextUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<PostTextUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<PostTextUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<PostTextUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newText_contains?: InputMaybe<Scalars['String']['input']>;
  newText_endsWith?: InputMaybe<Scalars['String']['input']>;
  newText_eq?: InputMaybe<Scalars['String']['input']>;
  newText_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newText_startsWith?: InputMaybe<Scalars['String']['input']>;
  post?: InputMaybe<ForumPostWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type PostTextUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalCancelledEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  proposal: Scalars['ID']['input'];
};

export enum ProposalCancelledEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalCancelledEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalCancelledEventWhereInput = {
  AND?: InputMaybe<Array<ProposalCancelledEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalCancelledEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalCancelledEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalCancelledEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalCreateInput = {
  councilApprovals: Scalars['Float']['input'];
  creator: Scalars['ID']['input'];
  description: Scalars['String']['input'];
  details: Scalars['JSONObject']['input'];
  exactExecutionBlock?: InputMaybe<Scalars['Float']['input']>;
  isFinalized?: InputMaybe<Scalars['Boolean']['input']>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
  status: Scalars['JSONObject']['input'];
  statusSetAtBlock: Scalars['Float']['input'];
  statusSetAtTime: Scalars['DateTime']['input'];
  title: Scalars['String']['input'];
};

export type ProposalCreatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  proposal: Scalars['ID']['input'];
};

export enum ProposalCreatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalCreatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalCreatedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalCreatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDecisionMadeEventCreateInput = {
  decisionStatus: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  proposal: Scalars['ID']['input'];
};

export enum ProposalDecisionMadeEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDecisionMadeEventUpdateInput = {
  decisionStatus?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalDecisionMadeEventWhereInput = {
  AND?: InputMaybe<Array<ProposalDecisionMadeEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDecisionMadeEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalDecisionMadeEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  decisionStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDecisionMadeEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDiscussionPostCreateInput = {
  author: Scalars['ID']['input'];
  discussionThread: Scalars['ID']['input'];
  isVisible: Scalars['Boolean']['input'];
  repliesTo?: InputMaybe<Scalars['ID']['input']>;
  status: Scalars['JSONObject']['input'];
  text: Scalars['String']['input'];
};

export type ProposalDiscussionPostCreatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  post: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};

export enum ProposalDiscussionPostCreatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionPostCreatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  post?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type ProposalDiscussionPostCreatedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionPostCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionPostCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionPostCreatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  post?: InputMaybe<ProposalDiscussionPostWhereInput>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionPostCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDiscussionPostDeletedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  post: Scalars['ID']['input'];
};

export enum ProposalDiscussionPostDeletedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionPostDeletedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  post?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalDiscussionPostDeletedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionPostDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionPostDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionPostDeletedEventWhereInput>>;
  actor?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  post?: InputMaybe<ProposalDiscussionPostWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionPostDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum ProposalDiscussionPostOrderByInput {
  AuthorAsc = 'author_ASC',
  AuthorDesc = 'author_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DiscussionThreadAsc = 'discussionThread_ASC',
  DiscussionThreadDesc = 'discussionThread_DESC',
  IsVisibleAsc = 'isVisible_ASC',
  IsVisibleDesc = 'isVisible_DESC',
  RepliesToAsc = 'repliesTo_ASC',
  RepliesToDesc = 'repliesTo_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionPostUpdateInput = {
  author?: InputMaybe<Scalars['ID']['input']>;
  discussionThread?: InputMaybe<Scalars['ID']['input']>;
  isVisible?: InputMaybe<Scalars['Boolean']['input']>;
  repliesTo?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type ProposalDiscussionPostUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  post: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};

export enum ProposalDiscussionPostUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PostAsc = 'post_ASC',
  PostDesc = 'post_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionPostUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  post?: InputMaybe<Scalars['ID']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type ProposalDiscussionPostUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionPostUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionPostUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionPostUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  post?: InputMaybe<ProposalDiscussionPostWhereInput>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionPostUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDiscussionPostWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionPostWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionPostWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionPostWhereInput>>;
  author?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<ProposalDiscussionPostCreatedEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  discussionThread?: InputMaybe<ProposalDiscussionThreadWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isVisible_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isVisible_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  proposaldiscussionpostdeletedeventpost_every?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionpostdeletedeventpost_none?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionpostdeletedeventpost_some?: InputMaybe<ProposalDiscussionPostDeletedEventWhereInput>;
  proposaldiscussionpostrepliesTo_every?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposaldiscussionpostrepliesTo_none?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposaldiscussionpostrepliesTo_some?: InputMaybe<ProposalDiscussionPostWhereInput>;
  repliesTo?: InputMaybe<ProposalDiscussionPostWhereInput>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updates_every?: InputMaybe<ProposalDiscussionPostUpdatedEventWhereInput>;
  updates_none?: InputMaybe<ProposalDiscussionPostUpdatedEventWhereInput>;
  updates_some?: InputMaybe<ProposalDiscussionPostUpdatedEventWhereInput>;
};

export type ProposalDiscussionPostWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDiscussionThreadCreateInput = {
  mode: Scalars['JSONObject']['input'];
  proposal: Scalars['ID']['input'];
};

export type ProposalDiscussionThreadModeChangedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newMode: Scalars['JSONObject']['input'];
  thread: Scalars['ID']['input'];
};

export enum ProposalDiscussionThreadModeChangedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionThreadModeChangedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newMode?: InputMaybe<Scalars['JSONObject']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalDiscussionThreadModeChangedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionThreadModeChangedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionThreadModeChangedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionThreadModeChangedEventWhereInput>>;
  actor?: InputMaybe<MembershipWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newMode_json?: InputMaybe<Scalars['JSONObject']['input']>;
  thread?: InputMaybe<ProposalDiscussionThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionThreadModeChangedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum ProposalDiscussionThreadOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionThreadUpdateInput = {
  mode?: InputMaybe<Scalars['JSONObject']['input']>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalDiscussionThreadWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionThreadWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionThreadWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionThreadWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  modeChanges_every?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  modeChanges_none?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  modeChanges_some?: InputMaybe<ProposalDiscussionThreadModeChangedEventWhereInput>;
  mode_json?: InputMaybe<Scalars['JSONObject']['input']>;
  posts_every?: InputMaybe<ProposalDiscussionPostWhereInput>;
  posts_none?: InputMaybe<ProposalDiscussionPostWhereInput>;
  posts_some?: InputMaybe<ProposalDiscussionPostWhereInput>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionThreadWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalDiscussionWhitelistCreateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export enum ProposalDiscussionWhitelistOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  PhantomAsc = 'phantom_ASC',
  PhantomDesc = 'phantom_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalDiscussionWhitelistUpdateInput = {
  phantom?: InputMaybe<Scalars['Float']['input']>;
};

export type ProposalDiscussionWhitelistWhereInput = {
  AND?: InputMaybe<Array<ProposalDiscussionWhitelistWhereInput>>;
  NOT?: InputMaybe<Array<ProposalDiscussionWhitelistWhereInput>>;
  OR?: InputMaybe<Array<ProposalDiscussionWhitelistWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  members_every?: InputMaybe<MembershipWhereInput>;
  members_none?: InputMaybe<MembershipWhereInput>;
  members_some?: InputMaybe<MembershipWhereInput>;
  phantom_eq?: InputMaybe<Scalars['Int']['input']>;
  phantom_gt?: InputMaybe<Scalars['Int']['input']>;
  phantom_gte?: InputMaybe<Scalars['Int']['input']>;
  phantom_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  phantom_lt?: InputMaybe<Scalars['Int']['input']>;
  phantom_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalDiscussionWhitelistWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalExecutedEventCreateInput = {
  executionStatus: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  proposal: Scalars['ID']['input'];
};

export enum ProposalExecutedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalExecutedEventUpdateInput = {
  executionStatus?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalExecutedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalExecutedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalExecutedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalExecutedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  executionStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalExecutedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum ProposalOrderByInput {
  CouncilApprovalsAsc = 'councilApprovals_ASC',
  CouncilApprovalsDesc = 'councilApprovals_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatorAsc = 'creator_ASC',
  CreatorDesc = 'creator_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  ExactExecutionBlockAsc = 'exactExecutionBlock_ASC',
  ExactExecutionBlockDesc = 'exactExecutionBlock_DESC',
  IsFinalizedAsc = 'isFinalized_ASC',
  IsFinalizedDesc = 'isFinalized_DESC',
  StakingAccountAsc = 'stakingAccount_ASC',
  StakingAccountDesc = 'stakingAccount_DESC',
  StatusSetAtBlockAsc = 'statusSetAtBlock_ASC',
  StatusSetAtBlockDesc = 'statusSetAtBlock_DESC',
  StatusSetAtTimeAsc = 'statusSetAtTime_ASC',
  StatusSetAtTimeDesc = 'statusSetAtTime_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalStatusUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newStatus: Scalars['JSONObject']['input'];
  proposal: Scalars['ID']['input'];
};

export enum ProposalStatusUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ProposalStatusUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newStatus?: InputMaybe<Scalars['JSONObject']['input']>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
};

export type ProposalStatusUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalStatusUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalStatusUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalStatusUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  proposal?: InputMaybe<ProposalWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ProposalStatusUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalUpdateInput = {
  councilApprovals?: InputMaybe<Scalars['Float']['input']>;
  creator?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  details?: InputMaybe<Scalars['JSONObject']['input']>;
  exactExecutionBlock?: InputMaybe<Scalars['Float']['input']>;
  isFinalized?: InputMaybe<Scalars['Boolean']['input']>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  statusSetAtBlock?: InputMaybe<Scalars['Float']['input']>;
  statusSetAtTime?: InputMaybe<Scalars['DateTime']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export enum ProposalVoteKind {
  Abstain = 'ABSTAIN',
  Approve = 'APPROVE',
  Reject = 'REJECT',
  Slash = 'SLASH'
}

export type ProposalVotedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  proposal: Scalars['ID']['input'];
  rationale: Scalars['String']['input'];
  voteKind: ProposalVoteKind;
  voter: Scalars['ID']['input'];
  votingRound: Scalars['Float']['input'];
};

export enum ProposalVotedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ProposalAsc = 'proposal_ASC',
  ProposalDesc = 'proposal_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VoteKindAsc = 'voteKind_ASC',
  VoteKindDesc = 'voteKind_DESC',
  VoterAsc = 'voter_ASC',
  VoterDesc = 'voter_DESC',
  VotingRoundAsc = 'votingRound_ASC',
  VotingRoundDesc = 'votingRound_DESC'
}

export type ProposalVotedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  proposal?: InputMaybe<Scalars['ID']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  voteKind?: InputMaybe<ProposalVoteKind>;
  voter?: InputMaybe<Scalars['ID']['input']>;
  votingRound?: InputMaybe<Scalars['Float']['input']>;
};

export type ProposalVotedEventWhereInput = {
  AND?: InputMaybe<Array<ProposalVotedEventWhereInput>>;
  NOT?: InputMaybe<Array<ProposalVotedEventWhereInput>>;
  OR?: InputMaybe<Array<ProposalVotedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  proposal?: InputMaybe<ProposalWhereInput>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  voteKind_eq?: InputMaybe<ProposalVoteKind>;
  voteKind_in?: InputMaybe<Array<ProposalVoteKind>>;
  voter?: InputMaybe<MembershipWhereInput>;
  votingRound_eq?: InputMaybe<Scalars['Int']['input']>;
  votingRound_gt?: InputMaybe<Scalars['Int']['input']>;
  votingRound_gte?: InputMaybe<Scalars['Int']['input']>;
  votingRound_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  votingRound_lt?: InputMaybe<Scalars['Int']['input']>;
  votingRound_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type ProposalVotedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ProposalWhereInput = {
  AND?: InputMaybe<Array<ProposalWhereInput>>;
  NOT?: InputMaybe<Array<ProposalWhereInput>>;
  OR?: InputMaybe<Array<ProposalWhereInput>>;
  councilApprovals_eq?: InputMaybe<Scalars['Int']['input']>;
  councilApprovals_gt?: InputMaybe<Scalars['Int']['input']>;
  councilApprovals_gte?: InputMaybe<Scalars['Int']['input']>;
  councilApprovals_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  councilApprovals_lt?: InputMaybe<Scalars['Int']['input']>;
  councilApprovals_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<ProposalCreatedEventWhereInput>;
  creator?: InputMaybe<MembershipWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  details_json?: InputMaybe<Scalars['JSONObject']['input']>;
  discussionThread?: InputMaybe<ProposalDiscussionThreadWhereInput>;
  exactExecutionBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  exactExecutionBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  exactExecutionBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  exactExecutionBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  exactExecutionBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  exactExecutionBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isFinalized_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isFinalized_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  proposalStatusUpdates_every?: InputMaybe<ProposalStatusUpdatedEventWhereInput>;
  proposalStatusUpdates_none?: InputMaybe<ProposalStatusUpdatedEventWhereInput>;
  proposalStatusUpdates_some?: InputMaybe<ProposalStatusUpdatedEventWhereInput>;
  proposalcancelledeventproposal_every?: InputMaybe<ProposalCancelledEventWhereInput>;
  proposalcancelledeventproposal_none?: InputMaybe<ProposalCancelledEventWhereInput>;
  proposalcancelledeventproposal_some?: InputMaybe<ProposalCancelledEventWhereInput>;
  proposaldecisionmadeeventproposal_every?: InputMaybe<ProposalDecisionMadeEventWhereInput>;
  proposaldecisionmadeeventproposal_none?: InputMaybe<ProposalDecisionMadeEventWhereInput>;
  proposaldecisionmadeeventproposal_some?: InputMaybe<ProposalDecisionMadeEventWhereInput>;
  proposalexecutedeventproposal_every?: InputMaybe<ProposalExecutedEventWhereInput>;
  proposalexecutedeventproposal_none?: InputMaybe<ProposalExecutedEventWhereInput>;
  proposalexecutedeventproposal_some?: InputMaybe<ProposalExecutedEventWhereInput>;
  stakingAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  statusSetAtBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  statusSetAtBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  statusSetAtBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  statusSetAtBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  statusSetAtBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  statusSetAtBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  statusSetAtTime_eq?: InputMaybe<Scalars['DateTime']['input']>;
  statusSetAtTime_gt?: InputMaybe<Scalars['DateTime']['input']>;
  statusSetAtTime_gte?: InputMaybe<Scalars['DateTime']['input']>;
  statusSetAtTime_lt?: InputMaybe<Scalars['DateTime']['input']>;
  statusSetAtTime_lte?: InputMaybe<Scalars['DateTime']['input']>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  votes_every?: InputMaybe<ProposalVotedEventWhereInput>;
  votes_none?: InputMaybe<ProposalVotedEventWhereInput>;
  votes_some?: InputMaybe<ProposalVotedEventWhereInput>;
};

export type ProposalWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferendumFinishedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum ReferendumFinishedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ReferendumFinishedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type ReferendumFinishedEventWhereInput = {
  AND?: InputMaybe<Array<ReferendumFinishedEventWhereInput>>;
  NOT?: InputMaybe<Array<ReferendumFinishedEventWhereInput>>;
  OR?: InputMaybe<Array<ReferendumFinishedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ReferendumFinishedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferendumStageRevealingCreateInput = {
  electionRound: Scalars['ID']['input'];
  endsAt: Scalars['Float']['input'];
  startedAtBlock: Scalars['String']['input'];
  winningTargetCount: Scalars['String']['input'];
};

export enum ReferendumStageRevealingOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectionRoundAsc = 'electionRound_ASC',
  ElectionRoundDesc = 'electionRound_DESC',
  EndsAtAsc = 'endsAt_ASC',
  EndsAtDesc = 'endsAt_DESC',
  StartedAtBlockAsc = 'startedAtBlock_ASC',
  StartedAtBlockDesc = 'startedAtBlock_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WinningTargetCountAsc = 'winningTargetCount_ASC',
  WinningTargetCountDesc = 'winningTargetCount_DESC'
}

export type ReferendumStageRevealingUpdateInput = {
  electionRound?: InputMaybe<Scalars['ID']['input']>;
  endsAt?: InputMaybe<Scalars['Float']['input']>;
  startedAtBlock?: InputMaybe<Scalars['String']['input']>;
  winningTargetCount?: InputMaybe<Scalars['String']['input']>;
};

export type ReferendumStageRevealingWhereInput = {
  AND?: InputMaybe<Array<ReferendumStageRevealingWhereInput>>;
  NOT?: InputMaybe<Array<ReferendumStageRevealingWhereInput>>;
  OR?: InputMaybe<Array<ReferendumStageRevealingWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electionRound?: InputMaybe<ElectionRoundWhereInput>;
  endsAt_eq?: InputMaybe<Scalars['Int']['input']>;
  endsAt_gt?: InputMaybe<Scalars['Int']['input']>;
  endsAt_gte?: InputMaybe<Scalars['Int']['input']>;
  endsAt_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  endsAt_lt?: InputMaybe<Scalars['Int']['input']>;
  endsAt_lte?: InputMaybe<Scalars['Int']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  startedAtBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  startedAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  winningTargetCount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  winningTargetCount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_lte?: InputMaybe<Scalars['BigInt']['input']>;
};

export type ReferendumStageRevealingWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferendumStageVotingCreateInput = {
  electionRound: Scalars['ID']['input'];
  endsAt: Scalars['Float']['input'];
  startedAtBlock: Scalars['String']['input'];
  winningTargetCount: Scalars['String']['input'];
};

export enum ReferendumStageVotingOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ElectionRoundAsc = 'electionRound_ASC',
  ElectionRoundDesc = 'electionRound_DESC',
  EndsAtAsc = 'endsAt_ASC',
  EndsAtDesc = 'endsAt_DESC',
  StartedAtBlockAsc = 'startedAtBlock_ASC',
  StartedAtBlockDesc = 'startedAtBlock_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WinningTargetCountAsc = 'winningTargetCount_ASC',
  WinningTargetCountDesc = 'winningTargetCount_DESC'
}

export type ReferendumStageVotingUpdateInput = {
  electionRound?: InputMaybe<Scalars['ID']['input']>;
  endsAt?: InputMaybe<Scalars['Float']['input']>;
  startedAtBlock?: InputMaybe<Scalars['String']['input']>;
  winningTargetCount?: InputMaybe<Scalars['String']['input']>;
};

export type ReferendumStageVotingWhereInput = {
  AND?: InputMaybe<Array<ReferendumStageVotingWhereInput>>;
  NOT?: InputMaybe<Array<ReferendumStageVotingWhereInput>>;
  OR?: InputMaybe<Array<ReferendumStageVotingWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  electionRound?: InputMaybe<ElectionRoundWhereInput>;
  endsAt_eq?: InputMaybe<Scalars['Int']['input']>;
  endsAt_gt?: InputMaybe<Scalars['Int']['input']>;
  endsAt_gte?: InputMaybe<Scalars['Int']['input']>;
  endsAt_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  endsAt_lt?: InputMaybe<Scalars['Int']['input']>;
  endsAt_lte?: InputMaybe<Scalars['Int']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  startedAtBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  startedAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  startedAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  winningTargetCount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  winningTargetCount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_lte?: InputMaybe<Scalars['BigInt']['input']>;
};

export type ReferendumStageVotingWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferendumStartedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  winningTargetCount: Scalars['String']['input'];
};

export enum ReferendumStartedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WinningTargetCountAsc = 'winningTargetCount_ASC',
  WinningTargetCountDesc = 'winningTargetCount_DESC'
}

export type ReferendumStartedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  winningTargetCount?: InputMaybe<Scalars['String']['input']>;
};

export type ReferendumStartedEventWhereInput = {
  AND?: InputMaybe<Array<ReferendumStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<ReferendumStartedEventWhereInput>>;
  OR?: InputMaybe<Array<ReferendumStartedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  winningTargetCount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  winningTargetCount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_lte?: InputMaybe<Scalars['BigInt']['input']>;
};

export type ReferendumStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferendumStartedForcefullyEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  winningTargetCount: Scalars['String']['input'];
};

export enum ReferendumStartedForcefullyEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WinningTargetCountAsc = 'winningTargetCount_ASC',
  WinningTargetCountDesc = 'winningTargetCount_DESC'
}

export type ReferendumStartedForcefullyEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  winningTargetCount?: InputMaybe<Scalars['String']['input']>;
};

export type ReferendumStartedForcefullyEventWhereInput = {
  AND?: InputMaybe<Array<ReferendumStartedForcefullyEventWhereInput>>;
  NOT?: InputMaybe<Array<ReferendumStartedForcefullyEventWhereInput>>;
  OR?: InputMaybe<Array<ReferendumStartedForcefullyEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  winningTargetCount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  winningTargetCount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  winningTargetCount_lte?: InputMaybe<Scalars['BigInt']['input']>;
};

export type ReferendumStartedForcefullyEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ReferralCutUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newValue: Scalars['Float']['input'];
};

export enum ReferralCutUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewValueAsc = 'newValue_ASC',
  NewValueDesc = 'newValue_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ReferralCutUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newValue?: InputMaybe<Scalars['Float']['input']>;
};

export type ReferralCutUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<ReferralCutUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ReferralCutUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<ReferralCutUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newValue_eq?: InputMaybe<Scalars['Int']['input']>;
  newValue_gt?: InputMaybe<Scalars['Int']['input']>;
  newValue_gte?: InputMaybe<Scalars['Int']['input']>;
  newValue_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  newValue_lt?: InputMaybe<Scalars['Int']['input']>;
  newValue_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ReferralCutUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type RequestFundedEventCreateInput = {
  account: Scalars['String']['input'];
  amount: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum RequestFundedEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type RequestFundedEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type RequestFundedEventWhereInput = {
  AND?: InputMaybe<Array<RequestFundedEventWhereInput>>;
  NOT?: InputMaybe<Array<RequestFundedEventWhereInput>>;
  OR?: InputMaybe<Array<RequestFundedEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type RequestFundedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type RevealingStageStartedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum RevealingStageStartedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type RevealingStageStartedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type RevealingStageStartedEventWhereInput = {
  AND?: InputMaybe<Array<RevealingStageStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<RevealingStageStartedEventWhereInput>>;
  OR?: InputMaybe<Array<RevealingStageStartedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type RevealingStageStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type RewardPaidEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  paymentType: RewardPaymentType;
  rewardAccount: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum RewardPaidEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PaymentTypeAsc = 'paymentType_ASC',
  PaymentTypeDesc = 'paymentType_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type RewardPaidEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  paymentType?: InputMaybe<RewardPaymentType>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type RewardPaidEventWhereInput = {
  AND?: InputMaybe<Array<RewardPaidEventWhereInput>>;
  NOT?: InputMaybe<Array<RewardPaidEventWhereInput>>;
  OR?: InputMaybe<Array<RewardPaidEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  paymentType_eq?: InputMaybe<RewardPaymentType>;
  paymentType_in?: InputMaybe<Array<RewardPaymentType>>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type RewardPaidEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type RewardPaymentEventCreateInput = {
  councilMember: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  missingBalance: Scalars['String']['input'];
  network: Network;
  paidBalance: Scalars['String']['input'];
  rewardAccount: Scalars['String']['input'];
};

export enum RewardPaymentEventOrderByInput {
  CouncilMemberAsc = 'councilMember_ASC',
  CouncilMemberDesc = 'councilMember_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MissingBalanceAsc = 'missingBalance_ASC',
  MissingBalanceDesc = 'missingBalance_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PaidBalanceAsc = 'paidBalance_ASC',
  PaidBalanceDesc = 'paidBalance_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type RewardPaymentEventUpdateInput = {
  councilMember?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  missingBalance?: InputMaybe<Scalars['String']['input']>;
  network?: InputMaybe<Network>;
  paidBalance?: InputMaybe<Scalars['String']['input']>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
};

export type RewardPaymentEventWhereInput = {
  AND?: InputMaybe<Array<RewardPaymentEventWhereInput>>;
  NOT?: InputMaybe<Array<RewardPaymentEventWhereInput>>;
  OR?: InputMaybe<Array<RewardPaymentEventWhereInput>>;
  councilMember?: InputMaybe<CouncilMemberWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  missingBalance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  missingBalance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  missingBalance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  missingBalance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  missingBalance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  missingBalance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  paidBalance_eq?: InputMaybe<Scalars['BigInt']['input']>;
  paidBalance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  paidBalance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  paidBalance_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  paidBalance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  paidBalance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type RewardPaymentEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum RewardPaymentType {
  Missed = 'MISSED',
  Regular = 'REGULAR'
}

export type RuntimeWasmBytecodeCreateInput = {
  bytecode: Scalars['String']['input'];
};

export enum RuntimeWasmBytecodeOrderByInput {
  BytecodeAsc = 'bytecode_ASC',
  BytecodeDesc = 'bytecode_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type RuntimeWasmBytecodeUpdateInput = {
  bytecode?: InputMaybe<Scalars['String']['input']>;
};

export type RuntimeWasmBytecodeWhereInput = {
  AND?: InputMaybe<Array<RuntimeWasmBytecodeWhereInput>>;
  NOT?: InputMaybe<Array<RuntimeWasmBytecodeWhereInput>>;
  OR?: InputMaybe<Array<RuntimeWasmBytecodeWhereInput>>;
  bytecode_eq?: InputMaybe<Scalars['Bytes']['input']>;
  bytecode_in?: InputMaybe<Array<Scalars['Bytes']['input']>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type RuntimeWasmBytecodeWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakeDecreasedEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  worker: Scalars['ID']['input'];
};

export enum StakeDecreasedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type StakeDecreasedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type StakeDecreasedEventWhereInput = {
  AND?: InputMaybe<Array<StakeDecreasedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakeDecreasedEventWhereInput>>;
  OR?: InputMaybe<Array<StakeDecreasedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type StakeDecreasedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakeIncreasedEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  worker: Scalars['ID']['input'];
};

export enum StakeIncreasedEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type StakeIncreasedEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type StakeIncreasedEventWhereInput = {
  AND?: InputMaybe<Array<StakeIncreasedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakeIncreasedEventWhereInput>>;
  OR?: InputMaybe<Array<StakeIncreasedEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type StakeIncreasedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakeReleasedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  stakingAccount: Scalars['String']['input'];
};

export enum StakeReleasedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  StakingAccountAsc = 'stakingAccount_ASC',
  StakingAccountDesc = 'stakingAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StakeReleasedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
};

export type StakeReleasedEventWhereInput = {
  AND?: InputMaybe<Array<StakeReleasedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakeReleasedEventWhereInput>>;
  OR?: InputMaybe<Array<StakeReleasedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  stakingAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StakeReleasedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakeSlashedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale?: InputMaybe<Scalars['String']['input']>;
  requestedAmount: Scalars['String']['input'];
  slashedAmount: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum StakeSlashedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  RequestedAmountAsc = 'requestedAmount_ASC',
  RequestedAmountDesc = 'requestedAmount_DESC',
  SlashedAmountAsc = 'slashedAmount_ASC',
  SlashedAmountDesc = 'slashedAmount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type StakeSlashedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  requestedAmount?: InputMaybe<Scalars['String']['input']>;
  slashedAmount?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type StakeSlashedEventWhereInput = {
  AND?: InputMaybe<Array<StakeSlashedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakeSlashedEventWhereInput>>;
  OR?: InputMaybe<Array<StakeSlashedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  requestedAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  requestedAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  requestedAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  requestedAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  requestedAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  requestedAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  slashedAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  slashedAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  slashedAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  slashedAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  slashedAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  slashedAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type StakeSlashedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakingAccountAddedEventCreateInput = {
  account: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
};

export enum StakingAccountAddedEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StakingAccountAddedEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
};

export type StakingAccountAddedEventWhereInput = {
  AND?: InputMaybe<Array<StakingAccountAddedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakingAccountAddedEventWhereInput>>;
  OR?: InputMaybe<Array<StakingAccountAddedEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StakingAccountAddedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakingAccountConfirmedEventCreateInput = {
  account: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
};

export enum StakingAccountConfirmedEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StakingAccountConfirmedEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
};

export type StakingAccountConfirmedEventWhereInput = {
  AND?: InputMaybe<Array<StakingAccountConfirmedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakingAccountConfirmedEventWhereInput>>;
  OR?: InputMaybe<Array<StakingAccountConfirmedEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StakingAccountConfirmedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StakingAccountRemovedEventCreateInput = {
  account: Scalars['String']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  member: Scalars['ID']['input'];
  network: Network;
};

export enum StakingAccountRemovedEventOrderByInput {
  AccountAsc = 'account_ASC',
  AccountDesc = 'account_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StakingAccountRemovedEventUpdateInput = {
  account?: InputMaybe<Scalars['String']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  member?: InputMaybe<Scalars['ID']['input']>;
  network?: InputMaybe<Network>;
};

export type StakingAccountRemovedEventWhereInput = {
  AND?: InputMaybe<Array<StakingAccountRemovedEventWhereInput>>;
  NOT?: InputMaybe<Array<StakingAccountRemovedEventWhereInput>>;
  OR?: InputMaybe<Array<StakingAccountRemovedEventWhereInput>>;
  account_contains?: InputMaybe<Scalars['String']['input']>;
  account_endsWith?: InputMaybe<Scalars['String']['input']>;
  account_eq?: InputMaybe<Scalars['String']['input']>;
  account_in?: InputMaybe<Array<Scalars['String']['input']>>;
  account_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  member?: InputMaybe<MembershipWhereInput>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StakingAccountRemovedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StatusTextChangedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  metadata?: InputMaybe<Scalars['String']['input']>;
  network: Network;
  result: Scalars['JSONObject']['input'];
};

export enum StatusTextChangedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StatusTextChangedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  network?: InputMaybe<Network>;
  result?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type StatusTextChangedEventWhereInput = {
  AND?: InputMaybe<Array<StatusTextChangedEventWhereInput>>;
  NOT?: InputMaybe<Array<StatusTextChangedEventWhereInput>>;
  OR?: InputMaybe<Array<StatusTextChangedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  metadata_contains?: InputMaybe<Scalars['String']['input']>;
  metadata_endsWith?: InputMaybe<Scalars['String']['input']>;
  metadata_eq?: InputMaybe<Scalars['String']['input']>;
  metadata_in?: InputMaybe<Array<Scalars['String']['input']>>;
  metadata_startsWith?: InputMaybe<Scalars['String']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  result_json?: InputMaybe<Scalars['JSONObject']['input']>;
  upcomingworkinggroupopeningcreatedInEvent_every?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeningcreatedInEvent_none?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeningcreatedInEvent_some?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workinggroupmetadatasetInEvent_every?: InputMaybe<WorkingGroupMetadataWhereInput>;
  workinggroupmetadatasetInEvent_none?: InputMaybe<WorkingGroupMetadataWhereInput>;
  workinggroupmetadatasetInEvent_some?: InputMaybe<WorkingGroupMetadataWhereInput>;
};

export type StatusTextChangedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StorageBagCreateInput = {
  objectsSize: Scalars['String']['input'];
  owner: Scalars['JSONObject']['input'];
};

export enum StorageBagOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ObjectsSizeAsc = 'objectsSize_ASC',
  ObjectsSizeDesc = 'objectsSize_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StorageBagUpdateInput = {
  objectsSize?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type StorageBagWhereInput = {
  AND?: InputMaybe<Array<StorageBagWhereInput>>;
  NOT?: InputMaybe<Array<StorageBagWhereInput>>;
  OR?: InputMaybe<Array<StorageBagWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  distributionBuckets_every?: InputMaybe<DistributionBucketWhereInput>;
  distributionBuckets_none?: InputMaybe<DistributionBucketWhereInput>;
  distributionBuckets_some?: InputMaybe<DistributionBucketWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  objectsSize_eq?: InputMaybe<Scalars['BigInt']['input']>;
  objectsSize_gt?: InputMaybe<Scalars['BigInt']['input']>;
  objectsSize_gte?: InputMaybe<Scalars['BigInt']['input']>;
  objectsSize_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  objectsSize_lt?: InputMaybe<Scalars['BigInt']['input']>;
  objectsSize_lte?: InputMaybe<Scalars['BigInt']['input']>;
  objects_every?: InputMaybe<StorageDataObjectWhereInput>;
  objects_none?: InputMaybe<StorageDataObjectWhereInput>;
  objects_some?: InputMaybe<StorageDataObjectWhereInput>;
  owner_json?: InputMaybe<Scalars['JSONObject']['input']>;
  storageBuckets_every?: InputMaybe<StorageBucketWhereInput>;
  storageBuckets_none?: InputMaybe<StorageBucketWhereInput>;
  storageBuckets_some?: InputMaybe<StorageBucketWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StorageBagWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StorageBucketCreateInput = {
  acceptingNewBags: Scalars['Boolean']['input'];
  dataObjectCountLimit: Scalars['String']['input'];
  dataObjectsCount: Scalars['String']['input'];
  dataObjectsSize: Scalars['String']['input'];
  dataObjectsSizeLimit: Scalars['String']['input'];
  operatorMetadata?: InputMaybe<Scalars['ID']['input']>;
  operatorStatus: Scalars['JSONObject']['input'];
};

export type StorageBucketOperatorMetadataCreateInput = {
  extra?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<Scalars['ID']['input']>;
};

export enum StorageBucketOperatorMetadataOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ExtraAsc = 'extra_ASC',
  ExtraDesc = 'extra_DESC',
  NodeEndpointAsc = 'nodeEndpoint_ASC',
  NodeEndpointDesc = 'nodeEndpoint_DESC',
  NodeLocationAsc = 'nodeLocation_ASC',
  NodeLocationDesc = 'nodeLocation_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StorageBucketOperatorMetadataUpdateInput = {
  extra?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<Scalars['ID']['input']>;
};

export type StorageBucketOperatorMetadataWhereInput = {
  AND?: InputMaybe<Array<StorageBucketOperatorMetadataWhereInput>>;
  NOT?: InputMaybe<Array<StorageBucketOperatorMetadataWhereInput>>;
  OR?: InputMaybe<Array<StorageBucketOperatorMetadataWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  extra_contains?: InputMaybe<Scalars['String']['input']>;
  extra_endsWith?: InputMaybe<Scalars['String']['input']>;
  extra_eq?: InputMaybe<Scalars['String']['input']>;
  extra_in?: InputMaybe<Array<Scalars['String']['input']>>;
  extra_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  nodeEndpoint_contains?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_endsWith?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_eq?: InputMaybe<Scalars['String']['input']>;
  nodeEndpoint_in?: InputMaybe<Array<Scalars['String']['input']>>;
  nodeEndpoint_startsWith?: InputMaybe<Scalars['String']['input']>;
  nodeLocation?: InputMaybe<NodeLocationMetadataWhereInput>;
  storagebucketoperatorMetadata_every?: InputMaybe<StorageBucketWhereInput>;
  storagebucketoperatorMetadata_none?: InputMaybe<StorageBucketWhereInput>;
  storagebucketoperatorMetadata_some?: InputMaybe<StorageBucketWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StorageBucketOperatorMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum StorageBucketOrderByInput {
  AcceptingNewBagsAsc = 'acceptingNewBags_ASC',
  AcceptingNewBagsDesc = 'acceptingNewBags_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DataObjectCountLimitAsc = 'dataObjectCountLimit_ASC',
  DataObjectCountLimitDesc = 'dataObjectCountLimit_DESC',
  DataObjectsCountAsc = 'dataObjectsCount_ASC',
  DataObjectsCountDesc = 'dataObjectsCount_DESC',
  DataObjectsSizeLimitAsc = 'dataObjectsSizeLimit_ASC',
  DataObjectsSizeLimitDesc = 'dataObjectsSizeLimit_DESC',
  DataObjectsSizeAsc = 'dataObjectsSize_ASC',
  DataObjectsSizeDesc = 'dataObjectsSize_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  OperatorMetadataAsc = 'operatorMetadata_ASC',
  OperatorMetadataDesc = 'operatorMetadata_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StorageBucketUpdateInput = {
  acceptingNewBags?: InputMaybe<Scalars['Boolean']['input']>;
  dataObjectCountLimit?: InputMaybe<Scalars['String']['input']>;
  dataObjectsCount?: InputMaybe<Scalars['String']['input']>;
  dataObjectsSize?: InputMaybe<Scalars['String']['input']>;
  dataObjectsSizeLimit?: InputMaybe<Scalars['String']['input']>;
  operatorMetadata?: InputMaybe<Scalars['ID']['input']>;
  operatorStatus?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type StorageBucketWhereInput = {
  AND?: InputMaybe<Array<StorageBucketWhereInput>>;
  NOT?: InputMaybe<Array<StorageBucketWhereInput>>;
  OR?: InputMaybe<Array<StorageBucketWhereInput>>;
  acceptingNewBags_eq?: InputMaybe<Scalars['Boolean']['input']>;
  acceptingNewBags_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  bags_every?: InputMaybe<StorageBagWhereInput>;
  bags_none?: InputMaybe<StorageBagWhereInput>;
  bags_some?: InputMaybe<StorageBagWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  dataObjectCountLimit_eq?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectCountLimit_gt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectCountLimit_gte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectCountLimit_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  dataObjectCountLimit_lt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectCountLimit_lte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsCount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsCount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsCount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsCount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  dataObjectsCount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsCount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSizeLimit_eq?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSizeLimit_gt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSizeLimit_gte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSizeLimit_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  dataObjectsSizeLimit_lt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSizeLimit_lte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSize_eq?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSize_gt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSize_gte?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSize_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  dataObjectsSize_lt?: InputMaybe<Scalars['BigInt']['input']>;
  dataObjectsSize_lte?: InputMaybe<Scalars['BigInt']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  operatorMetadata?: InputMaybe<StorageBucketOperatorMetadataWhereInput>;
  operatorStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type StorageBucketWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type StorageDataObjectCreateInput = {
  ipfsHash: Scalars['String']['input'];
  isAccepted: Scalars['Boolean']['input'];
  size: Scalars['String']['input'];
  stateBloatBond: Scalars['String']['input'];
  storageBag: Scalars['ID']['input'];
  type: Scalars['JSONObject']['input'];
  unsetAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export enum StorageDataObjectOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  IpfsHashAsc = 'ipfsHash_ASC',
  IpfsHashDesc = 'ipfsHash_DESC',
  IsAcceptedAsc = 'isAccepted_ASC',
  IsAcceptedDesc = 'isAccepted_DESC',
  SizeAsc = 'size_ASC',
  SizeDesc = 'size_DESC',
  StateBloatBondAsc = 'stateBloatBond_ASC',
  StateBloatBondDesc = 'stateBloatBond_DESC',
  StorageBagAsc = 'storageBag_ASC',
  StorageBagDesc = 'storageBag_DESC',
  UnsetAtAsc = 'unsetAt_ASC',
  UnsetAtDesc = 'unsetAt_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type StorageDataObjectUpdateInput = {
  ipfsHash?: InputMaybe<Scalars['String']['input']>;
  isAccepted?: InputMaybe<Scalars['Boolean']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
  stateBloatBond?: InputMaybe<Scalars['String']['input']>;
  storageBag?: InputMaybe<Scalars['ID']['input']>;
  type?: InputMaybe<Scalars['JSONObject']['input']>;
  unsetAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StorageDataObjectWhereInput = {
  AND?: InputMaybe<Array<StorageDataObjectWhereInput>>;
  NOT?: InputMaybe<Array<StorageDataObjectWhereInput>>;
  OR?: InputMaybe<Array<StorageDataObjectWhereInput>>;
  channelavatarPhoto_every?: InputMaybe<ChannelWhereInput>;
  channelavatarPhoto_none?: InputMaybe<ChannelWhereInput>;
  channelavatarPhoto_some?: InputMaybe<ChannelWhereInput>;
  channelcoverPhoto_every?: InputMaybe<ChannelWhereInput>;
  channelcoverPhoto_none?: InputMaybe<ChannelWhereInput>;
  channelcoverPhoto_some?: InputMaybe<ChannelWhereInput>;
  channelpayoutsupdatedeventpayloadDataObject_every?: InputMaybe<ChannelPayoutsUpdatedEventWhereInput>;
  channelpayoutsupdatedeventpayloadDataObject_none?: InputMaybe<ChannelPayoutsUpdatedEventWhereInput>;
  channelpayoutsupdatedeventpayloadDataObject_some?: InputMaybe<ChannelPayoutsUpdatedEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  ipfsHash_contains?: InputMaybe<Scalars['String']['input']>;
  ipfsHash_endsWith?: InputMaybe<Scalars['String']['input']>;
  ipfsHash_eq?: InputMaybe<Scalars['String']['input']>;
  ipfsHash_in?: InputMaybe<Array<Scalars['String']['input']>>;
  ipfsHash_startsWith?: InputMaybe<Scalars['String']['input']>;
  isAccepted_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isAccepted_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  size_eq?: InputMaybe<Scalars['BigInt']['input']>;
  size_gt?: InputMaybe<Scalars['BigInt']['input']>;
  size_gte?: InputMaybe<Scalars['BigInt']['input']>;
  size_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  size_lt?: InputMaybe<Scalars['BigInt']['input']>;
  size_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stateBloatBond_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stateBloatBond_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stateBloatBond_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stateBloatBond_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stateBloatBond_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stateBloatBond_lte?: InputMaybe<Scalars['BigInt']['input']>;
  storageBag?: InputMaybe<StorageBagWhereInput>;
  type_json?: InputMaybe<Scalars['JSONObject']['input']>;
  unsetAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  unsetAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  unsetAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  unsetAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  unsetAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoMedia?: InputMaybe<VideoWhereInput>;
  videoSubtitle?: InputMaybe<VideoSubtitleWhereInput>;
  videoThumbnail?: InputMaybe<VideoWhereInput>;
};

export type StorageDataObjectWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type TerminatedLeaderEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  penalty?: InputMaybe<Scalars['String']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker: Scalars['ID']['input'];
};

export enum TerminatedLeaderEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PenaltyAsc = 'penalty_ASC',
  PenaltyDesc = 'penalty_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type TerminatedLeaderEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  penalty?: InputMaybe<Scalars['String']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type TerminatedLeaderEventWhereInput = {
  AND?: InputMaybe<Array<TerminatedLeaderEventWhereInput>>;
  NOT?: InputMaybe<Array<TerminatedLeaderEventWhereInput>>;
  OR?: InputMaybe<Array<TerminatedLeaderEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  penalty_eq?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_gt?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_gte?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  penalty_lt?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_lte?: InputMaybe<Scalars['BigInt']['input']>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type TerminatedLeaderEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type TerminatedWorkerEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  penalty?: InputMaybe<Scalars['String']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker: Scalars['ID']['input'];
};

export enum TerminatedWorkerEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PenaltyAsc = 'penalty_ASC',
  PenaltyDesc = 'penalty_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type TerminatedWorkerEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  penalty?: InputMaybe<Scalars['String']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type TerminatedWorkerEventWhereInput = {
  AND?: InputMaybe<Array<TerminatedWorkerEventWhereInput>>;
  NOT?: InputMaybe<Array<TerminatedWorkerEventWhereInput>>;
  OR?: InputMaybe<Array<TerminatedWorkerEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  penalty_eq?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_gt?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_gte?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  penalty_lt?: InputMaybe<Scalars['BigInt']['input']>;
  penalty_lte?: InputMaybe<Scalars['BigInt']['input']>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type TerminatedWorkerEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ThreadCreatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  text: Scalars['String']['input'];
  thread: Scalars['ID']['input'];
  title: Scalars['String']['input'];
};

export enum ThreadCreatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  TextAsc = 'text_ASC',
  TextDesc = 'text_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ThreadCreatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  text?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type ThreadCreatedEventWhereInput = {
  AND?: InputMaybe<Array<ThreadCreatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ThreadCreatedEventWhereInput>>;
  OR?: InputMaybe<Array<ThreadCreatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  text_contains?: InputMaybe<Scalars['String']['input']>;
  text_endsWith?: InputMaybe<Scalars['String']['input']>;
  text_eq?: InputMaybe<Scalars['String']['input']>;
  text_in?: InputMaybe<Array<Scalars['String']['input']>>;
  text_startsWith?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ThreadCreatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ThreadDeletedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  thread: Scalars['ID']['input'];
};

export enum ThreadDeletedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ThreadDeletedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ThreadDeletedEventWhereInput = {
  AND?: InputMaybe<Array<ThreadDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<ThreadDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<ThreadDeletedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ThreadDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ThreadMetadataUpdatedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newTitle?: InputMaybe<Scalars['String']['input']>;
  thread: Scalars['ID']['input'];
};

export enum ThreadMetadataUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewTitleAsc = 'newTitle_ASC',
  NewTitleDesc = 'newTitle_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ThreadMetadataUpdatedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newTitle?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ThreadMetadataUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<ThreadMetadataUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<ThreadMetadataUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<ThreadMetadataUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newTitle_contains?: InputMaybe<Scalars['String']['input']>;
  newTitle_endsWith?: InputMaybe<Scalars['String']['input']>;
  newTitle_eq?: InputMaybe<Scalars['String']['input']>;
  newTitle_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newTitle_startsWith?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ThreadMetadataUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ThreadModeratedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
  thread: Scalars['ID']['input'];
};

export enum ThreadModeratedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ThreadModeratedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ThreadModeratedEventWhereInput = {
  AND?: InputMaybe<Array<ThreadModeratedEventWhereInput>>;
  NOT?: InputMaybe<Array<ThreadModeratedEventWhereInput>>;
  OR?: InputMaybe<Array<ThreadModeratedEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ThreadModeratedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type ThreadMovedEventCreateInput = {
  actor: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newCategory: Scalars['ID']['input'];
  oldCategory: Scalars['ID']['input'];
  thread: Scalars['ID']['input'];
};

export enum ThreadMovedEventOrderByInput {
  ActorAsc = 'actor_ASC',
  ActorDesc = 'actor_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewCategoryAsc = 'newCategory_ASC',
  NewCategoryDesc = 'newCategory_DESC',
  OldCategoryAsc = 'oldCategory_ASC',
  OldCategoryDesc = 'oldCategory_DESC',
  ThreadAsc = 'thread_ASC',
  ThreadDesc = 'thread_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type ThreadMovedEventUpdateInput = {
  actor?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newCategory?: InputMaybe<Scalars['ID']['input']>;
  oldCategory?: InputMaybe<Scalars['ID']['input']>;
  thread?: InputMaybe<Scalars['ID']['input']>;
};

export type ThreadMovedEventWhereInput = {
  AND?: InputMaybe<Array<ThreadMovedEventWhereInput>>;
  NOT?: InputMaybe<Array<ThreadMovedEventWhereInput>>;
  OR?: InputMaybe<Array<ThreadMovedEventWhereInput>>;
  actor?: InputMaybe<WorkerWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newCategory?: InputMaybe<ForumCategoryWhereInput>;
  oldCategory?: InputMaybe<ForumCategoryWhereInput>;
  thread?: InputMaybe<ForumThreadWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type ThreadMovedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type TransactionalStatusUpdateCreateInput = {
  changedAt: Scalars['Float']['input'];
  nft: Scalars['ID']['input'];
  transactionalStatus: Scalars['JSONObject']['input'];
  transactionalStatusAuction?: InputMaybe<Scalars['ID']['input']>;
};

export enum TransactionalStatusUpdateOrderByInput {
  ChangedAtAsc = 'changedAt_ASC',
  ChangedAtDesc = 'changedAt_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  NftAsc = 'nft_ASC',
  NftDesc = 'nft_DESC',
  TransactionalStatusAuctionAsc = 'transactionalStatusAuction_ASC',
  TransactionalStatusAuctionDesc = 'transactionalStatusAuction_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type TransactionalStatusUpdateUpdateInput = {
  changedAt?: InputMaybe<Scalars['Float']['input']>;
  nft?: InputMaybe<Scalars['ID']['input']>;
  transactionalStatus?: InputMaybe<Scalars['JSONObject']['input']>;
  transactionalStatusAuction?: InputMaybe<Scalars['ID']['input']>;
};

export type TransactionalStatusUpdateWhereInput = {
  AND?: InputMaybe<Array<TransactionalStatusUpdateWhereInput>>;
  NOT?: InputMaybe<Array<TransactionalStatusUpdateWhereInput>>;
  OR?: InputMaybe<Array<TransactionalStatusUpdateWhereInput>>;
  changedAt_eq?: InputMaybe<Scalars['Int']['input']>;
  changedAt_gt?: InputMaybe<Scalars['Int']['input']>;
  changedAt_gte?: InputMaybe<Scalars['Int']['input']>;
  changedAt_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  changedAt_lt?: InputMaybe<Scalars['Int']['input']>;
  changedAt_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  nft?: InputMaybe<OwnedNftWhereInput>;
  transactionalStatusAuction?: InputMaybe<AuctionWhereInput>;
  transactionalStatus_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type TransactionalStatusUpdateWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type UpcomingWorkingGroupOpeningCreateInput = {
  createdInEvent: Scalars['ID']['input'];
  expectedStart?: InputMaybe<Scalars['DateTime']['input']>;
  group: Scalars['ID']['input'];
  metadata: Scalars['ID']['input'];
  rewardPerBlock?: InputMaybe<Scalars['String']['input']>;
  stakeAmount?: InputMaybe<Scalars['String']['input']>;
};

export enum UpcomingWorkingGroupOpeningOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInEventAsc = 'createdInEvent_ASC',
  CreatedInEventDesc = 'createdInEvent_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ExpectedStartAsc = 'expectedStart_ASC',
  ExpectedStartDesc = 'expectedStart_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  RewardPerBlockAsc = 'rewardPerBlock_ASC',
  RewardPerBlockDesc = 'rewardPerBlock_DESC',
  StakeAmountAsc = 'stakeAmount_ASC',
  StakeAmountDesc = 'stakeAmount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type UpcomingWorkingGroupOpeningUpdateInput = {
  createdInEvent?: InputMaybe<Scalars['ID']['input']>;
  expectedStart?: InputMaybe<Scalars['DateTime']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  rewardPerBlock?: InputMaybe<Scalars['String']['input']>;
  stakeAmount?: InputMaybe<Scalars['String']['input']>;
};

export type UpcomingWorkingGroupOpeningWhereInput = {
  AND?: InputMaybe<Array<UpcomingWorkingGroupOpeningWhereInput>>;
  NOT?: InputMaybe<Array<UpcomingWorkingGroupOpeningWhereInput>>;
  OR?: InputMaybe<Array<UpcomingWorkingGroupOpeningWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<StatusTextChangedEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  expectedStart_eq?: InputMaybe<Scalars['DateTime']['input']>;
  expectedStart_gt?: InputMaybe<Scalars['DateTime']['input']>;
  expectedStart_gte?: InputMaybe<Scalars['DateTime']['input']>;
  expectedStart_lt?: InputMaybe<Scalars['DateTime']['input']>;
  expectedStart_lte?: InputMaybe<Scalars['DateTime']['input']>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<WorkingGroupOpeningMetadataWhereInput>;
  rewardPerBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  rewardPerBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stakeAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UpcomingWorkingGroupOpeningWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VestedBudgetSpendingEventCreateInput = {
  amount: Scalars['String']['input'];
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  perBlock: Scalars['String']['input'];
  rationale?: InputMaybe<Scalars['String']['input']>;
  receiver: Scalars['String']['input'];
  startingBlock: Scalars['Float']['input'];
};

export enum VestedBudgetSpendingEventOrderByInput {
  AmountAsc = 'amount_ASC',
  AmountDesc = 'amount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  PerBlockAsc = 'perBlock_ASC',
  PerBlockDesc = 'perBlock_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  ReceiverAsc = 'receiver_ASC',
  ReceiverDesc = 'receiver_DESC',
  StartingBlockAsc = 'startingBlock_ASC',
  StartingBlockDesc = 'startingBlock_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VestedBudgetSpendingEventUpdateInput = {
  amount?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  perBlock?: InputMaybe<Scalars['String']['input']>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  receiver?: InputMaybe<Scalars['String']['input']>;
  startingBlock?: InputMaybe<Scalars['Float']['input']>;
};

export type VestedBudgetSpendingEventWhereInput = {
  AND?: InputMaybe<Array<VestedBudgetSpendingEventWhereInput>>;
  NOT?: InputMaybe<Array<VestedBudgetSpendingEventWhereInput>>;
  OR?: InputMaybe<Array<VestedBudgetSpendingEventWhereInput>>;
  amount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  amount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  perBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  perBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  perBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  perBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  perBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  perBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  receiver_contains?: InputMaybe<Scalars['String']['input']>;
  receiver_endsWith?: InputMaybe<Scalars['String']['input']>;
  receiver_eq?: InputMaybe<Scalars['String']['input']>;
  receiver_in?: InputMaybe<Array<Scalars['String']['input']>>;
  receiver_startsWith?: InputMaybe<Scalars['String']['input']>;
  startingBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  startingBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  startingBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  startingBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  startingBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  startingBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type VestedBudgetSpendingEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoAssetsDeletedByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  areNftAssets?: InputMaybe<Scalars['Boolean']['input']>;
  assetIds: Array<Scalars['Int']['input']>;
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
  videoId: Scalars['Float']['input'];
};

export enum VideoAssetsDeletedByModeratorEventOrderByInput {
  AreNftAssetsAsc = 'areNftAssets_ASC',
  AreNftAssetsDesc = 'areNftAssets_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoIdAsc = 'videoId_ASC',
  VideoIdDesc = 'videoId_DESC'
}

export type VideoAssetsDeletedByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  areNftAssets?: InputMaybe<Scalars['Boolean']['input']>;
  assetIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  videoId?: InputMaybe<Scalars['Float']['input']>;
};

export type VideoAssetsDeletedByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<VideoAssetsDeletedByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoAssetsDeletedByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<VideoAssetsDeletedByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  areNftAssets_eq?: InputMaybe<Scalars['Boolean']['input']>;
  areNftAssets_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  assetIds_containsAll?: InputMaybe<Array<Scalars['Int']['input']>>;
  assetIds_containsAny?: InputMaybe<Array<Scalars['Int']['input']>>;
  assetIds_containsNone?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoId_eq?: InputMaybe<Scalars['Int']['input']>;
  videoId_gt?: InputMaybe<Scalars['Int']['input']>;
  videoId_gte?: InputMaybe<Scalars['Int']['input']>;
  videoId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  videoId_lt?: InputMaybe<Scalars['Int']['input']>;
  videoId_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type VideoAssetsDeletedByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoCategoryCreateInput = {
  activeVideosCounter: Scalars['Float']['input'];
  createdInBlock: Scalars['Float']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentCategory?: InputMaybe<Scalars['ID']['input']>;
};

export enum VideoCategoryOrderByInput {
  ActiveVideosCounterAsc = 'activeVideosCounter_ASC',
  ActiveVideosCounterDesc = 'activeVideosCounter_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  ParentCategoryAsc = 'parentCategory_ASC',
  ParentCategoryDesc = 'parentCategory_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VideoCategoryUpdateInput = {
  activeVideosCounter?: InputMaybe<Scalars['Float']['input']>;
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentCategory?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoCategoryWhereInput = {
  AND?: InputMaybe<Array<VideoCategoryWhereInput>>;
  NOT?: InputMaybe<Array<VideoCategoryWhereInput>>;
  OR?: InputMaybe<Array<VideoCategoryWhereInput>>;
  activeVideosCounter_eq?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_gt?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_gte?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  activeVideosCounter_lt?: InputMaybe<Scalars['Int']['input']>;
  activeVideosCounter_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_endsWith?: InputMaybe<Scalars['String']['input']>;
  name_eq?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_startsWith?: InputMaybe<Scalars['String']['input']>;
  nftissuedeventvideoCategory_every?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventvideoCategory_none?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventvideoCategory_some?: InputMaybe<NftIssuedEventWhereInput>;
  nfts_every?: InputMaybe<OwnedNftWhereInput>;
  nfts_none?: InputMaybe<OwnedNftWhereInput>;
  nfts_some?: InputMaybe<OwnedNftWhereInput>;
  parentCategory?: InputMaybe<VideoCategoryWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videocategoryparentCategory_every?: InputMaybe<VideoCategoryWhereInput>;
  videocategoryparentCategory_none?: InputMaybe<VideoCategoryWhereInput>;
  videocategoryparentCategory_some?: InputMaybe<VideoCategoryWhereInput>;
  videos_every?: InputMaybe<VideoWhereInput>;
  videos_none?: InputMaybe<VideoWhereInput>;
  videos_some?: InputMaybe<VideoWhereInput>;
};

export type VideoCategoryWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoCreateInput = {
  category?: InputMaybe<Scalars['ID']['input']>;
  channel: Scalars['ID']['input'];
  commentsCount: Scalars['Float']['input'];
  createdInBlock: Scalars['Float']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  duration?: InputMaybe<Scalars['Float']['input']>;
  entryApp?: InputMaybe<Scalars['ID']['input']>;
  hasMarketing?: InputMaybe<Scalars['Boolean']['input']>;
  isCensored: Scalars['Boolean']['input'];
  isCommentSectionEnabled: Scalars['Boolean']['input'];
  isExplicit?: InputMaybe<Scalars['Boolean']['input']>;
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  isReactionFeatureEnabled: Scalars['Boolean']['input'];
  isShort?: InputMaybe<Scalars['Boolean']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  license?: InputMaybe<Scalars['ID']['input']>;
  media?: InputMaybe<Scalars['ID']['input']>;
  mediaMetadata?: InputMaybe<Scalars['ID']['input']>;
  nft?: InputMaybe<Scalars['ID']['input']>;
  publishedBeforeJoystream?: InputMaybe<Scalars['DateTime']['input']>;
  reactionsCount: Scalars['Float']['input'];
  thumbnailPhoto?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  videoStateBloatBond: Scalars['String']['input'];
  ytVideoId?: InputMaybe<Scalars['String']['input']>;
};

export type VideoDeletedByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
  videoId: Scalars['Float']['input'];
};

export enum VideoDeletedByModeratorEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoIdAsc = 'videoId_ASC',
  VideoIdDesc = 'videoId_DESC'
}

export type VideoDeletedByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  videoId?: InputMaybe<Scalars['Float']['input']>;
};

export type VideoDeletedByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<VideoDeletedByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoDeletedByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<VideoDeletedByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoId_eq?: InputMaybe<Scalars['Int']['input']>;
  videoId_gt?: InputMaybe<Scalars['Int']['input']>;
  videoId_gte?: InputMaybe<Scalars['Int']['input']>;
  videoId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  videoId_lt?: InputMaybe<Scalars['Int']['input']>;
  videoId_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type VideoDeletedByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoDeletedEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  videoId: Scalars['Float']['input'];
};

export enum VideoDeletedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoIdAsc = 'videoId_ASC',
  VideoIdDesc = 'videoId_DESC'
}

export type VideoDeletedEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  videoId?: InputMaybe<Scalars['Float']['input']>;
};

export type VideoDeletedEventWhereInput = {
  AND?: InputMaybe<Array<VideoDeletedEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoDeletedEventWhereInput>>;
  OR?: InputMaybe<Array<VideoDeletedEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoId_eq?: InputMaybe<Scalars['Int']['input']>;
  videoId_gt?: InputMaybe<Scalars['Int']['input']>;
  videoId_gte?: InputMaybe<Scalars['Int']['input']>;
  videoId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  videoId_lt?: InputMaybe<Scalars['Int']['input']>;
  videoId_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type VideoDeletedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoMediaEncodingCreateInput = {
  codecName?: InputMaybe<Scalars['String']['input']>;
  container?: InputMaybe<Scalars['String']['input']>;
  mimeMediaType?: InputMaybe<Scalars['String']['input']>;
};

export enum VideoMediaEncodingOrderByInput {
  CodecNameAsc = 'codecName_ASC',
  CodecNameDesc = 'codecName_DESC',
  ContainerAsc = 'container_ASC',
  ContainerDesc = 'container_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MimeMediaTypeAsc = 'mimeMediaType_ASC',
  MimeMediaTypeDesc = 'mimeMediaType_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VideoMediaEncodingUpdateInput = {
  codecName?: InputMaybe<Scalars['String']['input']>;
  container?: InputMaybe<Scalars['String']['input']>;
  mimeMediaType?: InputMaybe<Scalars['String']['input']>;
};

export type VideoMediaEncodingWhereInput = {
  AND?: InputMaybe<Array<VideoMediaEncodingWhereInput>>;
  NOT?: InputMaybe<Array<VideoMediaEncodingWhereInput>>;
  OR?: InputMaybe<Array<VideoMediaEncodingWhereInput>>;
  codecName_contains?: InputMaybe<Scalars['String']['input']>;
  codecName_endsWith?: InputMaybe<Scalars['String']['input']>;
  codecName_eq?: InputMaybe<Scalars['String']['input']>;
  codecName_in?: InputMaybe<Array<Scalars['String']['input']>>;
  codecName_startsWith?: InputMaybe<Scalars['String']['input']>;
  container_contains?: InputMaybe<Scalars['String']['input']>;
  container_endsWith?: InputMaybe<Scalars['String']['input']>;
  container_eq?: InputMaybe<Scalars['String']['input']>;
  container_in?: InputMaybe<Array<Scalars['String']['input']>>;
  container_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  mimeMediaType_contains?: InputMaybe<Scalars['String']['input']>;
  mimeMediaType_endsWith?: InputMaybe<Scalars['String']['input']>;
  mimeMediaType_eq?: InputMaybe<Scalars['String']['input']>;
  mimeMediaType_in?: InputMaybe<Array<Scalars['String']['input']>>;
  mimeMediaType_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videomediametadataencoding_every?: InputMaybe<VideoMediaMetadataWhereInput>;
  videomediametadataencoding_none?: InputMaybe<VideoMediaMetadataWhereInput>;
  videomediametadataencoding_some?: InputMaybe<VideoMediaMetadataWhereInput>;
};

export type VideoMediaEncodingWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoMediaMetadataCreateInput = {
  createdInBlock: Scalars['Float']['input'];
  encoding?: InputMaybe<Scalars['ID']['input']>;
  pixelHeight?: InputMaybe<Scalars['Float']['input']>;
  pixelWidth?: InputMaybe<Scalars['Float']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};

export enum VideoMediaMetadataOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EncodingAsc = 'encoding_ASC',
  EncodingDesc = 'encoding_DESC',
  PixelHeightAsc = 'pixelHeight_ASC',
  PixelHeightDesc = 'pixelHeight_DESC',
  PixelWidthAsc = 'pixelWidth_ASC',
  PixelWidthDesc = 'pixelWidth_DESC',
  SizeAsc = 'size_ASC',
  SizeDesc = 'size_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VideoMediaMetadataUpdateInput = {
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  encoding?: InputMaybe<Scalars['ID']['input']>;
  pixelHeight?: InputMaybe<Scalars['Float']['input']>;
  pixelWidth?: InputMaybe<Scalars['Float']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
};

export type VideoMediaMetadataWhereInput = {
  AND?: InputMaybe<Array<VideoMediaMetadataWhereInput>>;
  NOT?: InputMaybe<Array<VideoMediaMetadataWhereInput>>;
  OR?: InputMaybe<Array<VideoMediaMetadataWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  encoding?: InputMaybe<VideoMediaEncodingWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  pixelHeight_eq?: InputMaybe<Scalars['Int']['input']>;
  pixelHeight_gt?: InputMaybe<Scalars['Int']['input']>;
  pixelHeight_gte?: InputMaybe<Scalars['Int']['input']>;
  pixelHeight_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  pixelHeight_lt?: InputMaybe<Scalars['Int']['input']>;
  pixelHeight_lte?: InputMaybe<Scalars['Int']['input']>;
  pixelWidth_eq?: InputMaybe<Scalars['Int']['input']>;
  pixelWidth_gt?: InputMaybe<Scalars['Int']['input']>;
  pixelWidth_gte?: InputMaybe<Scalars['Int']['input']>;
  pixelWidth_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  pixelWidth_lt?: InputMaybe<Scalars['Int']['input']>;
  pixelWidth_lte?: InputMaybe<Scalars['Int']['input']>;
  size_eq?: InputMaybe<Scalars['BigInt']['input']>;
  size_gt?: InputMaybe<Scalars['BigInt']['input']>;
  size_gte?: InputMaybe<Scalars['BigInt']['input']>;
  size_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  size_lt?: InputMaybe<Scalars['BigInt']['input']>;
  size_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type VideoMediaMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum VideoOrderByInput {
  CategoryAsc = 'category_ASC',
  CategoryDesc = 'category_DESC',
  ChannelAsc = 'channel_ASC',
  ChannelDesc = 'channel_DESC',
  CommentsCountAsc = 'commentsCount_ASC',
  CommentsCountDesc = 'commentsCount_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  CreatedInBlockAsc = 'createdInBlock_ASC',
  CreatedInBlockDesc = 'createdInBlock_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  DurationAsc = 'duration_ASC',
  DurationDesc = 'duration_DESC',
  EntryAppAsc = 'entryApp_ASC',
  EntryAppDesc = 'entryApp_DESC',
  HasMarketingAsc = 'hasMarketing_ASC',
  HasMarketingDesc = 'hasMarketing_DESC',
  IsCensoredAsc = 'isCensored_ASC',
  IsCensoredDesc = 'isCensored_DESC',
  IsCommentSectionEnabledAsc = 'isCommentSectionEnabled_ASC',
  IsCommentSectionEnabledDesc = 'isCommentSectionEnabled_DESC',
  IsExplicitAsc = 'isExplicit_ASC',
  IsExplicitDesc = 'isExplicit_DESC',
  IsPublicAsc = 'isPublic_ASC',
  IsPublicDesc = 'isPublic_DESC',
  IsReactionFeatureEnabledAsc = 'isReactionFeatureEnabled_ASC',
  IsReactionFeatureEnabledDesc = 'isReactionFeatureEnabled_DESC',
  IsShortAsc = 'isShort_ASC',
  IsShortDesc = 'isShort_DESC',
  LanguageAsc = 'language_ASC',
  LanguageDesc = 'language_DESC',
  LicenseAsc = 'license_ASC',
  LicenseDesc = 'license_DESC',
  MediaMetadataAsc = 'mediaMetadata_ASC',
  MediaMetadataDesc = 'mediaMetadata_DESC',
  MediaAsc = 'media_ASC',
  MediaDesc = 'media_DESC',
  NftAsc = 'nft_ASC',
  NftDesc = 'nft_DESC',
  PublishedBeforeJoystreamAsc = 'publishedBeforeJoystream_ASC',
  PublishedBeforeJoystreamDesc = 'publishedBeforeJoystream_DESC',
  ReactionsCountAsc = 'reactionsCount_ASC',
  ReactionsCountDesc = 'reactionsCount_DESC',
  ThumbnailPhotoAsc = 'thumbnailPhoto_ASC',
  ThumbnailPhotoDesc = 'thumbnailPhoto_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoStateBloatBondAsc = 'videoStateBloatBond_ASC',
  VideoStateBloatBondDesc = 'videoStateBloatBond_DESC',
  YtVideoIdAsc = 'ytVideoId_ASC',
  YtVideoIdDesc = 'ytVideoId_DESC'
}

export type VideoReactedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  reactingMember: Scalars['ID']['input'];
  reactionResult: VideoReactionOptions;
  video: Scalars['ID']['input'];
  videoChannel: Scalars['ID']['input'];
};

export enum VideoReactedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ReactingMemberAsc = 'reactingMember_ASC',
  ReactingMemberDesc = 'reactingMember_DESC',
  ReactionResultAsc = 'reactionResult_ASC',
  ReactionResultDesc = 'reactionResult_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoChannelAsc = 'videoChannel_ASC',
  VideoChannelDesc = 'videoChannel_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type VideoReactedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  reactingMember?: InputMaybe<Scalars['ID']['input']>;
  reactionResult?: InputMaybe<VideoReactionOptions>;
  video?: InputMaybe<Scalars['ID']['input']>;
  videoChannel?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoReactedEventWhereInput = {
  AND?: InputMaybe<Array<VideoReactedEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoReactedEventWhereInput>>;
  OR?: InputMaybe<Array<VideoReactedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  reactingMember?: InputMaybe<MembershipWhereInput>;
  reactionResult_eq?: InputMaybe<VideoReactionOptions>;
  reactionResult_in?: InputMaybe<Array<VideoReactionOptions>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
  videoChannel?: InputMaybe<ChannelWhereInput>;
};

export type VideoReactedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoReactionCreateInput = {
  member: Scalars['ID']['input'];
  memberId: Scalars['String']['input'];
  reaction: VideoReactionOptions;
  video: Scalars['ID']['input'];
};

export enum VideoReactionOptions {
  Like = 'LIKE',
  Unlike = 'UNLIKE'
}

export enum VideoReactionOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  MemberIdAsc = 'memberId_ASC',
  MemberIdDesc = 'memberId_DESC',
  MemberAsc = 'member_ASC',
  MemberDesc = 'member_DESC',
  ReactionAsc = 'reaction_ASC',
  ReactionDesc = 'reaction_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type VideoReactionUpdateInput = {
  member?: InputMaybe<Scalars['ID']['input']>;
  memberId?: InputMaybe<Scalars['String']['input']>;
  reaction?: InputMaybe<VideoReactionOptions>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoReactionWhereInput = {
  AND?: InputMaybe<Array<VideoReactionWhereInput>>;
  NOT?: InputMaybe<Array<VideoReactionWhereInput>>;
  OR?: InputMaybe<Array<VideoReactionWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  member?: InputMaybe<MembershipWhereInput>;
  memberId_contains?: InputMaybe<Scalars['String']['input']>;
  memberId_endsWith?: InputMaybe<Scalars['String']['input']>;
  memberId_eq?: InputMaybe<Scalars['String']['input']>;
  memberId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  memberId_startsWith?: InputMaybe<Scalars['String']['input']>;
  reaction_eq?: InputMaybe<VideoReactionOptions>;
  reaction_in?: InputMaybe<Array<VideoReactionOptions>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type VideoReactionWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoReactionsCountByReactionTypeCreateInput = {
  count: Scalars['Float']['input'];
  reaction: VideoReactionOptions;
  video: Scalars['ID']['input'];
};

export enum VideoReactionsCountByReactionTypeOrderByInput {
  CountAsc = 'count_ASC',
  CountDesc = 'count_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  ReactionAsc = 'reaction_ASC',
  ReactionDesc = 'reaction_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type VideoReactionsCountByReactionTypeUpdateInput = {
  count?: InputMaybe<Scalars['Float']['input']>;
  reaction?: InputMaybe<VideoReactionOptions>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoReactionsCountByReactionTypeWhereInput = {
  AND?: InputMaybe<Array<VideoReactionsCountByReactionTypeWhereInput>>;
  NOT?: InputMaybe<Array<VideoReactionsCountByReactionTypeWhereInput>>;
  OR?: InputMaybe<Array<VideoReactionsCountByReactionTypeWhereInput>>;
  count_eq?: InputMaybe<Scalars['Int']['input']>;
  count_gt?: InputMaybe<Scalars['Int']['input']>;
  count_gte?: InputMaybe<Scalars['Int']['input']>;
  count_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  count_lt?: InputMaybe<Scalars['Int']['input']>;
  count_lte?: InputMaybe<Scalars['Int']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  reaction_eq?: InputMaybe<VideoReactionOptions>;
  reaction_in?: InputMaybe<Array<VideoReactionOptions>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type VideoReactionsCountByReactionTypeWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoReactionsPreferenceEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  reactionsStatus: Scalars['Boolean']['input'];
  video: Scalars['ID']['input'];
};

export enum VideoReactionsPreferenceEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  ReactionsStatusAsc = 'reactionsStatus_ASC',
  ReactionsStatusDesc = 'reactionsStatus_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type VideoReactionsPreferenceEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  reactionsStatus?: InputMaybe<Scalars['Boolean']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoReactionsPreferenceEventWhereInput = {
  AND?: InputMaybe<Array<VideoReactionsPreferenceEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoReactionsPreferenceEventWhereInput>>;
  OR?: InputMaybe<Array<VideoReactionsPreferenceEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  reactionsStatus_eq?: InputMaybe<Scalars['Boolean']['input']>;
  reactionsStatus_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type VideoReactionsPreferenceEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoSubtitleCreateInput = {
  asset?: InputMaybe<Scalars['ID']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  mimeType: Scalars['String']['input'];
  type: Scalars['String']['input'];
  video: Scalars['ID']['input'];
};

export enum VideoSubtitleOrderByInput {
  AssetAsc = 'asset_ASC',
  AssetDesc = 'asset_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  LanguageAsc = 'language_ASC',
  LanguageDesc = 'language_DESC',
  MimeTypeAsc = 'mimeType_ASC',
  MimeTypeDesc = 'mimeType_DESC',
  TypeAsc = 'type_ASC',
  TypeDesc = 'type_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoAsc = 'video_ASC',
  VideoDesc = 'video_DESC'
}

export type VideoSubtitleUpdateInput = {
  asset?: InputMaybe<Scalars['ID']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  mimeType?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  video?: InputMaybe<Scalars['ID']['input']>;
};

export type VideoSubtitleWhereInput = {
  AND?: InputMaybe<Array<VideoSubtitleWhereInput>>;
  NOT?: InputMaybe<Array<VideoSubtitleWhereInput>>;
  OR?: InputMaybe<Array<VideoSubtitleWhereInput>>;
  asset?: InputMaybe<StorageDataObjectWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  language?: InputMaybe<LanguageWhereInput>;
  mimeType_contains?: InputMaybe<Scalars['String']['input']>;
  mimeType_endsWith?: InputMaybe<Scalars['String']['input']>;
  mimeType_eq?: InputMaybe<Scalars['String']['input']>;
  mimeType_in?: InputMaybe<Array<Scalars['String']['input']>>;
  mimeType_startsWith?: InputMaybe<Scalars['String']['input']>;
  type_contains?: InputMaybe<Scalars['String']['input']>;
  type_endsWith?: InputMaybe<Scalars['String']['input']>;
  type_eq?: InputMaybe<Scalars['String']['input']>;
  type_in?: InputMaybe<Array<Scalars['String']['input']>>;
  type_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  video?: InputMaybe<VideoWhereInput>;
};

export type VideoSubtitleWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoUpdateInput = {
  category?: InputMaybe<Scalars['ID']['input']>;
  channel?: InputMaybe<Scalars['ID']['input']>;
  commentsCount?: InputMaybe<Scalars['Float']['input']>;
  createdInBlock?: InputMaybe<Scalars['Float']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  duration?: InputMaybe<Scalars['Float']['input']>;
  entryApp?: InputMaybe<Scalars['ID']['input']>;
  hasMarketing?: InputMaybe<Scalars['Boolean']['input']>;
  isCensored?: InputMaybe<Scalars['Boolean']['input']>;
  isCommentSectionEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isExplicit?: InputMaybe<Scalars['Boolean']['input']>;
  isPublic?: InputMaybe<Scalars['Boolean']['input']>;
  isReactionFeatureEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  isShort?: InputMaybe<Scalars['Boolean']['input']>;
  language?: InputMaybe<Scalars['ID']['input']>;
  license?: InputMaybe<Scalars['ID']['input']>;
  media?: InputMaybe<Scalars['ID']['input']>;
  mediaMetadata?: InputMaybe<Scalars['ID']['input']>;
  nft?: InputMaybe<Scalars['ID']['input']>;
  publishedBeforeJoystream?: InputMaybe<Scalars['DateTime']['input']>;
  reactionsCount?: InputMaybe<Scalars['Float']['input']>;
  thumbnailPhoto?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  videoStateBloatBond?: InputMaybe<Scalars['String']['input']>;
  ytVideoId?: InputMaybe<Scalars['String']['input']>;
};

export type VideoVisibilitySetByModeratorEventCreateInput = {
  actor: Scalars['JSONObject']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  isHidden: Scalars['Boolean']['input'];
  network: Network;
  rationale: Scalars['String']['input'];
  videoId: Scalars['Float']['input'];
};

export enum VideoVisibilitySetByModeratorEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  IsHiddenAsc = 'isHidden_ASC',
  IsHiddenDesc = 'isHidden_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  VideoIdAsc = 'videoId_ASC',
  VideoIdDesc = 'videoId_DESC'
}

export type VideoVisibilitySetByModeratorEventUpdateInput = {
  actor?: InputMaybe<Scalars['JSONObject']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  isHidden?: InputMaybe<Scalars['Boolean']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  videoId?: InputMaybe<Scalars['Float']['input']>;
};

export type VideoVisibilitySetByModeratorEventWhereInput = {
  AND?: InputMaybe<Array<VideoVisibilitySetByModeratorEventWhereInput>>;
  NOT?: InputMaybe<Array<VideoVisibilitySetByModeratorEventWhereInput>>;
  OR?: InputMaybe<Array<VideoVisibilitySetByModeratorEventWhereInput>>;
  actor_json?: InputMaybe<Scalars['JSONObject']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  isHidden_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isHidden_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoId_eq?: InputMaybe<Scalars['Int']['input']>;
  videoId_gt?: InputMaybe<Scalars['Int']['input']>;
  videoId_gte?: InputMaybe<Scalars['Int']['input']>;
  videoId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  videoId_lt?: InputMaybe<Scalars['Int']['input']>;
  videoId_lte?: InputMaybe<Scalars['Int']['input']>;
};

export type VideoVisibilitySetByModeratorEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VideoWhereInput = {
  AND?: InputMaybe<Array<VideoWhereInput>>;
  NOT?: InputMaybe<Array<VideoWhereInput>>;
  OR?: InputMaybe<Array<VideoWhereInput>>;
  auctionbidcanceledeventvideo_every?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventvideo_none?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidcanceledeventvideo_some?: InputMaybe<AuctionBidCanceledEventWhereInput>;
  auctionbidmadeeventvideo_every?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventvideo_none?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctionbidmadeeventvideo_some?: InputMaybe<AuctionBidMadeEventWhereInput>;
  auctioncanceledeventvideo_every?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventvideo_none?: InputMaybe<AuctionCanceledEventWhereInput>;
  auctioncanceledeventvideo_some?: InputMaybe<AuctionCanceledEventWhereInput>;
  bidmadecompletingauctioneventvideo_every?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventvideo_none?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  bidmadecompletingauctioneventvideo_some?: InputMaybe<BidMadeCompletingAuctionEventWhereInput>;
  buynowcanceledeventvideo_every?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventvideo_none?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowcanceledeventvideo_some?: InputMaybe<BuyNowCanceledEventWhereInput>;
  buynowpriceupdatedeventvideo_every?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventvideo_none?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  buynowpriceupdatedeventvideo_some?: InputMaybe<BuyNowPriceUpdatedEventWhereInput>;
  category?: InputMaybe<VideoCategoryWhereInput>;
  channel?: InputMaybe<ChannelWhereInput>;
  commentcreatedeventvideo_every?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventvideo_none?: InputMaybe<CommentCreatedEventWhereInput>;
  commentcreatedeventvideo_some?: InputMaybe<CommentCreatedEventWhereInput>;
  commentdeletedeventvideo_every?: InputMaybe<CommentDeletedEventWhereInput>;
  commentdeletedeventvideo_none?: InputMaybe<CommentDeletedEventWhereInput>;
  commentdeletedeventvideo_some?: InputMaybe<CommentDeletedEventWhereInput>;
  commentmoderatedeventvideo_every?: InputMaybe<CommentModeratedEventWhereInput>;
  commentmoderatedeventvideo_none?: InputMaybe<CommentModeratedEventWhereInput>;
  commentmoderatedeventvideo_some?: InputMaybe<CommentModeratedEventWhereInput>;
  commentpinnedeventvideo_every?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventvideo_none?: InputMaybe<CommentPinnedEventWhereInput>;
  commentpinnedeventvideo_some?: InputMaybe<CommentPinnedEventWhereInput>;
  commentreactedeventvideo_every?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventvideo_none?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactedeventvideo_some?: InputMaybe<CommentReactedEventWhereInput>;
  commentreactionscountbyreactionidvideo_every?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  commentreactionscountbyreactionidvideo_none?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  commentreactionscountbyreactionidvideo_some?: InputMaybe<CommentReactionsCountByReactionIdWhereInput>;
  commentreactionvideo_every?: InputMaybe<CommentReactionWhereInput>;
  commentreactionvideo_none?: InputMaybe<CommentReactionWhereInput>;
  commentreactionvideo_some?: InputMaybe<CommentReactionWhereInput>;
  commentsCount_eq?: InputMaybe<Scalars['Int']['input']>;
  commentsCount_gt?: InputMaybe<Scalars['Int']['input']>;
  commentsCount_gte?: InputMaybe<Scalars['Int']['input']>;
  commentsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  commentsCount_lt?: InputMaybe<Scalars['Int']['input']>;
  commentsCount_lte?: InputMaybe<Scalars['Int']['input']>;
  comments_every?: InputMaybe<CommentWhereInput>;
  comments_none?: InputMaybe<CommentWhereInput>;
  comments_some?: InputMaybe<CommentWhereInput>;
  commenttextupdatedeventvideo_every?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  commenttextupdatedeventvideo_none?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  commenttextupdatedeventvideo_some?: InputMaybe<CommentTextUpdatedEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  createdInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  duration_eq?: InputMaybe<Scalars['Int']['input']>;
  duration_gt?: InputMaybe<Scalars['Int']['input']>;
  duration_gte?: InputMaybe<Scalars['Int']['input']>;
  duration_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  duration_lt?: InputMaybe<Scalars['Int']['input']>;
  duration_lte?: InputMaybe<Scalars['Int']['input']>;
  englishauctionsettledeventvideo_every?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventvideo_none?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionsettledeventvideo_some?: InputMaybe<EnglishAuctionSettledEventWhereInput>;
  englishauctionstartedeventvideo_every?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventvideo_none?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  englishauctionstartedeventvideo_some?: InputMaybe<EnglishAuctionStartedEventWhereInput>;
  entryApp?: InputMaybe<AppWhereInput>;
  hasMarketing_eq?: InputMaybe<Scalars['Boolean']['input']>;
  hasMarketing_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isCensored_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCensored_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isCommentSectionEnabled_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isCommentSectionEnabled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isExplicit_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isExplicit_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isPublic_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isPublic_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isReactionFeatureEnabled_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isReactionFeatureEnabled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isShort_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isShort_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  language?: InputMaybe<LanguageWhereInput>;
  license?: InputMaybe<LicenseWhereInput>;
  media?: InputMaybe<StorageDataObjectWhereInput>;
  mediaMetadata?: InputMaybe<VideoMediaMetadataWhereInput>;
  nft?: InputMaybe<OwnedNftWhereInput>;
  nftboughteventvideo_every?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventvideo_none?: InputMaybe<NftBoughtEventWhereInput>;
  nftboughteventvideo_some?: InputMaybe<NftBoughtEventWhereInput>;
  nftissuedeventvideo_every?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventvideo_none?: InputMaybe<NftIssuedEventWhereInput>;
  nftissuedeventvideo_some?: InputMaybe<NftIssuedEventWhereInput>;
  nftsellordermadeeventvideo_every?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventvideo_none?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftsellordermadeeventvideo_some?: InputMaybe<NftSellOrderMadeEventWhereInput>;
  nftslingedbacktotheoriginalartisteventvideo_every?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventvideo_none?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  nftslingedbacktotheoriginalartisteventvideo_some?: InputMaybe<NftSlingedBackToTheOriginalArtistEventWhereInput>;
  offeracceptedeventvideo_every?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventvideo_none?: InputMaybe<OfferAcceptedEventWhereInput>;
  offeracceptedeventvideo_some?: InputMaybe<OfferAcceptedEventWhereInput>;
  offercanceledeventvideo_every?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventvideo_none?: InputMaybe<OfferCanceledEventWhereInput>;
  offercanceledeventvideo_some?: InputMaybe<OfferCanceledEventWhereInput>;
  offerstartedeventvideo_every?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventvideo_none?: InputMaybe<OfferStartedEventWhereInput>;
  offerstartedeventvideo_some?: InputMaybe<OfferStartedEventWhereInput>;
  openauctionbidacceptedeventvideo_every?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventvideo_none?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionbidacceptedeventvideo_some?: InputMaybe<OpenAuctionBidAcceptedEventWhereInput>;
  openauctionstartedeventvideo_every?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventvideo_none?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  openauctionstartedeventvideo_some?: InputMaybe<OpenAuctionStartedEventWhereInput>;
  pinnedComment?: InputMaybe<CommentWhereInput>;
  publishedBeforeJoystream_eq?: InputMaybe<Scalars['DateTime']['input']>;
  publishedBeforeJoystream_gt?: InputMaybe<Scalars['DateTime']['input']>;
  publishedBeforeJoystream_gte?: InputMaybe<Scalars['DateTime']['input']>;
  publishedBeforeJoystream_lt?: InputMaybe<Scalars['DateTime']['input']>;
  publishedBeforeJoystream_lte?: InputMaybe<Scalars['DateTime']['input']>;
  reactionsCountByReactionId_every?: InputMaybe<VideoReactionsCountByReactionTypeWhereInput>;
  reactionsCountByReactionId_none?: InputMaybe<VideoReactionsCountByReactionTypeWhereInput>;
  reactionsCountByReactionId_some?: InputMaybe<VideoReactionsCountByReactionTypeWhereInput>;
  reactionsCount_eq?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_gt?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_gte?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  reactionsCount_lt?: InputMaybe<Scalars['Int']['input']>;
  reactionsCount_lte?: InputMaybe<Scalars['Int']['input']>;
  reactions_every?: InputMaybe<VideoReactionWhereInput>;
  reactions_none?: InputMaybe<VideoReactionWhereInput>;
  reactions_some?: InputMaybe<VideoReactionWhereInput>;
  subtitles_every?: InputMaybe<VideoSubtitleWhereInput>;
  subtitles_none?: InputMaybe<VideoSubtitleWhereInput>;
  subtitles_some?: InputMaybe<VideoSubtitleWhereInput>;
  thumbnailPhoto?: InputMaybe<StorageDataObjectWhereInput>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  videoStateBloatBond_eq?: InputMaybe<Scalars['BigInt']['input']>;
  videoStateBloatBond_gt?: InputMaybe<Scalars['BigInt']['input']>;
  videoStateBloatBond_gte?: InputMaybe<Scalars['BigInt']['input']>;
  videoStateBloatBond_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  videoStateBloatBond_lt?: InputMaybe<Scalars['BigInt']['input']>;
  videoStateBloatBond_lte?: InputMaybe<Scalars['BigInt']['input']>;
  videoreactedeventvideo_every?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventvideo_none?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactedeventvideo_some?: InputMaybe<VideoReactedEventWhereInput>;
  videoreactionspreferenceeventvideo_every?: InputMaybe<VideoReactionsPreferenceEventWhereInput>;
  videoreactionspreferenceeventvideo_none?: InputMaybe<VideoReactionsPreferenceEventWhereInput>;
  videoreactionspreferenceeventvideo_some?: InputMaybe<VideoReactionsPreferenceEventWhereInput>;
  ytVideoId_contains?: InputMaybe<Scalars['String']['input']>;
  ytVideoId_endsWith?: InputMaybe<Scalars['String']['input']>;
  ytVideoId_eq?: InputMaybe<Scalars['String']['input']>;
  ytVideoId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  ytVideoId_startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type VideoWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VoteCastEventCreateInput = {
  castVote: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum VoteCastEventOrderByInput {
  CastVoteAsc = 'castVote_ASC',
  CastVoteDesc = 'castVote_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VoteCastEventUpdateInput = {
  castVote?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type VoteCastEventWhereInput = {
  AND?: InputMaybe<Array<VoteCastEventWhereInput>>;
  NOT?: InputMaybe<Array<VoteCastEventWhereInput>>;
  OR?: InputMaybe<Array<VoteCastEventWhereInput>>;
  castVote?: InputMaybe<CastVoteWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type VoteCastEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VoteRevealedEventCreateInput = {
  castVote: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum VoteRevealedEventOrderByInput {
  CastVoteAsc = 'castVote_ASC',
  CastVoteDesc = 'castVote_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VoteRevealedEventUpdateInput = {
  castVote?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type VoteRevealedEventWhereInput = {
  AND?: InputMaybe<Array<VoteRevealedEventWhereInput>>;
  NOT?: InputMaybe<Array<VoteRevealedEventWhereInput>>;
  OR?: InputMaybe<Array<VoteRevealedEventWhereInput>>;
  castVote?: InputMaybe<CastVoteWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type VoteRevealedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type VotingPeriodStartedEventCreateInput = {
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  numOfCandidates: Scalars['String']['input'];
};

export enum VotingPeriodStartedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NumOfCandidatesAsc = 'numOfCandidates_ASC',
  NumOfCandidatesDesc = 'numOfCandidates_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type VotingPeriodStartedEventUpdateInput = {
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  numOfCandidates?: InputMaybe<Scalars['String']['input']>;
};

export type VotingPeriodStartedEventWhereInput = {
  AND?: InputMaybe<Array<VotingPeriodStartedEventWhereInput>>;
  NOT?: InputMaybe<Array<VotingPeriodStartedEventWhereInput>>;
  OR?: InputMaybe<Array<VotingPeriodStartedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  numOfCandidates_eq?: InputMaybe<Scalars['BigInt']['input']>;
  numOfCandidates_gt?: InputMaybe<Scalars['BigInt']['input']>;
  numOfCandidates_gte?: InputMaybe<Scalars['BigInt']['input']>;
  numOfCandidates_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  numOfCandidates_lt?: InputMaybe<Scalars['BigInt']['input']>;
  numOfCandidates_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type VotingPeriodStartedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkEntrantFundsWithdrawnEventCreateInput = {
  entry: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum WorkEntrantFundsWithdrawnEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkEntrantFundsWithdrawnEventUpdateInput = {
  entry?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type WorkEntrantFundsWithdrawnEventWhereInput = {
  AND?: InputMaybe<Array<WorkEntrantFundsWithdrawnEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkEntrantFundsWithdrawnEventWhereInput>>;
  OR?: InputMaybe<Array<WorkEntrantFundsWithdrawnEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  entry?: InputMaybe<BountyEntryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkEntrantFundsWithdrawnEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkEntryAnnouncedEventCreateInput = {
  entry: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum WorkEntryAnnouncedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkEntryAnnouncedEventUpdateInput = {
  entry?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type WorkEntryAnnouncedEventWhereInput = {
  AND?: InputMaybe<Array<WorkEntryAnnouncedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkEntryAnnouncedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkEntryAnnouncedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  entry?: InputMaybe<BountyEntryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkEntryAnnouncedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkEntrySlashedEventCreateInput = {
  entry: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum WorkEntrySlashedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkEntrySlashedEventUpdateInput = {
  entry?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type WorkEntrySlashedEventWhereInput = {
  AND?: InputMaybe<Array<WorkEntrySlashedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkEntrySlashedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkEntrySlashedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  entry?: InputMaybe<BountyEntryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkEntrySlashedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkEntryWithdrawnEventCreateInput = {
  entry: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
};

export enum WorkEntryWithdrawnEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkEntryWithdrawnEventUpdateInput = {
  entry?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
};

export type WorkEntryWithdrawnEventWhereInput = {
  AND?: InputMaybe<Array<WorkEntryWithdrawnEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkEntryWithdrawnEventWhereInput>>;
  OR?: InputMaybe<Array<WorkEntryWithdrawnEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  entry?: InputMaybe<BountyEntryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkEntryWithdrawnEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkSubmittedEventCreateInput = {
  bounty: Scalars['ID']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  entry: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  title?: InputMaybe<Scalars['String']['input']>;
};

export enum WorkSubmittedEventOrderByInput {
  BountyAsc = 'bounty_ASC',
  BountyDesc = 'bounty_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkSubmittedEventUpdateInput = {
  bounty?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  entry?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type WorkSubmittedEventWhereInput = {
  AND?: InputMaybe<Array<WorkSubmittedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkSubmittedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkSubmittedEventWhereInput>>;
  bounty?: InputMaybe<BountyWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  entry?: InputMaybe<BountyEntryWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkSubmittedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkerCreateInput = {
  application: Scalars['ID']['input'];
  entry: Scalars['ID']['input'];
  group: Scalars['ID']['input'];
  groupId: Scalars['String']['input'];
  isActive: Scalars['Boolean']['input'];
  isLead: Scalars['Boolean']['input'];
  membership: Scalars['ID']['input'];
  missingRewardAmount?: InputMaybe<Scalars['String']['input']>;
  rewardAccount: Scalars['String']['input'];
  rewardPerBlock: Scalars['String']['input'];
  roleAccount: Scalars['String']['input'];
  runtimeId: Scalars['Float']['input'];
  stake: Scalars['String']['input'];
  stakeAccount: Scalars['String']['input'];
  status: Scalars['JSONObject']['input'];
  storage?: InputMaybe<Scalars['String']['input']>;
};

export type WorkerExitedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  worker: Scalars['ID']['input'];
};

export enum WorkerExitedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type WorkerExitedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type WorkerExitedEventWhereInput = {
  AND?: InputMaybe<Array<WorkerExitedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkerExitedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkerExitedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type WorkerExitedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum WorkerOrderByInput {
  ApplicationAsc = 'application_ASC',
  ApplicationDesc = 'application_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  EntryAsc = 'entry_ASC',
  EntryDesc = 'entry_DESC',
  GroupIdAsc = 'groupId_ASC',
  GroupIdDesc = 'groupId_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  IsActiveAsc = 'isActive_ASC',
  IsActiveDesc = 'isActive_DESC',
  IsLeadAsc = 'isLead_ASC',
  IsLeadDesc = 'isLead_DESC',
  MembershipAsc = 'membership_ASC',
  MembershipDesc = 'membership_DESC',
  MissingRewardAmountAsc = 'missingRewardAmount_ASC',
  MissingRewardAmountDesc = 'missingRewardAmount_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  RewardPerBlockAsc = 'rewardPerBlock_ASC',
  RewardPerBlockDesc = 'rewardPerBlock_DESC',
  RoleAccountAsc = 'roleAccount_ASC',
  RoleAccountDesc = 'roleAccount_DESC',
  RuntimeIdAsc = 'runtimeId_ASC',
  RuntimeIdDesc = 'runtimeId_DESC',
  StakeAccountAsc = 'stakeAccount_ASC',
  StakeAccountDesc = 'stakeAccount_DESC',
  StakeAsc = 'stake_ASC',
  StakeDesc = 'stake_DESC',
  StorageAsc = 'storage_ASC',
  StorageDesc = 'storage_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkerRewardAccountUpdatedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newRewardAccount: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum WorkerRewardAccountUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewRewardAccountAsc = 'newRewardAccount_ASC',
  NewRewardAccountDesc = 'newRewardAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type WorkerRewardAccountUpdatedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newRewardAccount?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type WorkerRewardAccountUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<WorkerRewardAccountUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkerRewardAccountUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkerRewardAccountUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newRewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  newRewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  newRewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  newRewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newRewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type WorkerRewardAccountUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkerRewardAmountUpdatedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newRewardPerBlock: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum WorkerRewardAmountUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewRewardPerBlockAsc = 'newRewardPerBlock_ASC',
  NewRewardPerBlockDesc = 'newRewardPerBlock_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type WorkerRewardAmountUpdatedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newRewardPerBlock?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type WorkerRewardAmountUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<WorkerRewardAmountUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkerRewardAmountUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkerRewardAmountUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newRewardPerBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  newRewardPerBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  newRewardPerBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  newRewardPerBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  newRewardPerBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  newRewardPerBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type WorkerRewardAmountUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkerRoleAccountUpdatedEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  newRoleAccount: Scalars['String']['input'];
  worker: Scalars['ID']['input'];
};

export enum WorkerRoleAccountUpdatedEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  NewRoleAccountAsc = 'newRoleAccount_ASC',
  NewRoleAccountDesc = 'newRoleAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type WorkerRoleAccountUpdatedEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  newRoleAccount?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type WorkerRoleAccountUpdatedEventWhereInput = {
  AND?: InputMaybe<Array<WorkerRoleAccountUpdatedEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkerRoleAccountUpdatedEventWhereInput>>;
  OR?: InputMaybe<Array<WorkerRoleAccountUpdatedEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  newRoleAccount_contains?: InputMaybe<Scalars['String']['input']>;
  newRoleAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  newRoleAccount_eq?: InputMaybe<Scalars['String']['input']>;
  newRoleAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoleAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type WorkerRoleAccountUpdatedEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkerStartedLeavingEventCreateInput = {
  group: Scalars['ID']['input'];
  inBlock: Scalars['Float']['input'];
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock: Scalars['Float']['input'];
  network: Network;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker: Scalars['ID']['input'];
};

export enum WorkerStartedLeavingEventOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  InBlockAsc = 'inBlock_ASC',
  InBlockDesc = 'inBlock_DESC',
  InExtrinsicAsc = 'inExtrinsic_ASC',
  InExtrinsicDesc = 'inExtrinsic_DESC',
  IndexInBlockAsc = 'indexInBlock_ASC',
  IndexInBlockDesc = 'indexInBlock_DESC',
  NetworkAsc = 'network_ASC',
  NetworkDesc = 'network_DESC',
  RationaleAsc = 'rationale_ASC',
  RationaleDesc = 'rationale_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC',
  WorkerAsc = 'worker_ASC',
  WorkerDesc = 'worker_DESC'
}

export type WorkerStartedLeavingEventUpdateInput = {
  group?: InputMaybe<Scalars['ID']['input']>;
  inBlock?: InputMaybe<Scalars['Float']['input']>;
  inExtrinsic?: InputMaybe<Scalars['String']['input']>;
  indexInBlock?: InputMaybe<Scalars['Float']['input']>;
  network?: InputMaybe<Network>;
  rationale?: InputMaybe<Scalars['String']['input']>;
  worker?: InputMaybe<Scalars['ID']['input']>;
};

export type WorkerStartedLeavingEventWhereInput = {
  AND?: InputMaybe<Array<WorkerStartedLeavingEventWhereInput>>;
  NOT?: InputMaybe<Array<WorkerStartedLeavingEventWhereInput>>;
  OR?: InputMaybe<Array<WorkerStartedLeavingEventWhereInput>>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  inBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  inBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  inBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  inBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  inExtrinsic_contains?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_endsWith?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_eq?: InputMaybe<Scalars['String']['input']>;
  inExtrinsic_in?: InputMaybe<Array<Scalars['String']['input']>>;
  inExtrinsic_startsWith?: InputMaybe<Scalars['String']['input']>;
  indexInBlock_eq?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  indexInBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  indexInBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  network_eq?: InputMaybe<Network>;
  network_in?: InputMaybe<Array<Network>>;
  rationale_contains?: InputMaybe<Scalars['String']['input']>;
  rationale_endsWith?: InputMaybe<Scalars['String']['input']>;
  rationale_eq?: InputMaybe<Scalars['String']['input']>;
  rationale_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rationale_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  worker?: InputMaybe<WorkerWhereInput>;
};

export type WorkerStartedLeavingEventWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkerUpdateInput = {
  application?: InputMaybe<Scalars['ID']['input']>;
  entry?: InputMaybe<Scalars['ID']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isLead?: InputMaybe<Scalars['Boolean']['input']>;
  membership?: InputMaybe<Scalars['ID']['input']>;
  missingRewardAmount?: InputMaybe<Scalars['String']['input']>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
  rewardPerBlock?: InputMaybe<Scalars['String']['input']>;
  roleAccount?: InputMaybe<Scalars['String']['input']>;
  runtimeId?: InputMaybe<Scalars['Float']['input']>;
  stake?: InputMaybe<Scalars['String']['input']>;
  stakeAccount?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  storage?: InputMaybe<Scalars['String']['input']>;
};

export type WorkerWhereInput = {
  AND?: InputMaybe<Array<WorkerWhereInput>>;
  NOT?: InputMaybe<Array<WorkerWhereInput>>;
  OR?: InputMaybe<Array<WorkerWhereInput>>;
  application?: InputMaybe<WorkingGroupApplicationWhereInput>;
  categoryarchivalstatusupdatedeventactor_every?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categoryarchivalstatusupdatedeventactor_none?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categoryarchivalstatusupdatedeventactor_some?: InputMaybe<CategoryArchivalStatusUpdatedEventWhereInput>;
  categorydeletedeventactor_every?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorydeletedeventactor_none?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorydeletedeventactor_some?: InputMaybe<CategoryDeletedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventmoderator_every?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventmoderator_none?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorymembershipofmoderatorupdatedeventmoderator_some?: InputMaybe<CategoryMembershipOfModeratorUpdatedEventWhereInput>;
  categorystickythreadupdateeventactor_every?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  categorystickythreadupdateeventactor_none?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  categorystickythreadupdateeventactor_some?: InputMaybe<CategoryStickyThreadUpdateEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  entry?: InputMaybe<OpeningFilledEventWhereInput>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  groupId_contains?: InputMaybe<Scalars['String']['input']>;
  groupId_endsWith?: InputMaybe<Scalars['String']['input']>;
  groupId_eq?: InputMaybe<Scalars['String']['input']>;
  groupId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  groupId_startsWith?: InputMaybe<Scalars['String']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  isActive_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isActive_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  isLead_eq?: InputMaybe<Scalars['Boolean']['input']>;
  isLead_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  leaderseteventworker_every?: InputMaybe<LeaderSetEventWhereInput>;
  leaderseteventworker_none?: InputMaybe<LeaderSetEventWhereInput>;
  leaderseteventworker_some?: InputMaybe<LeaderSetEventWhereInput>;
  leaderunseteventleader_every?: InputMaybe<LeaderUnsetEventWhereInput>;
  leaderunseteventleader_none?: InputMaybe<LeaderUnsetEventWhereInput>;
  leaderunseteventleader_some?: InputMaybe<LeaderUnsetEventWhereInput>;
  managedForumCategories_every?: InputMaybe<ForumCategoryWhereInput>;
  managedForumCategories_none?: InputMaybe<ForumCategoryWhereInput>;
  managedForumCategories_some?: InputMaybe<ForumCategoryWhereInput>;
  membership?: InputMaybe<MembershipWhereInput>;
  memberverificationstatusupdatedeventworker_every?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  memberverificationstatusupdatedeventworker_none?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  memberverificationstatusupdatedeventworker_some?: InputMaybe<MemberVerificationStatusUpdatedEventWhereInput>;
  missingRewardAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  missingRewardAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  missingRewardAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  missingRewardAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  missingRewardAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  missingRewardAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  newmissedrewardlevelreachedeventworker_every?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  newmissedrewardlevelreachedeventworker_none?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  newmissedrewardlevelreachedeventworker_some?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  payouts_every?: InputMaybe<RewardPaidEventWhereInput>;
  payouts_none?: InputMaybe<RewardPaidEventWhereInput>;
  payouts_some?: InputMaybe<RewardPaidEventWhereInput>;
  postmoderatedeventactor_every?: InputMaybe<PostModeratedEventWhereInput>;
  postmoderatedeventactor_none?: InputMaybe<PostModeratedEventWhereInput>;
  postmoderatedeventactor_some?: InputMaybe<PostModeratedEventWhereInput>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  rewardPerBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  rewardPerBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  roleAccount_contains?: InputMaybe<Scalars['String']['input']>;
  roleAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  roleAccount_eq?: InputMaybe<Scalars['String']['input']>;
  roleAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  roleAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  runtimeId_eq?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gte?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  runtimeId_lt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_lte?: InputMaybe<Scalars['Int']['input']>;
  slashes_every?: InputMaybe<StakeSlashedEventWhereInput>;
  slashes_none?: InputMaybe<StakeSlashedEventWhereInput>;
  slashes_some?: InputMaybe<StakeSlashedEventWhereInput>;
  stakeAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakeAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakeAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakeAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakeAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  stake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stakedecreasedeventworker_every?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakedecreasedeventworker_none?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakedecreasedeventworker_some?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakeincreasedeventworker_every?: InputMaybe<StakeIncreasedEventWhereInput>;
  stakeincreasedeventworker_none?: InputMaybe<StakeIncreasedEventWhereInput>;
  stakeincreasedeventworker_some?: InputMaybe<StakeIncreasedEventWhereInput>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  storage_contains?: InputMaybe<Scalars['String']['input']>;
  storage_endsWith?: InputMaybe<Scalars['String']['input']>;
  storage_eq?: InputMaybe<Scalars['String']['input']>;
  storage_in?: InputMaybe<Array<Scalars['String']['input']>>;
  storage_startsWith?: InputMaybe<Scalars['String']['input']>;
  terminatedleadereventworker_every?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedleadereventworker_none?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedleadereventworker_some?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedworkereventworker_every?: InputMaybe<TerminatedWorkerEventWhereInput>;
  terminatedworkereventworker_none?: InputMaybe<TerminatedWorkerEventWhereInput>;
  terminatedworkereventworker_some?: InputMaybe<TerminatedWorkerEventWhereInput>;
  threadmoderatedeventactor_every?: InputMaybe<ThreadModeratedEventWhereInput>;
  threadmoderatedeventactor_none?: InputMaybe<ThreadModeratedEventWhereInput>;
  threadmoderatedeventactor_some?: InputMaybe<ThreadModeratedEventWhereInput>;
  threadmovedeventactor_every?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventactor_none?: InputMaybe<ThreadMovedEventWhereInput>;
  threadmovedeventactor_some?: InputMaybe<ThreadMovedEventWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workerexitedeventworker_every?: InputMaybe<WorkerExitedEventWhereInput>;
  workerexitedeventworker_none?: InputMaybe<WorkerExitedEventWhereInput>;
  workerexitedeventworker_some?: InputMaybe<WorkerExitedEventWhereInput>;
  workerrewardaccountupdatedeventworker_every?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardaccountupdatedeventworker_none?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardaccountupdatedeventworker_some?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventworker_every?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventworker_none?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventworker_some?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventworker_every?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventworker_none?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventworker_some?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workerstartedleavingeventworker_every?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workerstartedleavingeventworker_none?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workerstartedleavingeventworker_some?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workinggroupleader_every?: InputMaybe<WorkingGroupWhereInput>;
  workinggroupleader_none?: InputMaybe<WorkingGroupWhereInput>;
  workinggroupleader_some?: InputMaybe<WorkingGroupWhereInput>;
};

export type WorkerWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkingGroupApplicationCreateInput = {
  applicant: Scalars['ID']['input'];
  opening: Scalars['ID']['input'];
  rewardAccount: Scalars['String']['input'];
  roleAccount: Scalars['String']['input'];
  runtimeId: Scalars['Float']['input'];
  stake: Scalars['String']['input'];
  stakingAccount: Scalars['String']['input'];
  status: Scalars['JSONObject']['input'];
};

export enum WorkingGroupApplicationOrderByInput {
  ApplicantAsc = 'applicant_ASC',
  ApplicantDesc = 'applicant_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  OpeningAsc = 'opening_ASC',
  OpeningDesc = 'opening_DESC',
  RewardAccountAsc = 'rewardAccount_ASC',
  RewardAccountDesc = 'rewardAccount_DESC',
  RoleAccountAsc = 'roleAccount_ASC',
  RoleAccountDesc = 'roleAccount_DESC',
  RuntimeIdAsc = 'runtimeId_ASC',
  RuntimeIdDesc = 'runtimeId_DESC',
  StakeAsc = 'stake_ASC',
  StakeDesc = 'stake_DESC',
  StakingAccountAsc = 'stakingAccount_ASC',
  StakingAccountDesc = 'stakingAccount_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkingGroupApplicationUpdateInput = {
  applicant?: InputMaybe<Scalars['ID']['input']>;
  opening?: InputMaybe<Scalars['ID']['input']>;
  rewardAccount?: InputMaybe<Scalars['String']['input']>;
  roleAccount?: InputMaybe<Scalars['String']['input']>;
  runtimeId?: InputMaybe<Scalars['Float']['input']>;
  stake?: InputMaybe<Scalars['String']['input']>;
  stakingAccount?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
};

export type WorkingGroupApplicationWhereInput = {
  AND?: InputMaybe<Array<WorkingGroupApplicationWhereInput>>;
  NOT?: InputMaybe<Array<WorkingGroupApplicationWhereInput>>;
  OR?: InputMaybe<Array<WorkingGroupApplicationWhereInput>>;
  answers_every?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  answers_none?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  answers_some?: InputMaybe<ApplicationFormQuestionAnswerWhereInput>;
  applicant?: InputMaybe<MembershipWhereInput>;
  applicationwithdrawneventapplication_every?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  applicationwithdrawneventapplication_none?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  applicationwithdrawneventapplication_some?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  opening?: InputMaybe<WorkingGroupOpeningWhereInput>;
  rewardAccount_contains?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_eq?: InputMaybe<Scalars['String']['input']>;
  rewardAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  rewardAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  roleAccount_contains?: InputMaybe<Scalars['String']['input']>;
  roleAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  roleAccount_eq?: InputMaybe<Scalars['String']['input']>;
  roleAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  roleAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  runtimeId_eq?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gte?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  runtimeId_lt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_lte?: InputMaybe<Scalars['Int']['input']>;
  stake_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stake_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stake_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stake_lte?: InputMaybe<Scalars['BigInt']['input']>;
  stakingAccount_contains?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_endsWith?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_eq?: InputMaybe<Scalars['String']['input']>;
  stakingAccount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  stakingAccount_startsWith?: InputMaybe<Scalars['String']['input']>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workerapplication_every?: InputMaybe<WorkerWhereInput>;
  workerapplication_none?: InputMaybe<WorkerWhereInput>;
  workerapplication_some?: InputMaybe<WorkerWhereInput>;
};

export type WorkingGroupApplicationWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkingGroupCreateInput = {
  budget: Scalars['String']['input'];
  leader?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
};

export type WorkingGroupMetadataCreateInput = {
  about?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  group: Scalars['ID']['input'];
  setInEvent: Scalars['ID']['input'];
  status?: InputMaybe<Scalars['String']['input']>;
  statusMessage?: InputMaybe<Scalars['String']['input']>;
};

export enum WorkingGroupMetadataOrderByInput {
  AboutAsc = 'about_ASC',
  AboutDesc = 'about_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  SetInEventAsc = 'setInEvent_ASC',
  SetInEventDesc = 'setInEvent_DESC',
  StatusMessageAsc = 'statusMessage_ASC',
  StatusMessageDesc = 'statusMessage_DESC',
  StatusAsc = 'status_ASC',
  StatusDesc = 'status_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkingGroupMetadataUpdateInput = {
  about?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  setInEvent?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusMessage?: InputMaybe<Scalars['String']['input']>;
};

export type WorkingGroupMetadataWhereInput = {
  AND?: InputMaybe<Array<WorkingGroupMetadataWhereInput>>;
  NOT?: InputMaybe<Array<WorkingGroupMetadataWhereInput>>;
  OR?: InputMaybe<Array<WorkingGroupMetadataWhereInput>>;
  about_contains?: InputMaybe<Scalars['String']['input']>;
  about_endsWith?: InputMaybe<Scalars['String']['input']>;
  about_eq?: InputMaybe<Scalars['String']['input']>;
  about_in?: InputMaybe<Array<Scalars['String']['input']>>;
  about_startsWith?: InputMaybe<Scalars['String']['input']>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  setInEvent?: InputMaybe<StatusTextChangedEventWhereInput>;
  statusMessage_contains?: InputMaybe<Scalars['String']['input']>;
  statusMessage_endsWith?: InputMaybe<Scalars['String']['input']>;
  statusMessage_eq?: InputMaybe<Scalars['String']['input']>;
  statusMessage_in?: InputMaybe<Array<Scalars['String']['input']>>;
  statusMessage_startsWith?: InputMaybe<Scalars['String']['input']>;
  status_contains?: InputMaybe<Scalars['String']['input']>;
  status_endsWith?: InputMaybe<Scalars['String']['input']>;
  status_eq?: InputMaybe<Scalars['String']['input']>;
  status_in?: InputMaybe<Array<Scalars['String']['input']>>;
  status_startsWith?: InputMaybe<Scalars['String']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workinggroupmetadata_every?: InputMaybe<WorkingGroupWhereInput>;
  workinggroupmetadata_none?: InputMaybe<WorkingGroupWhereInput>;
  workinggroupmetadata_some?: InputMaybe<WorkingGroupWhereInput>;
};

export type WorkingGroupMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export type WorkingGroupOpeningCreateInput = {
  createdAt: Scalars['DateTime']['input'];
  group: Scalars['ID']['input'];
  metadata: Scalars['ID']['input'];
  rewardPerBlock: Scalars['String']['input'];
  runtimeId: Scalars['Float']['input'];
  stakeAmount: Scalars['String']['input'];
  status: Scalars['JSONObject']['input'];
  type: WorkingGroupOpeningType;
  unstakingPeriod: Scalars['Float']['input'];
};

export type WorkingGroupOpeningMetadataCreateInput = {
  applicationDetails?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expectedEnding?: InputMaybe<Scalars['DateTime']['input']>;
  hiringLimit?: InputMaybe<Scalars['Float']['input']>;
  originallyValid: Scalars['Boolean']['input'];
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export enum WorkingGroupOpeningMetadataOrderByInput {
  ApplicationDetailsAsc = 'applicationDetails_ASC',
  ApplicationDetailsDesc = 'applicationDetails_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  DescriptionAsc = 'description_ASC',
  DescriptionDesc = 'description_DESC',
  ExpectedEndingAsc = 'expectedEnding_ASC',
  ExpectedEndingDesc = 'expectedEnding_DESC',
  HiringLimitAsc = 'hiringLimit_ASC',
  HiringLimitDesc = 'hiringLimit_DESC',
  OriginallyValidAsc = 'originallyValid_ASC',
  OriginallyValidDesc = 'originallyValid_DESC',
  ShortDescriptionAsc = 'shortDescription_ASC',
  ShortDescriptionDesc = 'shortDescription_DESC',
  TitleAsc = 'title_ASC',
  TitleDesc = 'title_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkingGroupOpeningMetadataUpdateInput = {
  applicationDetails?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  expectedEnding?: InputMaybe<Scalars['DateTime']['input']>;
  hiringLimit?: InputMaybe<Scalars['Float']['input']>;
  originallyValid?: InputMaybe<Scalars['Boolean']['input']>;
  shortDescription?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type WorkingGroupOpeningMetadataWhereInput = {
  AND?: InputMaybe<Array<WorkingGroupOpeningMetadataWhereInput>>;
  NOT?: InputMaybe<Array<WorkingGroupOpeningMetadataWhereInput>>;
  OR?: InputMaybe<Array<WorkingGroupOpeningMetadataWhereInput>>;
  applicationDetails_contains?: InputMaybe<Scalars['String']['input']>;
  applicationDetails_endsWith?: InputMaybe<Scalars['String']['input']>;
  applicationDetails_eq?: InputMaybe<Scalars['String']['input']>;
  applicationDetails_in?: InputMaybe<Array<Scalars['String']['input']>>;
  applicationDetails_startsWith?: InputMaybe<Scalars['String']['input']>;
  applicationFormQuestions_every?: InputMaybe<ApplicationFormQuestionWhereInput>;
  applicationFormQuestions_none?: InputMaybe<ApplicationFormQuestionWhereInput>;
  applicationFormQuestions_some?: InputMaybe<ApplicationFormQuestionWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  description_contains?: InputMaybe<Scalars['String']['input']>;
  description_endsWith?: InputMaybe<Scalars['String']['input']>;
  description_eq?: InputMaybe<Scalars['String']['input']>;
  description_in?: InputMaybe<Array<Scalars['String']['input']>>;
  description_startsWith?: InputMaybe<Scalars['String']['input']>;
  expectedEnding_eq?: InputMaybe<Scalars['DateTime']['input']>;
  expectedEnding_gt?: InputMaybe<Scalars['DateTime']['input']>;
  expectedEnding_gte?: InputMaybe<Scalars['DateTime']['input']>;
  expectedEnding_lt?: InputMaybe<Scalars['DateTime']['input']>;
  expectedEnding_lte?: InputMaybe<Scalars['DateTime']['input']>;
  hiringLimit_eq?: InputMaybe<Scalars['Int']['input']>;
  hiringLimit_gt?: InputMaybe<Scalars['Int']['input']>;
  hiringLimit_gte?: InputMaybe<Scalars['Int']['input']>;
  hiringLimit_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  hiringLimit_lt?: InputMaybe<Scalars['Int']['input']>;
  hiringLimit_lte?: InputMaybe<Scalars['Int']['input']>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  originallyValid_eq?: InputMaybe<Scalars['Boolean']['input']>;
  originallyValid_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  shortDescription_contains?: InputMaybe<Scalars['String']['input']>;
  shortDescription_endsWith?: InputMaybe<Scalars['String']['input']>;
  shortDescription_eq?: InputMaybe<Scalars['String']['input']>;
  shortDescription_in?: InputMaybe<Array<Scalars['String']['input']>>;
  shortDescription_startsWith?: InputMaybe<Scalars['String']['input']>;
  title_contains?: InputMaybe<Scalars['String']['input']>;
  title_endsWith?: InputMaybe<Scalars['String']['input']>;
  title_eq?: InputMaybe<Scalars['String']['input']>;
  title_in?: InputMaybe<Array<Scalars['String']['input']>>;
  title_startsWith?: InputMaybe<Scalars['String']['input']>;
  upcomingworkinggroupopeningmetadata_every?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeningmetadata_none?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeningmetadata_some?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  workinggroupopeningmetadata_every?: InputMaybe<WorkingGroupOpeningWhereInput>;
  workinggroupopeningmetadata_none?: InputMaybe<WorkingGroupOpeningWhereInput>;
  workinggroupopeningmetadata_some?: InputMaybe<WorkingGroupOpeningWhereInput>;
};

export type WorkingGroupOpeningMetadataWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum WorkingGroupOpeningOrderByInput {
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  GroupAsc = 'group_ASC',
  GroupDesc = 'group_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  RewardPerBlockAsc = 'rewardPerBlock_ASC',
  RewardPerBlockDesc = 'rewardPerBlock_DESC',
  RuntimeIdAsc = 'runtimeId_ASC',
  RuntimeIdDesc = 'runtimeId_DESC',
  StakeAmountAsc = 'stakeAmount_ASC',
  StakeAmountDesc = 'stakeAmount_DESC',
  TypeAsc = 'type_ASC',
  TypeDesc = 'type_DESC',
  UnstakingPeriodAsc = 'unstakingPeriod_ASC',
  UnstakingPeriodDesc = 'unstakingPeriod_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export enum WorkingGroupOpeningType {
  Leader = 'LEADER',
  Regular = 'REGULAR'
}

export type WorkingGroupOpeningUpdateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  group?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  rewardPerBlock?: InputMaybe<Scalars['String']['input']>;
  runtimeId?: InputMaybe<Scalars['Float']['input']>;
  stakeAmount?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['JSONObject']['input']>;
  type?: InputMaybe<WorkingGroupOpeningType>;
  unstakingPeriod?: InputMaybe<Scalars['Float']['input']>;
};

export type WorkingGroupOpeningWhereInput = {
  AND?: InputMaybe<Array<WorkingGroupOpeningWhereInput>>;
  NOT?: InputMaybe<Array<WorkingGroupOpeningWhereInput>>;
  OR?: InputMaybe<Array<WorkingGroupOpeningWhereInput>>;
  applications_every?: InputMaybe<WorkingGroupApplicationWhereInput>;
  applications_none?: InputMaybe<WorkingGroupApplicationWhereInput>;
  applications_some?: InputMaybe<WorkingGroupApplicationWhereInput>;
  appliedonopeningeventopening_every?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  appliedonopeningeventopening_none?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  appliedonopeningeventopening_some?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  createdInEvent?: InputMaybe<OpeningAddedEventWhereInput>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  group?: InputMaybe<WorkingGroupWhereInput>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  metadata?: InputMaybe<WorkingGroupOpeningMetadataWhereInput>;
  openingcanceledeventopening_every?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingcanceledeventopening_none?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingcanceledeventopening_some?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingfilledeventopening_every?: InputMaybe<OpeningFilledEventWhereInput>;
  openingfilledeventopening_none?: InputMaybe<OpeningFilledEventWhereInput>;
  openingfilledeventopening_some?: InputMaybe<OpeningFilledEventWhereInput>;
  rewardPerBlock_eq?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  rewardPerBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  rewardPerBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  runtimeId_eq?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_gte?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  runtimeId_lt?: InputMaybe<Scalars['Int']['input']>;
  runtimeId_lte?: InputMaybe<Scalars['Int']['input']>;
  stakeAmount_eq?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  stakeAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  stakeAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  status_json?: InputMaybe<Scalars['JSONObject']['input']>;
  type_eq?: InputMaybe<WorkingGroupOpeningType>;
  type_in?: InputMaybe<Array<WorkingGroupOpeningType>>;
  unstakingPeriod_eq?: InputMaybe<Scalars['Int']['input']>;
  unstakingPeriod_gt?: InputMaybe<Scalars['Int']['input']>;
  unstakingPeriod_gte?: InputMaybe<Scalars['Int']['input']>;
  unstakingPeriod_in?: InputMaybe<Array<Scalars['Int']['input']>>;
  unstakingPeriod_lt?: InputMaybe<Scalars['Int']['input']>;
  unstakingPeriod_lte?: InputMaybe<Scalars['Int']['input']>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WorkingGroupOpeningWhereUniqueInput = {
  id: Scalars['ID']['input'];
};

export enum WorkingGroupOrderByInput {
  BudgetAsc = 'budget_ASC',
  BudgetDesc = 'budget_DESC',
  CreatedAtAsc = 'createdAt_ASC',
  CreatedAtDesc = 'createdAt_DESC',
  DeletedAtAsc = 'deletedAt_ASC',
  DeletedAtDesc = 'deletedAt_DESC',
  LeaderAsc = 'leader_ASC',
  LeaderDesc = 'leader_DESC',
  MetadataAsc = 'metadata_ASC',
  MetadataDesc = 'metadata_DESC',
  NameAsc = 'name_ASC',
  NameDesc = 'name_DESC',
  UpdatedAtAsc = 'updatedAt_ASC',
  UpdatedAtDesc = 'updatedAt_DESC'
}

export type WorkingGroupUpdateInput = {
  budget?: InputMaybe<Scalars['String']['input']>;
  leader?: InputMaybe<Scalars['ID']['input']>;
  metadata?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type WorkingGroupWhereInput = {
  AND?: InputMaybe<Array<WorkingGroupWhereInput>>;
  NOT?: InputMaybe<Array<WorkingGroupWhereInput>>;
  OR?: InputMaybe<Array<WorkingGroupWhereInput>>;
  applicationwithdrawneventgroup_every?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  applicationwithdrawneventgroup_none?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  applicationwithdrawneventgroup_some?: InputMaybe<ApplicationWithdrawnEventWhereInput>;
  appliedonopeningeventgroup_every?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  appliedonopeningeventgroup_none?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  appliedonopeningeventgroup_some?: InputMaybe<AppliedOnOpeningEventWhereInput>;
  budget_eq?: InputMaybe<Scalars['BigInt']['input']>;
  budget_gt?: InputMaybe<Scalars['BigInt']['input']>;
  budget_gte?: InputMaybe<Scalars['BigInt']['input']>;
  budget_in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  budget_lt?: InputMaybe<Scalars['BigInt']['input']>;
  budget_lte?: InputMaybe<Scalars['BigInt']['input']>;
  budgetfundedeventgroup_every?: InputMaybe<BudgetFundedEventWhereInput>;
  budgetfundedeventgroup_none?: InputMaybe<BudgetFundedEventWhereInput>;
  budgetfundedeventgroup_some?: InputMaybe<BudgetFundedEventWhereInput>;
  budgetseteventgroup_every?: InputMaybe<BudgetSetEventWhereInput>;
  budgetseteventgroup_none?: InputMaybe<BudgetSetEventWhereInput>;
  budgetseteventgroup_some?: InputMaybe<BudgetSetEventWhereInput>;
  budgetspendingeventgroup_every?: InputMaybe<BudgetSpendingEventWhereInput>;
  budgetspendingeventgroup_none?: InputMaybe<BudgetSpendingEventWhereInput>;
  budgetspendingeventgroup_some?: InputMaybe<BudgetSpendingEventWhereInput>;
  budgetupdatedeventgroup_every?: InputMaybe<BudgetUpdatedEventWhereInput>;
  budgetupdatedeventgroup_none?: InputMaybe<BudgetUpdatedEventWhereInput>;
  budgetupdatedeventgroup_some?: InputMaybe<BudgetUpdatedEventWhereInput>;
  createdAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  createdAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  createdById_eq?: InputMaybe<Scalars['ID']['input']>;
  createdById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  deletedAt_all?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  deletedById_eq?: InputMaybe<Scalars['ID']['input']>;
  deletedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_eq?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  leader?: InputMaybe<WorkerWhereInput>;
  leaderseteventgroup_every?: InputMaybe<LeaderSetEventWhereInput>;
  leaderseteventgroup_none?: InputMaybe<LeaderSetEventWhereInput>;
  leaderseteventgroup_some?: InputMaybe<LeaderSetEventWhereInput>;
  leaderunseteventgroup_every?: InputMaybe<LeaderUnsetEventWhereInput>;
  leaderunseteventgroup_none?: InputMaybe<LeaderUnsetEventWhereInput>;
  leaderunseteventgroup_some?: InputMaybe<LeaderUnsetEventWhereInput>;
  metadata?: InputMaybe<WorkingGroupMetadataWhereInput>;
  name_contains?: InputMaybe<Scalars['String']['input']>;
  name_endsWith?: InputMaybe<Scalars['String']['input']>;
  name_eq?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_startsWith?: InputMaybe<Scalars['String']['input']>;
  newmissedrewardlevelreachedeventgroup_every?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  newmissedrewardlevelreachedeventgroup_none?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  newmissedrewardlevelreachedeventgroup_some?: InputMaybe<NewMissedRewardLevelReachedEventWhereInput>;
  openingaddedeventgroup_every?: InputMaybe<OpeningAddedEventWhereInput>;
  openingaddedeventgroup_none?: InputMaybe<OpeningAddedEventWhereInput>;
  openingaddedeventgroup_some?: InputMaybe<OpeningAddedEventWhereInput>;
  openingcanceledeventgroup_every?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingcanceledeventgroup_none?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingcanceledeventgroup_some?: InputMaybe<OpeningCanceledEventWhereInput>;
  openingfilledeventgroup_every?: InputMaybe<OpeningFilledEventWhereInput>;
  openingfilledeventgroup_none?: InputMaybe<OpeningFilledEventWhereInput>;
  openingfilledeventgroup_some?: InputMaybe<OpeningFilledEventWhereInput>;
  openings_every?: InputMaybe<WorkingGroupOpeningWhereInput>;
  openings_none?: InputMaybe<WorkingGroupOpeningWhereInput>;
  openings_some?: InputMaybe<WorkingGroupOpeningWhereInput>;
  rewardpaideventgroup_every?: InputMaybe<RewardPaidEventWhereInput>;
  rewardpaideventgroup_none?: InputMaybe<RewardPaidEventWhereInput>;
  rewardpaideventgroup_some?: InputMaybe<RewardPaidEventWhereInput>;
  stakedecreasedeventgroup_every?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakedecreasedeventgroup_none?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakedecreasedeventgroup_some?: InputMaybe<StakeDecreasedEventWhereInput>;
  stakeincreasedeventgroup_every?: InputMaybe<StakeIncreasedEventWhereInput>;
  stakeincreasedeventgroup_none?: InputMaybe<StakeIncreasedEventWhereInput>;
  stakeincreasedeventgroup_some?: InputMaybe<StakeIncreasedEventWhereInput>;
  stakeslashedeventgroup_every?: InputMaybe<StakeSlashedEventWhereInput>;
  stakeslashedeventgroup_none?: InputMaybe<StakeSlashedEventWhereInput>;
  stakeslashedeventgroup_some?: InputMaybe<StakeSlashedEventWhereInput>;
  statustextchangedeventgroup_every?: InputMaybe<StatusTextChangedEventWhereInput>;
  statustextchangedeventgroup_none?: InputMaybe<StatusTextChangedEventWhereInput>;
  statustextchangedeventgroup_some?: InputMaybe<StatusTextChangedEventWhereInput>;
  terminatedleadereventgroup_every?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedleadereventgroup_none?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedleadereventgroup_some?: InputMaybe<TerminatedLeaderEventWhereInput>;
  terminatedworkereventgroup_every?: InputMaybe<TerminatedWorkerEventWhereInput>;
  terminatedworkereventgroup_none?: InputMaybe<TerminatedWorkerEventWhereInput>;
  terminatedworkereventgroup_some?: InputMaybe<TerminatedWorkerEventWhereInput>;
  upcomingworkinggroupopeninggroup_every?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeninggroup_none?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  upcomingworkinggroupopeninggroup_some?: InputMaybe<UpcomingWorkingGroupOpeningWhereInput>;
  updatedAt_eq?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_gte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt_lte?: InputMaybe<Scalars['DateTime']['input']>;
  updatedById_eq?: InputMaybe<Scalars['ID']['input']>;
  updatedById_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  vestedbudgetspendingeventgroup_every?: InputMaybe<VestedBudgetSpendingEventWhereInput>;
  vestedbudgetspendingeventgroup_none?: InputMaybe<VestedBudgetSpendingEventWhereInput>;
  vestedbudgetspendingeventgroup_some?: InputMaybe<VestedBudgetSpendingEventWhereInput>;
  workerexitedeventgroup_every?: InputMaybe<WorkerExitedEventWhereInput>;
  workerexitedeventgroup_none?: InputMaybe<WorkerExitedEventWhereInput>;
  workerexitedeventgroup_some?: InputMaybe<WorkerExitedEventWhereInput>;
  workerrewardaccountupdatedeventgroup_every?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardaccountupdatedeventgroup_none?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardaccountupdatedeventgroup_some?: InputMaybe<WorkerRewardAccountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventgroup_every?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventgroup_none?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerrewardamountupdatedeventgroup_some?: InputMaybe<WorkerRewardAmountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventgroup_every?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventgroup_none?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workerroleaccountupdatedeventgroup_some?: InputMaybe<WorkerRoleAccountUpdatedEventWhereInput>;
  workers_every?: InputMaybe<WorkerWhereInput>;
  workers_none?: InputMaybe<WorkerWhereInput>;
  workers_some?: InputMaybe<WorkerWhereInput>;
  workerstartedleavingeventgroup_every?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workerstartedleavingeventgroup_none?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workerstartedleavingeventgroup_some?: InputMaybe<WorkerStartedLeavingEventWhereInput>;
  workinggroupmetadatagroup_every?: InputMaybe<WorkingGroupMetadataWhereInput>;
  workinggroupmetadatagroup_none?: InputMaybe<WorkingGroupMetadataWhereInput>;
  workinggroupmetadatagroup_some?: InputMaybe<WorkingGroupMetadataWhereInput>;
};

export type WorkingGroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type GetBagStorageBucketsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetBagStorageBucketsQuery = { __typename?: 'Query', storageBags: Array<{ __typename?: 'StorageBag', storageBuckets: Array<{ __typename?: 'StorageBucket', id: string, operatorStatus: { __typename: 'StorageBucketOperatorStatusActive' } | { __typename: 'StorageBucketOperatorStatusInvited' } | { __typename: 'StorageBucketOperatorStatusMissing' }, operatorMetadata?: { __typename?: 'StorageBucketOperatorMetadata', nodeEndpoint?: string | null } | null }> }> };

export type GetChannelQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type GetChannelQuery = { __typename?: 'Query', channels: Array<{ __typename?: 'Channel', id: string, collaborators: Array<{ __typename?: 'Collaborator', permissions: Array<string>, memberId: string }> }> };


export const GetBagStorageBucketsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBagStorageBuckets"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storageBags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storageBuckets"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"operatorStatus"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"__typename"}}]}},{"kind":"Field","name":{"kind":"Name","value":"operatorMetadata"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodeEndpoint"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBagStorageBucketsQuery, GetBagStorageBucketsQueryVariables>;
export const GetChannelDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetChannel"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"channels"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"collaborators"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"permissions"}},{"kind":"Field","name":{"kind":"Name","value":"memberId"}}]}}]}}]}}]} as unknown as DocumentNode<GetChannelQuery, GetChannelQueryVariables>;